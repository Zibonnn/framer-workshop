"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_src_components_LinkingTest_tsx"],{

/***/ "(app-pages-browser)/./node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs":
/*!****************************************************************************!*\
  !*** ./node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MotionConfigContext: () => (/* binding */ MotionConfigContext)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n\n\n/**\n * @public\n */\nconst MotionConfigContext = (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9mcmFtZXItbW90aW9uL2Rpc3QvZXMvY29udGV4dC9Nb3Rpb25Db25maWdDb250ZXh0Lm1qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFzQzs7QUFFdEM7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLG9EQUFhO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRThCIiwic291cmNlcyI6WyIvVXNlcnMvemlib24vRG9jdW1lbnRzL1ZpYmUvQ3Vyc29yL0ZyYW1lciBXb3Jrc2hvcC9mcmFtZXItd29ya3Nob3Avbm9kZV9tb2R1bGVzL2ZyYW1lci1tb3Rpb24vZGlzdC9lcy9jb250ZXh0L01vdGlvbkNvbmZpZ0NvbnRleHQubWpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZUNvbnRleHQgfSBmcm9tICdyZWFjdCc7XG5cbi8qKlxuICogQHB1YmxpY1xuICovXG5jb25zdCBNb3Rpb25Db25maWdDb250ZXh0ID0gY3JlYXRlQ29udGV4dCh7XG4gICAgdHJhbnNmb3JtUGFnZVBvaW50OiAocCkgPT4gcCxcbiAgICBpc1N0YXRpYzogZmFsc2UsXG4gICAgcmVkdWNlZE1vdGlvbjogXCJuZXZlclwiLFxufSk7XG5cbmV4cG9ydCB7IE1vdGlvbkNvbmZpZ0NvbnRleHQgfTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/framer-motion/dist/es/frameloop/batcher.mjs":
/*!******************************************************************!*\
  !*** ./node_modules/framer-motion/dist/es/frameloop/batcher.mjs ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createRenderBatcher: () => (/* binding */ createRenderBatcher),\n/* harmony export */   stepsOrder: () => (/* binding */ stepsOrder)\n/* harmony export */ });\n/* harmony import */ var _render_step_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./render-step.mjs */ \"(app-pages-browser)/./node_modules/framer-motion/dist/es/frameloop/render-step.mjs\");\n\n\nconst stepsOrder = [\n    \"prepare\",\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0,\n        timestamp: 0,\n        isProcessing: false,\n    };\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = (0,_render_step_mjs__WEBPACK_IMPORTED_MODULE_0__.createRenderStep)(() => (runNextFrame = true));\n        return acc;\n    }, {});\n    const processStep = (stepId) => steps[stepId].process(state);\n    const processBatch = () => {\n        const timestamp = performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        stepsOrder.forEach(processStep);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => stepsOrder.forEach((key) => steps[key].cancel(process));\n    return { schedule, cancel, state, steps };\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9mcmFtZXItbW90aW9uL2Rpc3QvZXMvZnJhbWVsb29wL2JhdGNoZXIubWpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFxRDs7QUFFckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLGtFQUFnQjtBQUNuQztBQUNBLEtBQUssSUFBSTtBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSyxJQUFJO0FBQ1Q7QUFDQSxhQUFhO0FBQ2I7O0FBRTJDIiwic291cmNlcyI6WyIvVXNlcnMvemlib24vRG9jdW1lbnRzL1ZpYmUvQ3Vyc29yL0ZyYW1lciBXb3Jrc2hvcC9mcmFtZXItd29ya3Nob3Avbm9kZV9tb2R1bGVzL2ZyYW1lci1tb3Rpb24vZGlzdC9lcy9mcmFtZWxvb3AvYmF0Y2hlci5tanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlUmVuZGVyU3RlcCB9IGZyb20gJy4vcmVuZGVyLXN0ZXAubWpzJztcblxuY29uc3Qgc3RlcHNPcmRlciA9IFtcbiAgICBcInByZXBhcmVcIixcbiAgICBcInJlYWRcIixcbiAgICBcInVwZGF0ZVwiLFxuICAgIFwicHJlUmVuZGVyXCIsXG4gICAgXCJyZW5kZXJcIixcbiAgICBcInBvc3RSZW5kZXJcIixcbl07XG5jb25zdCBtYXhFbGFwc2VkID0gNDA7XG5mdW5jdGlvbiBjcmVhdGVSZW5kZXJCYXRjaGVyKHNjaGVkdWxlTmV4dEJhdGNoLCBhbGxvd0tlZXBBbGl2ZSkge1xuICAgIGxldCBydW5OZXh0RnJhbWUgPSBmYWxzZTtcbiAgICBsZXQgdXNlRGVmYXVsdEVsYXBzZWQgPSB0cnVlO1xuICAgIGNvbnN0IHN0YXRlID0ge1xuICAgICAgICBkZWx0YTogMCxcbiAgICAgICAgdGltZXN0YW1wOiAwLFxuICAgICAgICBpc1Byb2Nlc3Npbmc6IGZhbHNlLFxuICAgIH07XG4gICAgY29uc3Qgc3RlcHMgPSBzdGVwc09yZGVyLnJlZHVjZSgoYWNjLCBrZXkpID0+IHtcbiAgICAgICAgYWNjW2tleV0gPSBjcmVhdGVSZW5kZXJTdGVwKCgpID0+IChydW5OZXh0RnJhbWUgPSB0cnVlKSk7XG4gICAgICAgIHJldHVybiBhY2M7XG4gICAgfSwge30pO1xuICAgIGNvbnN0IHByb2Nlc3NTdGVwID0gKHN0ZXBJZCkgPT4gc3RlcHNbc3RlcElkXS5wcm9jZXNzKHN0YXRlKTtcbiAgICBjb25zdCBwcm9jZXNzQmF0Y2ggPSAoKSA9PiB7XG4gICAgICAgIGNvbnN0IHRpbWVzdGFtcCA9IHBlcmZvcm1hbmNlLm5vdygpO1xuICAgICAgICBydW5OZXh0RnJhbWUgPSBmYWxzZTtcbiAgICAgICAgc3RhdGUuZGVsdGEgPSB1c2VEZWZhdWx0RWxhcHNlZFxuICAgICAgICAgICAgPyAxMDAwIC8gNjBcbiAgICAgICAgICAgIDogTWF0aC5tYXgoTWF0aC5taW4odGltZXN0YW1wIC0gc3RhdGUudGltZXN0YW1wLCBtYXhFbGFwc2VkKSwgMSk7XG4gICAgICAgIHN0YXRlLnRpbWVzdGFtcCA9IHRpbWVzdGFtcDtcbiAgICAgICAgc3RhdGUuaXNQcm9jZXNzaW5nID0gdHJ1ZTtcbiAgICAgICAgc3RlcHNPcmRlci5mb3JFYWNoKHByb2Nlc3NTdGVwKTtcbiAgICAgICAgc3RhdGUuaXNQcm9jZXNzaW5nID0gZmFsc2U7XG4gICAgICAgIGlmIChydW5OZXh0RnJhbWUgJiYgYWxsb3dLZWVwQWxpdmUpIHtcbiAgICAgICAgICAgIHVzZURlZmF1bHRFbGFwc2VkID0gZmFsc2U7XG4gICAgICAgICAgICBzY2hlZHVsZU5leHRCYXRjaChwcm9jZXNzQmF0Y2gpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBjb25zdCB3YWtlID0gKCkgPT4ge1xuICAgICAgICBydW5OZXh0RnJhbWUgPSB0cnVlO1xuICAgICAgICB1c2VEZWZhdWx0RWxhcHNlZCA9IHRydWU7XG4gICAgICAgIGlmICghc3RhdGUuaXNQcm9jZXNzaW5nKSB7XG4gICAgICAgICAgICBzY2hlZHVsZU5leHRCYXRjaChwcm9jZXNzQmF0Y2gpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBjb25zdCBzY2hlZHVsZSA9IHN0ZXBzT3JkZXIucmVkdWNlKChhY2MsIGtleSkgPT4ge1xuICAgICAgICBjb25zdCBzdGVwID0gc3RlcHNba2V5XTtcbiAgICAgICAgYWNjW2tleV0gPSAocHJvY2Vzcywga2VlcEFsaXZlID0gZmFsc2UsIGltbWVkaWF0ZSA9IGZhbHNlKSA9PiB7XG4gICAgICAgICAgICBpZiAoIXJ1bk5leHRGcmFtZSlcbiAgICAgICAgICAgICAgICB3YWtlKCk7XG4gICAgICAgICAgICByZXR1cm4gc3RlcC5zY2hlZHVsZShwcm9jZXNzLCBrZWVwQWxpdmUsIGltbWVkaWF0ZSk7XG4gICAgICAgIH07XG4gICAgICAgIHJldHVybiBhY2M7XG4gICAgfSwge30pO1xuICAgIGNvbnN0IGNhbmNlbCA9IChwcm9jZXNzKSA9PiBzdGVwc09yZGVyLmZvckVhY2goKGtleSkgPT4gc3RlcHNba2V5XS5jYW5jZWwocHJvY2VzcykpO1xuICAgIHJldHVybiB7IHNjaGVkdWxlLCBjYW5jZWwsIHN0YXRlLCBzdGVwcyB9O1xufVxuXG5leHBvcnQgeyBjcmVhdGVSZW5kZXJCYXRjaGVyLCBzdGVwc09yZGVyIH07XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/framer-motion/dist/es/frameloop/batcher.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/framer-motion/dist/es/frameloop/frame.mjs":
/*!****************************************************************!*\
  !*** ./node_modules/framer-motion/dist/es/frameloop/frame.mjs ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cancelFrame: () => (/* binding */ cancelFrame),\n/* harmony export */   frame: () => (/* binding */ frame),\n/* harmony export */   frameData: () => (/* binding */ frameData),\n/* harmony export */   steps: () => (/* binding */ steps)\n/* harmony export */ });\n/* harmony import */ var _utils_noop_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/noop.mjs */ \"(app-pages-browser)/./node_modules/framer-motion/dist/es/utils/noop.mjs\");\n/* harmony import */ var _batcher_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./batcher.mjs */ \"(app-pages-browser)/./node_modules/framer-motion/dist/es/frameloop/batcher.mjs\");\n\n\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = (0,_batcher_mjs__WEBPACK_IMPORTED_MODULE_0__.createRenderBatcher)(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : _utils_noop_mjs__WEBPACK_IMPORTED_MODULE_1__.noop, true);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9mcmFtZXItbW90aW9uL2Rpc3QvZXMvZnJhbWVsb29wL2ZyYW1lLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBeUM7QUFDVzs7QUFFcEQsUUFBUSxpRUFBaUUsRUFBRSxpRUFBbUIsd0VBQXdFLGlEQUFJOztBQUUxSCIsInNvdXJjZXMiOlsiL1VzZXJzL3ppYm9uL0RvY3VtZW50cy9WaWJlL0N1cnNvci9GcmFtZXIgV29ya3Nob3AvZnJhbWVyLXdvcmtzaG9wL25vZGVfbW9kdWxlcy9mcmFtZXItbW90aW9uL2Rpc3QvZXMvZnJhbWVsb29wL2ZyYW1lLm1qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBub29wIH0gZnJvbSAnLi4vdXRpbHMvbm9vcC5tanMnO1xuaW1wb3J0IHsgY3JlYXRlUmVuZGVyQmF0Y2hlciB9IGZyb20gJy4vYmF0Y2hlci5tanMnO1xuXG5jb25zdCB7IHNjaGVkdWxlOiBmcmFtZSwgY2FuY2VsOiBjYW5jZWxGcmFtZSwgc3RhdGU6IGZyYW1lRGF0YSwgc3RlcHMsIH0gPSBjcmVhdGVSZW5kZXJCYXRjaGVyKHR5cGVvZiByZXF1ZXN0QW5pbWF0aW9uRnJhbWUgIT09IFwidW5kZWZpbmVkXCIgPyByZXF1ZXN0QW5pbWF0aW9uRnJhbWUgOiBub29wLCB0cnVlKTtcblxuZXhwb3J0IHsgY2FuY2VsRnJhbWUsIGZyYW1lLCBmcmFtZURhdGEsIHN0ZXBzIH07XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/framer-motion/dist/es/frameloop/frame.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/framer-motion/dist/es/frameloop/render-step.mjs":
/*!**********************************************************************!*\
  !*** ./node_modules/framer-motion/dist/es/frameloop/render-step.mjs ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createRenderStep: () => (/* binding */ createRenderStep)\n/* harmony export */ });\nclass Queue {\n    constructor() {\n        this.order = [];\n        this.scheduled = new Set();\n    }\n    add(process) {\n        if (!this.scheduled.has(process)) {\n            this.scheduled.add(process);\n            this.order.push(process);\n            return true;\n        }\n    }\n    remove(process) {\n        const index = this.order.indexOf(process);\n        if (index !== -1) {\n            this.order.splice(index, 1);\n            this.scheduled.delete(process);\n        }\n    }\n    clear() {\n        this.order.length = 0;\n        this.scheduled.clear();\n    }\n}\nfunction createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Queue();\n    let nextFrame = new Queue();\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (queue.add(callback) && addToCurrentFrame && isProcessing) {\n                // If we're adding it to the currently running queue, update its measured size\n                numToRun = thisFrame.order.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.remove(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            numToRun = thisFrame.order.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = thisFrame.order[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9mcmFtZXItbW90aW9uL2Rpc3QvZXMvZnJhbWVsb29wL3JlbmRlci1zdGVwLm1qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQyxjQUFjO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTs7QUFFNEIiLCJzb3VyY2VzIjpbIi9Vc2Vycy96aWJvbi9Eb2N1bWVudHMvVmliZS9DdXJzb3IvRnJhbWVyIFdvcmtzaG9wL2ZyYW1lci13b3Jrc2hvcC9ub2RlX21vZHVsZXMvZnJhbWVyLW1vdGlvbi9kaXN0L2VzL2ZyYW1lbG9vcC9yZW5kZXItc3RlcC5tanMiXSwic291cmNlc0NvbnRlbnQiOlsiY2xhc3MgUXVldWUge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLm9yZGVyID0gW107XG4gICAgICAgIHRoaXMuc2NoZWR1bGVkID0gbmV3IFNldCgpO1xuICAgIH1cbiAgICBhZGQocHJvY2Vzcykge1xuICAgICAgICBpZiAoIXRoaXMuc2NoZWR1bGVkLmhhcyhwcm9jZXNzKSkge1xuICAgICAgICAgICAgdGhpcy5zY2hlZHVsZWQuYWRkKHByb2Nlc3MpO1xuICAgICAgICAgICAgdGhpcy5vcmRlci5wdXNoKHByb2Nlc3MpO1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmVtb3ZlKHByb2Nlc3MpIHtcbiAgICAgICAgY29uc3QgaW5kZXggPSB0aGlzLm9yZGVyLmluZGV4T2YocHJvY2Vzcyk7XG4gICAgICAgIGlmIChpbmRleCAhPT0gLTEpIHtcbiAgICAgICAgICAgIHRoaXMub3JkZXIuc3BsaWNlKGluZGV4LCAxKTtcbiAgICAgICAgICAgIHRoaXMuc2NoZWR1bGVkLmRlbGV0ZShwcm9jZXNzKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBjbGVhcigpIHtcbiAgICAgICAgdGhpcy5vcmRlci5sZW5ndGggPSAwO1xuICAgICAgICB0aGlzLnNjaGVkdWxlZC5jbGVhcigpO1xuICAgIH1cbn1cbmZ1bmN0aW9uIGNyZWF0ZVJlbmRlclN0ZXAocnVuTmV4dEZyYW1lKSB7XG4gICAgLyoqXG4gICAgICogV2UgY3JlYXRlIGFuZCByZXVzZSB0d28gcXVldWVzLCBvbmUgdG8gcXVldWUgam9icyBmb3IgdGhlIGN1cnJlbnQgZnJhbWVcbiAgICAgKiBhbmQgb25lIGZvciB0aGUgbmV4dC4gV2UgcmV1c2UgdG8gYXZvaWQgdHJpZ2dlcmluZyBHQyBhZnRlciB4IGZyYW1lcy5cbiAgICAgKi9cbiAgICBsZXQgdGhpc0ZyYW1lID0gbmV3IFF1ZXVlKCk7XG4gICAgbGV0IG5leHRGcmFtZSA9IG5ldyBRdWV1ZSgpO1xuICAgIGxldCBudW1Ub1J1biA9IDA7XG4gICAgLyoqXG4gICAgICogVHJhY2sgd2hldGhlciB3ZSdyZSBjdXJyZW50bHkgcHJvY2Vzc2luZyBqb2JzIGluIHRoaXMgc3RlcC4gVGhpcyB3YXlcbiAgICAgKiB3ZSBjYW4gZGVjaWRlIHdoZXRoZXIgdG8gc2NoZWR1bGUgbmV3IGpvYnMgZm9yIHRoaXMgZnJhbWUgb3IgbmV4dC5cbiAgICAgKi9cbiAgICBsZXQgaXNQcm9jZXNzaW5nID0gZmFsc2U7XG4gICAgbGV0IGZsdXNoTmV4dEZyYW1lID0gZmFsc2U7XG4gICAgLyoqXG4gICAgICogQSBzZXQgb2YgcHJvY2Vzc2VzIHdoaWNoIHdlcmUgbWFya2VkIGtlZXBBbGl2ZSB3aGVuIHNjaGVkdWxlZC5cbiAgICAgKi9cbiAgICBjb25zdCB0b0tlZXBBbGl2ZSA9IG5ldyBXZWFrU2V0KCk7XG4gICAgY29uc3Qgc3RlcCA9IHtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIFNjaGVkdWxlIGEgcHJvY2VzcyB0byBydW4gb24gdGhlIG5leHQgZnJhbWUuXG4gICAgICAgICAqL1xuICAgICAgICBzY2hlZHVsZTogKGNhbGxiYWNrLCBrZWVwQWxpdmUgPSBmYWxzZSwgaW1tZWRpYXRlID0gZmFsc2UpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGFkZFRvQ3VycmVudEZyYW1lID0gaW1tZWRpYXRlICYmIGlzUHJvY2Vzc2luZztcbiAgICAgICAgICAgIGNvbnN0IHF1ZXVlID0gYWRkVG9DdXJyZW50RnJhbWUgPyB0aGlzRnJhbWUgOiBuZXh0RnJhbWU7XG4gICAgICAgICAgICBpZiAoa2VlcEFsaXZlKVxuICAgICAgICAgICAgICAgIHRvS2VlcEFsaXZlLmFkZChjYWxsYmFjayk7XG4gICAgICAgICAgICBpZiAocXVldWUuYWRkKGNhbGxiYWNrKSAmJiBhZGRUb0N1cnJlbnRGcmFtZSAmJiBpc1Byb2Nlc3NpbmcpIHtcbiAgICAgICAgICAgICAgICAvLyBJZiB3ZSdyZSBhZGRpbmcgaXQgdG8gdGhlIGN1cnJlbnRseSBydW5uaW5nIHF1ZXVlLCB1cGRhdGUgaXRzIG1lYXN1cmVkIHNpemVcbiAgICAgICAgICAgICAgICBudW1Ub1J1biA9IHRoaXNGcmFtZS5vcmRlci5sZW5ndGg7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gY2FsbGJhY2s7XG4gICAgICAgIH0sXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBDYW5jZWwgdGhlIHByb3ZpZGVkIGNhbGxiYWNrIGZyb20gcnVubmluZyBvbiB0aGUgbmV4dCBmcmFtZS5cbiAgICAgICAgICovXG4gICAgICAgIGNhbmNlbDogKGNhbGxiYWNrKSA9PiB7XG4gICAgICAgICAgICBuZXh0RnJhbWUucmVtb3ZlKGNhbGxiYWNrKTtcbiAgICAgICAgICAgIHRvS2VlcEFsaXZlLmRlbGV0ZShjYWxsYmFjayk7XG4gICAgICAgIH0sXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBFeGVjdXRlIGFsbCBzY2hlZHVsZSBjYWxsYmFja3MuXG4gICAgICAgICAqL1xuICAgICAgICBwcm9jZXNzOiAoZnJhbWVEYXRhKSA9PiB7XG4gICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAqIElmIHdlJ3JlIGFscmVhZHkgcHJvY2Vzc2luZyB3ZSd2ZSBwcm9iYWJseSBiZWVuIHRyaWdnZXJlZCBieSBhIGZsdXNoU3luY1xuICAgICAgICAgICAgICogaW5zaWRlIGFuIGV4aXN0aW5nIHByb2Nlc3MuIEluc3RlYWQgb2YgZXhlY3V0aW5nLCBtYXJrIGZsdXNoTmV4dEZyYW1lXG4gICAgICAgICAgICAgKiBhcyB0cnVlIGFuZCBlbnN1cmUgd2UgZmx1c2ggdGhlIGZvbGxvd2luZyBmcmFtZSBhdCB0aGUgZW5kIG9mIHRoaXMgb25lLlxuICAgICAgICAgICAgICovXG4gICAgICAgICAgICBpZiAoaXNQcm9jZXNzaW5nKSB7XG4gICAgICAgICAgICAgICAgZmx1c2hOZXh0RnJhbWUgPSB0cnVlO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlzUHJvY2Vzc2luZyA9IHRydWU7XG4gICAgICAgICAgICBbdGhpc0ZyYW1lLCBuZXh0RnJhbWVdID0gW25leHRGcmFtZSwgdGhpc0ZyYW1lXTtcbiAgICAgICAgICAgIC8vIENsZWFyIHRoZSBuZXh0IGZyYW1lIHF1ZXVlXG4gICAgICAgICAgICBuZXh0RnJhbWUuY2xlYXIoKTtcbiAgICAgICAgICAgIC8vIEV4ZWN1dGUgdGhpcyBmcmFtZVxuICAgICAgICAgICAgbnVtVG9SdW4gPSB0aGlzRnJhbWUub3JkZXIubGVuZ3RoO1xuICAgICAgICAgICAgaWYgKG51bVRvUnVuKSB7XG4gICAgICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBudW1Ub1J1bjsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGNhbGxiYWNrID0gdGhpc0ZyYW1lLm9yZGVyW2ldO1xuICAgICAgICAgICAgICAgICAgICBjYWxsYmFjayhmcmFtZURhdGEpO1xuICAgICAgICAgICAgICAgICAgICBpZiAodG9LZWVwQWxpdmUuaGFzKGNhbGxiYWNrKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgc3RlcC5zY2hlZHVsZShjYWxsYmFjayk7XG4gICAgICAgICAgICAgICAgICAgICAgICBydW5OZXh0RnJhbWUoKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlzUHJvY2Vzc2luZyA9IGZhbHNlO1xuICAgICAgICAgICAgaWYgKGZsdXNoTmV4dEZyYW1lKSB7XG4gICAgICAgICAgICAgICAgZmx1c2hOZXh0RnJhbWUgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICBzdGVwLnByb2Nlc3MoZnJhbWVEYXRhKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICB9O1xuICAgIHJldHVybiBzdGVwO1xufVxuXG5leHBvcnQgeyBjcmVhdGVSZW5kZXJTdGVwIH07XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/framer-motion/dist/es/frameloop/render-step.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/framer-motion/dist/es/utils/array.mjs":
/*!************************************************************!*\
  !*** ./node_modules/framer-motion/dist/es/utils/array.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addUniqueItem: () => (/* binding */ addUniqueItem),\n/* harmony export */   moveItem: () => (/* binding */ moveItem),\n/* harmony export */   removeItem: () => (/* binding */ removeItem)\n/* harmony export */ });\nfunction addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9mcmFtZXItbW90aW9uL2Rpc3QvZXMvdXRpbHMvYXJyYXkubWpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUUrQyIsInNvdXJjZXMiOlsiL1VzZXJzL3ppYm9uL0RvY3VtZW50cy9WaWJlL0N1cnNvci9GcmFtZXIgV29ya3Nob3AvZnJhbWVyLXdvcmtzaG9wL25vZGVfbW9kdWxlcy9mcmFtZXItbW90aW9uL2Rpc3QvZXMvdXRpbHMvYXJyYXkubWpzIl0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIGFkZFVuaXF1ZUl0ZW0oYXJyLCBpdGVtKSB7XG4gICAgaWYgKGFyci5pbmRleE9mKGl0ZW0pID09PSAtMSlcbiAgICAgICAgYXJyLnB1c2goaXRlbSk7XG59XG5mdW5jdGlvbiByZW1vdmVJdGVtKGFyciwgaXRlbSkge1xuICAgIGNvbnN0IGluZGV4ID0gYXJyLmluZGV4T2YoaXRlbSk7XG4gICAgaWYgKGluZGV4ID4gLTEpXG4gICAgICAgIGFyci5zcGxpY2UoaW5kZXgsIDEpO1xufVxuLy8gQWRhcHRlZCBmcm9tIGFycmF5LW1vdmVcbmZ1bmN0aW9uIG1vdmVJdGVtKFsuLi5hcnJdLCBmcm9tSW5kZXgsIHRvSW5kZXgpIHtcbiAgICBjb25zdCBzdGFydEluZGV4ID0gZnJvbUluZGV4IDwgMCA/IGFyci5sZW5ndGggKyBmcm9tSW5kZXggOiBmcm9tSW5kZXg7XG4gICAgaWYgKHN0YXJ0SW5kZXggPj0gMCAmJiBzdGFydEluZGV4IDwgYXJyLmxlbmd0aCkge1xuICAgICAgICBjb25zdCBlbmRJbmRleCA9IHRvSW5kZXggPCAwID8gYXJyLmxlbmd0aCArIHRvSW5kZXggOiB0b0luZGV4O1xuICAgICAgICBjb25zdCBbaXRlbV0gPSBhcnIuc3BsaWNlKGZyb21JbmRleCwgMSk7XG4gICAgICAgIGFyci5zcGxpY2UoZW5kSW5kZXgsIDAsIGl0ZW0pO1xuICAgIH1cbiAgICByZXR1cm4gYXJyO1xufVxuXG5leHBvcnQgeyBhZGRVbmlxdWVJdGVtLCBtb3ZlSXRlbSwgcmVtb3ZlSXRlbSB9O1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/framer-motion/dist/es/utils/array.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/framer-motion/dist/es/utils/noop.mjs":
/*!***********************************************************!*\
  !*** ./node_modules/framer-motion/dist/es/utils/noop.mjs ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   noop: () => (/* binding */ noop)\n/* harmony export */ });\nconst noop = (any) => any;\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9mcmFtZXItbW90aW9uL2Rpc3QvZXMvdXRpbHMvbm9vcC5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBOztBQUVnQiIsInNvdXJjZXMiOlsiL1VzZXJzL3ppYm9uL0RvY3VtZW50cy9WaWJlL0N1cnNvci9GcmFtZXIgV29ya3Nob3AvZnJhbWVyLXdvcmtzaG9wL25vZGVfbW9kdWxlcy9mcmFtZXItbW90aW9uL2Rpc3QvZXMvdXRpbHMvbm9vcC5tanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3Qgbm9vcCA9IChhbnkpID0+IGFueTtcblxuZXhwb3J0IHsgbm9vcCB9O1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/framer-motion/dist/es/utils/noop.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/framer-motion/dist/es/utils/subscription-manager.mjs":
/*!***************************************************************************!*\
  !*** ./node_modules/framer-motion/dist/es/utils/subscription-manager.mjs ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SubscriptionManager: () => (/* binding */ SubscriptionManager)\n/* harmony export */ });\n/* harmony import */ var _array_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./array.mjs */ \"(app-pages-browser)/./node_modules/framer-motion/dist/es/utils/array.mjs\");\n\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        (0,_array_mjs__WEBPACK_IMPORTED_MODULE_0__.addUniqueItem)(this.subscriptions, handler);\n        return () => (0,_array_mjs__WEBPACK_IMPORTED_MODULE_0__.removeItem)(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9mcmFtZXItbW90aW9uL2Rpc3QvZXMvdXRpbHMvc3Vic2NyaXB0aW9uLW1hbmFnZXIubWpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXdEOztBQUV4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSx5REFBYTtBQUNyQixxQkFBcUIsc0RBQVU7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLHNCQUFzQjtBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFK0IiLCJzb3VyY2VzIjpbIi9Vc2Vycy96aWJvbi9Eb2N1bWVudHMvVmliZS9DdXJzb3IvRnJhbWVyIFdvcmtzaG9wL2ZyYW1lci13b3Jrc2hvcC9ub2RlX21vZHVsZXMvZnJhbWVyLW1vdGlvbi9kaXN0L2VzL3V0aWxzL3N1YnNjcmlwdGlvbi1tYW5hZ2VyLm1qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBhZGRVbmlxdWVJdGVtLCByZW1vdmVJdGVtIH0gZnJvbSAnLi9hcnJheS5tanMnO1xuXG5jbGFzcyBTdWJzY3JpcHRpb25NYW5hZ2VyIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy5zdWJzY3JpcHRpb25zID0gW107XG4gICAgfVxuICAgIGFkZChoYW5kbGVyKSB7XG4gICAgICAgIGFkZFVuaXF1ZUl0ZW0odGhpcy5zdWJzY3JpcHRpb25zLCBoYW5kbGVyKTtcbiAgICAgICAgcmV0dXJuICgpID0+IHJlbW92ZUl0ZW0odGhpcy5zdWJzY3JpcHRpb25zLCBoYW5kbGVyKTtcbiAgICB9XG4gICAgbm90aWZ5KGEsIGIsIGMpIHtcbiAgICAgICAgY29uc3QgbnVtU3Vic2NyaXB0aW9ucyA9IHRoaXMuc3Vic2NyaXB0aW9ucy5sZW5ndGg7XG4gICAgICAgIGlmICghbnVtU3Vic2NyaXB0aW9ucylcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgaWYgKG51bVN1YnNjcmlwdGlvbnMgPT09IDEpIHtcbiAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICogSWYgdGhlcmUncyBvbmx5IGEgc2luZ2xlIGhhbmRsZXIgd2UgY2FuIGp1c3QgY2FsbCBpdCB3aXRob3V0IGludm9raW5nIGEgbG9vcC5cbiAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgdGhpcy5zdWJzY3JpcHRpb25zWzBdKGEsIGIsIGMpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBudW1TdWJzY3JpcHRpb25zOyBpKyspIHtcbiAgICAgICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAgICAgKiBDaGVjayB3aGV0aGVyIHRoZSBoYW5kbGVyIGV4aXN0cyBiZWZvcmUgZmlyaW5nIGFzIGl0J3MgcG9zc2libGVcbiAgICAgICAgICAgICAgICAgKiB0aGUgc3Vic2NyaXB0aW9ucyB3ZXJlIG1vZGlmaWVkIGR1cmluZyB0aGlzIGxvb3AgcnVubmluZy5cbiAgICAgICAgICAgICAgICAgKi9cbiAgICAgICAgICAgICAgICBjb25zdCBoYW5kbGVyID0gdGhpcy5zdWJzY3JpcHRpb25zW2ldO1xuICAgICAgICAgICAgICAgIGhhbmRsZXIgJiYgaGFuZGxlcihhLCBiLCBjKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBnZXRTaXplKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5zdWJzY3JpcHRpb25zLmxlbmd0aDtcbiAgICB9XG4gICAgY2xlYXIoKSB7XG4gICAgICAgIHRoaXMuc3Vic2NyaXB0aW9ucy5sZW5ndGggPSAwO1xuICAgIH1cbn1cblxuZXhwb3J0IHsgU3Vic2NyaXB0aW9uTWFuYWdlciB9O1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/framer-motion/dist/es/utils/subscription-manager.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/framer-motion/dist/es/utils/use-constant.mjs":
/*!*******************************************************************!*\
  !*** ./node_modules/framer-motion/dist/es/utils/use-constant.mjs ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useConstant: () => (/* binding */ useConstant)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9mcmFtZXItbW90aW9uL2Rpc3QvZXMvdXRpbHMvdXNlLWNvbnN0YW50Lm1qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUErQjs7QUFFL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQiw2Q0FBTTtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUV1QiIsInNvdXJjZXMiOlsiL1VzZXJzL3ppYm9uL0RvY3VtZW50cy9WaWJlL0N1cnNvci9GcmFtZXIgV29ya3Nob3AvZnJhbWVyLXdvcmtzaG9wL25vZGVfbW9kdWxlcy9mcmFtZXItbW90aW9uL2Rpc3QvZXMvdXRpbHMvdXNlLWNvbnN0YW50Lm1qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VSZWYgfSBmcm9tICdyZWFjdCc7XG5cbi8qKlxuICogQ3JlYXRlcyBhIGNvbnN0YW50IHZhbHVlIG92ZXIgdGhlIGxpZmVjeWNsZSBvZiBhIGNvbXBvbmVudC5cbiAqXG4gKiBFdmVuIGlmIGB1c2VNZW1vYCBpcyBwcm92aWRlZCBhbiBlbXB0eSBhcnJheSBhcyBpdHMgZmluYWwgYXJndW1lbnQsIGl0IGRvZXNuJ3Qgb2ZmZXJcbiAqIGEgZ3VhcmFudGVlIHRoYXQgaXQgd29uJ3QgcmUtcnVuIGZvciBwZXJmb3JtYW5jZSByZWFzb25zIGxhdGVyIG9uLiBCeSB1c2luZyBgdXNlQ29uc3RhbnRgXG4gKiB5b3UgY2FuIGVuc3VyZSB0aGF0IGluaXRpYWxpc2VycyBkb24ndCBleGVjdXRlIHR3aWNlIG9yIG1vcmUuXG4gKi9cbmZ1bmN0aW9uIHVzZUNvbnN0YW50KGluaXQpIHtcbiAgICBjb25zdCByZWYgPSB1c2VSZWYobnVsbCk7XG4gICAgaWYgKHJlZi5jdXJyZW50ID09PSBudWxsKSB7XG4gICAgICAgIHJlZi5jdXJyZW50ID0gaW5pdCgpO1xuICAgIH1cbiAgICByZXR1cm4gcmVmLmN1cnJlbnQ7XG59XG5cbmV4cG9ydCB7IHVzZUNvbnN0YW50IH07XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/framer-motion/dist/es/utils/use-constant.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs":
/*!**************************************************************************!*\
  !*** ./node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   velocityPerSecond: () => (/* binding */ velocityPerSecond)\n/* harmony export */ });\n/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9mcmFtZXItbW90aW9uL2Rpc3QvZXMvdXRpbHMvdmVsb2NpdHktcGVyLXNlY29uZC5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUU2QiIsInNvdXJjZXMiOlsiL1VzZXJzL3ppYm9uL0RvY3VtZW50cy9WaWJlL0N1cnNvci9GcmFtZXIgV29ya3Nob3AvZnJhbWVyLXdvcmtzaG9wL25vZGVfbW9kdWxlcy9mcmFtZXItbW90aW9uL2Rpc3QvZXMvdXRpbHMvdmVsb2NpdHktcGVyLXNlY29uZC5tanMiXSwic291cmNlc0NvbnRlbnQiOlsiLypcbiAgQ29udmVydCB2ZWxvY2l0eSBpbnRvIHZlbG9jaXR5IHBlciBzZWNvbmRcblxuICBAcGFyYW0gW251bWJlcl06IFVuaXQgcGVyIGZyYW1lXG4gIEBwYXJhbSBbbnVtYmVyXTogRnJhbWUgZHVyYXRpb24gaW4gbXNcbiovXG5mdW5jdGlvbiB2ZWxvY2l0eVBlclNlY29uZCh2ZWxvY2l0eSwgZnJhbWVEdXJhdGlvbikge1xuICAgIHJldHVybiBmcmFtZUR1cmF0aW9uID8gdmVsb2NpdHkgKiAoMTAwMCAvIGZyYW1lRHVyYXRpb24pIDogMDtcbn1cblxuZXhwb3J0IHsgdmVsb2NpdHlQZXJTZWNvbmQgfTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/framer-motion/dist/es/utils/warn-once.mjs":
/*!****************************************************************!*\
  !*** ./node_modules/framer-motion/dist/es/utils/warn-once.mjs ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   warnOnce: () => (/* binding */ warnOnce)\n/* harmony export */ });\nconst warned = new Set();\nfunction warnOnce(condition, message, element) {\n    if (condition || warned.has(message))\n        return;\n    console.warn(message);\n    if (element)\n        console.warn(element);\n    warned.add(message);\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9mcmFtZXItbW90aW9uL2Rpc3QvZXMvdXRpbHMvd2Fybi1vbmNlLm1qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVvQiIsInNvdXJjZXMiOlsiL1VzZXJzL3ppYm9uL0RvY3VtZW50cy9WaWJlL0N1cnNvci9GcmFtZXIgV29ya3Nob3AvZnJhbWVyLXdvcmtzaG9wL25vZGVfbW9kdWxlcy9mcmFtZXItbW90aW9uL2Rpc3QvZXMvdXRpbHMvd2Fybi1vbmNlLm1qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB3YXJuZWQgPSBuZXcgU2V0KCk7XG5mdW5jdGlvbiB3YXJuT25jZShjb25kaXRpb24sIG1lc3NhZ2UsIGVsZW1lbnQpIHtcbiAgICBpZiAoY29uZGl0aW9uIHx8IHdhcm5lZC5oYXMobWVzc2FnZSkpXG4gICAgICAgIHJldHVybjtcbiAgICBjb25zb2xlLndhcm4obWVzc2FnZSk7XG4gICAgaWYgKGVsZW1lbnQpXG4gICAgICAgIGNvbnNvbGUud2FybihlbGVtZW50KTtcbiAgICB3YXJuZWQuYWRkKG1lc3NhZ2UpO1xufVxuXG5leHBvcnQgeyB3YXJuT25jZSB9O1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/framer-motion/dist/es/utils/warn-once.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/framer-motion/dist/es/value/index.mjs":
/*!************************************************************!*\
  !*** ./node_modules/framer-motion/dist/es/value/index.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MotionValue: () => (/* binding */ MotionValue),\n/* harmony export */   collectMotionValues: () => (/* binding */ collectMotionValues),\n/* harmony export */   motionValue: () => (/* binding */ motionValue)\n/* harmony export */ });\n/* harmony import */ var _utils_subscription_manager_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/subscription-manager.mjs */ \"(app-pages-browser)/./node_modules/framer-motion/dist/es/utils/subscription-manager.mjs\");\n/* harmony import */ var _utils_velocity_per_second_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/velocity-per-second.mjs */ \"(app-pages-browser)/./node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs\");\n/* harmony import */ var _utils_warn_once_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/warn-once.mjs */ \"(app-pages-browser)/./node_modules/framer-motion/dist/es/utils/warn-once.mjs\");\n/* harmony import */ var _frameloop_frame_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../frameloop/frame.mjs */ \"(app-pages-browser)/./node_modules/framer-motion/dist/es/frameloop/frame.mjs\");\n\n\n\n\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.18.0\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = _frameloop_frame_mjs__WEBPACK_IMPORTED_MODULE_0__.frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                _frameloop_frame_mjs__WEBPACK_IMPORTED_MODULE_0__.frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => _frameloop_frame_mjs__WEBPACK_IMPORTED_MODULE_0__.frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (true) {\n            (0,_utils_warn_once_mjs__WEBPACK_IMPORTED_MODULE_1__.warnOnce)(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new _utils_subscription_manager_mjs__WEBPACK_IMPORTED_MODULE_2__.SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                _frameloop_frame_mjs__WEBPACK_IMPORTED_MODULE_0__.frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                (0,_utils_velocity_per_second_mjs__WEBPACK_IMPORTED_MODULE_3__.velocityPerSecond)(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/framer-motion/dist/es/value/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/framer-motion/dist/es/value/use-motion-value.mjs":
/*!***********************************************************************!*\
  !*** ./node_modules/framer-motion/dist/es/value/use-motion-value.mjs ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useMotionValue: () => (/* binding */ useMotionValue)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var _index_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./index.mjs */ \"(app-pages-browser)/./node_modules/framer-motion/dist/es/value/index.mjs\");\n/* harmony import */ var _context_MotionConfigContext_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../context/MotionConfigContext.mjs */ \"(app-pages-browser)/./node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs\");\n/* harmony import */ var _utils_use_constant_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/use-constant.mjs */ \"(app-pages-browser)/./node_modules/framer-motion/dist/es/utils/use-constant.mjs\");\n\n\n\n\n\n/**\n * Creates a `MotionValue` to track the state and velocity of a value.\n *\n * Usually, these are created automatically. For advanced use-cases, like use with `useTransform`, you can create `MotionValue`s externally and pass them into the animated component via the `style` prop.\n *\n * ```jsx\n * export const MyComponent = () => {\n *   const scale = useMotionValue(1)\n *\n *   return <motion.div style={{ scale }} />\n * }\n * ```\n *\n * @param initial - The initial state.\n *\n * @public\n */\nfunction useMotionValue(initial) {\n    const value = (0,_utils_use_constant_mjs__WEBPACK_IMPORTED_MODULE_1__.useConstant)(() => (0,_index_mjs__WEBPACK_IMPORTED_MODULE_2__.motionValue)(initial));\n    /**\n     * If this motion value is being used in static mode, like on\n     * the Framer canvas, force components to rerender when the motion\n     * value is updated.\n     */\n    const { isStatic } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_context_MotionConfigContext_mjs__WEBPACK_IMPORTED_MODULE_3__.MotionConfigContext);\n    if (isStatic) {\n        const [, setLatest] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(initial);\n        (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => value.on(\"change\", setLatest), []);\n    }\n    return value;\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9mcmFtZXItbW90aW9uL2Rpc3QvZXMvdmFsdWUvdXNlLW1vdGlvbi12YWx1ZS5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBd0Q7QUFDZDtBQUMrQjtBQUNqQjs7QUFFeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDLFNBQVM7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixvRUFBVyxPQUFPLHVEQUFXO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLFdBQVcsRUFBRSxpREFBVSxDQUFDLGlGQUFtQjtBQUN2RDtBQUNBLDhCQUE4QiwrQ0FBUTtBQUN0QyxRQUFRLGdEQUFTO0FBQ2pCO0FBQ0E7QUFDQTs7QUFFMEIiLCJzb3VyY2VzIjpbIi9Vc2Vycy96aWJvbi9Eb2N1bWVudHMvVmliZS9DdXJzb3IvRnJhbWVyIFdvcmtzaG9wL2ZyYW1lci13b3Jrc2hvcC9ub2RlX21vZHVsZXMvZnJhbWVyLW1vdGlvbi9kaXN0L2VzL3ZhbHVlL3VzZS1tb3Rpb24tdmFsdWUubWpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZUNvbnRleHQsIHVzZVN0YXRlLCB1c2VFZmZlY3QgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBtb3Rpb25WYWx1ZSB9IGZyb20gJy4vaW5kZXgubWpzJztcbmltcG9ydCB7IE1vdGlvbkNvbmZpZ0NvbnRleHQgfSBmcm9tICcuLi9jb250ZXh0L01vdGlvbkNvbmZpZ0NvbnRleHQubWpzJztcbmltcG9ydCB7IHVzZUNvbnN0YW50IH0gZnJvbSAnLi4vdXRpbHMvdXNlLWNvbnN0YW50Lm1qcyc7XG5cbi8qKlxuICogQ3JlYXRlcyBhIGBNb3Rpb25WYWx1ZWAgdG8gdHJhY2sgdGhlIHN0YXRlIGFuZCB2ZWxvY2l0eSBvZiBhIHZhbHVlLlxuICpcbiAqIFVzdWFsbHksIHRoZXNlIGFyZSBjcmVhdGVkIGF1dG9tYXRpY2FsbHkuIEZvciBhZHZhbmNlZCB1c2UtY2FzZXMsIGxpa2UgdXNlIHdpdGggYHVzZVRyYW5zZm9ybWAsIHlvdSBjYW4gY3JlYXRlIGBNb3Rpb25WYWx1ZWBzIGV4dGVybmFsbHkgYW5kIHBhc3MgdGhlbSBpbnRvIHRoZSBhbmltYXRlZCBjb21wb25lbnQgdmlhIHRoZSBgc3R5bGVgIHByb3AuXG4gKlxuICogYGBganN4XG4gKiBleHBvcnQgY29uc3QgTXlDb21wb25lbnQgPSAoKSA9PiB7XG4gKiAgIGNvbnN0IHNjYWxlID0gdXNlTW90aW9uVmFsdWUoMSlcbiAqXG4gKiAgIHJldHVybiA8bW90aW9uLmRpdiBzdHlsZT17eyBzY2FsZSB9fSAvPlxuICogfVxuICogYGBgXG4gKlxuICogQHBhcmFtIGluaXRpYWwgLSBUaGUgaW5pdGlhbCBzdGF0ZS5cbiAqXG4gKiBAcHVibGljXG4gKi9cbmZ1bmN0aW9uIHVzZU1vdGlvblZhbHVlKGluaXRpYWwpIHtcbiAgICBjb25zdCB2YWx1ZSA9IHVzZUNvbnN0YW50KCgpID0+IG1vdGlvblZhbHVlKGluaXRpYWwpKTtcbiAgICAvKipcbiAgICAgKiBJZiB0aGlzIG1vdGlvbiB2YWx1ZSBpcyBiZWluZyB1c2VkIGluIHN0YXRpYyBtb2RlLCBsaWtlIG9uXG4gICAgICogdGhlIEZyYW1lciBjYW52YXMsIGZvcmNlIGNvbXBvbmVudHMgdG8gcmVyZW5kZXIgd2hlbiB0aGUgbW90aW9uXG4gICAgICogdmFsdWUgaXMgdXBkYXRlZC5cbiAgICAgKi9cbiAgICBjb25zdCB7IGlzU3RhdGljIH0gPSB1c2VDb250ZXh0KE1vdGlvbkNvbmZpZ0NvbnRleHQpO1xuICAgIGlmIChpc1N0YXRpYykge1xuICAgICAgICBjb25zdCBbLCBzZXRMYXRlc3RdID0gdXNlU3RhdGUoaW5pdGlhbCk7XG4gICAgICAgIHVzZUVmZmVjdCgoKSA9PiB2YWx1ZS5vbihcImNoYW5nZVwiLCBzZXRMYXRlc3QpLCBbXSk7XG4gICAgfVxuICAgIHJldHVybiB2YWx1ZTtcbn1cblxuZXhwb3J0IHsgdXNlTW90aW9uVmFsdWUgfTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/framer-motion/dist/es/value/use-motion-value.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/framer/build/esm/framer.debug.js":
/*!*******************************************************!*\
  !*** ./node_modules/framer/build/esm/framer.debug.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Animatable: () => (/* binding */ Animatable),\n/* harmony export */   AnimatePresence: () => (/* binding */ AnimatePresence),\n/* harmony export */   AnimateSharedLayout: () => (/* binding */ AnimateSharedLayout),\n/* harmony export */   AnyInterpolation: () => (/* binding */ AnyInterpolation),\n/* harmony export */   AutomaticLayoutIds: () => (/* binding */ AutomaticLayoutIds),\n/* harmony export */   BackgroundImage: () => (/* binding */ BackgroundImage),\n/* harmony export */   BezierAnimator: () => (/* binding */ BezierAnimator),\n/* harmony export */   BoxShadow: () => (/* binding */ BoxShadow),\n/* harmony export */   CanvasStore: () => (/* binding */ CanvasStore),\n/* harmony export */   Color: () => (/* binding */ Color),\n/* harmony export */   ColorFormat: () => (/* binding */ ColorFormat),\n/* harmony export */   ColorMixModelType: () => (/* binding */ ColorMixModelType),\n/* harmony export */   ComponentContainerContext: () => (/* binding */ ComponentContainerContext),\n/* harmony export */   ConstraintMask: () => (/* binding */ ConstraintMask),\n/* harmony export */   ConstraintValues: () => (/* binding */ ConstraintValues),\n/* harmony export */   Container: () => (/* binding */ Container),\n/* harmony export */   ControlType: () => (/* binding */ ControlType),\n/* harmony export */   ConvertColor: () => (/* binding */ ConvertColor),\n/* harmony export */   CustomProperties: () => (/* binding */ CustomProperties),\n/* harmony export */   CustomPropertiesContext: () => (/* binding */ CustomPropertiesContext),\n/* harmony export */   CycleVariantState: () => (/* binding */ CycleVariantState),\n/* harmony export */   DOM: () => (/* binding */ DOM),\n/* harmony export */   Data: () => (/* binding */ Data),\n/* harmony export */   DataContext: () => (/* binding */ DataContext),\n/* harmony export */   DataObserver: () => (/* binding */ DataObserver),\n/* harmony export */   DataObserverContext: () => (/* binding */ DataObserverContext),\n/* harmony export */   DeprecatedComponentContainer: () => (/* binding */ DeprecatedComponentContainer),\n/* harmony export */   DeprecatedFrameWithEvents: () => (/* binding */ DeprecatedFrameWithEvents),\n/* harmony export */   DimensionType: () => (/* binding */ DimensionType),\n/* harmony export */   DragControls: () => (/* binding */ DragControls),\n/* harmony export */   Draggable: () => (/* binding */ Draggable),\n/* harmony export */   EmptyState: () => (/* binding */ EmptyState),\n/* harmony export */   FlatTree: () => (/* binding */ FlatTree),\n/* harmony export */   Frame: () => (/* binding */ Frame),\n/* harmony export */   FrameWithMotion: () => (/* binding */ FrameWithMotion),\n/* harmony export */   FramerAnimation: () => (/* binding */ FramerAnimation),\n/* harmony export */   FramerEvent: () => (/* binding */ FramerEvent),\n/* harmony export */   FramerEventListener: () => (/* binding */ FramerEventListener),\n/* harmony export */   FramerEventSession: () => (/* binding */ FramerEventSession),\n/* harmony export */   FramerTreeLayoutContext: () => (/* binding */ FramerTreeLayoutContext),\n/* harmony export */   GamepadContext: () => (/* binding */ GamepadContext),\n/* harmony export */   Image: () => (/* binding */ Image2),\n/* harmony export */   InternalID: () => (/* binding */ InternalID),\n/* harmony export */   Layer: () => (/* binding */ Layer),\n/* harmony export */   LayoutGroup: () => (/* binding */ LayoutGroup),\n/* harmony export */   LayoutGroupContext: () => (/* binding */ LayoutGroupContext),\n/* harmony export */   LayoutIdContext: () => (/* binding */ LayoutIdContext),\n/* harmony export */   LazyMotion: () => (/* binding */ LazyMotion),\n/* harmony export */   Line: () => (/* binding */ Line),\n/* harmony export */   LinearGradient: () => (/* binding */ LinearGradient),\n/* harmony export */   MainLoop: () => (/* binding */ MainLoop),\n/* harmony export */   MotionConfig: () => (/* binding */ MotionConfig),\n/* harmony export */   MotionConfigContext: () => (/* binding */ MotionConfigContext),\n/* harmony export */   MotionSetup: () => (/* binding */ MotionSetup),\n/* harmony export */   MotionValue: () => (/* binding */ MotionValue),\n/* harmony export */   NavigateTo: () => (/* binding */ NavigateTo),\n/* harmony export */   Navigation: () => (/* binding */ Navigation),\n/* harmony export */   NavigationCallbackProvider: () => (/* binding */ NavigationCallbackProvider),\n/* harmony export */   NavigationConsumer: () => (/* binding */ NavigationConsumer),\n/* harmony export */   NavigationTransitionType: () => (/* binding */ NavigationTransitionType),\n/* harmony export */   ObservableObject: () => (/* binding */ ObservableObject),\n/* harmony export */   Page: () => (/* binding */ Page),\n/* harmony export */   ParentSizeState: () => (/* binding */ ParentSizeState),\n/* harmony export */   PathSegment: () => (/* binding */ PathSegment),\n/* harmony export */   Point: () => (/* binding */ Point),\n/* harmony export */   PresenceContext: () => (/* binding */ PresenceContext),\n/* harmony export */   PropertyStore: () => (/* binding */ PropertyStore),\n/* harmony export */   ProvideParentSize: () => (/* binding */ ProvideParentSize),\n/* harmony export */   RadialGradient: () => (/* binding */ RadialGradient),\n/* harmony export */   Rect: () => (/* binding */ Rect),\n/* harmony export */   RenderNodeProvider: () => (/* binding */ RenderNodeProvider),\n/* harmony export */   RenderTarget: () => (/* binding */ RenderTarget),\n/* harmony export */   SVG: () => (/* binding */ SVG),\n/* harmony export */   Scroll: () => (/* binding */ Scroll),\n/* harmony export */   Shadow: () => (/* binding */ Shadow),\n/* harmony export */   SharedLayoutContext: () => (/* binding */ SharedLayoutContext),\n/* harmony export */   Size: () => (/* binding */ Size),\n/* harmony export */   SpringAnimator: () => (/* binding */ SpringAnimator),\n/* harmony export */   Stack: () => (/* binding */ Stack),\n/* harmony export */   Text: () => (/* binding */ Text),\n/* harmony export */   TypefaceSourceNames: () => (/* binding */ TypefaceSourceNames),\n/* harmony export */   ValueInterpolation: () => (/* binding */ ValueInterpolation),\n/* harmony export */   VariantSelector: () => (/* binding */ VariantSelector),\n/* harmony export */   Vector: () => (/* binding */ Vector),\n/* harmony export */   VectorGroup: () => (/* binding */ VectorGroup),\n/* harmony export */   VisibilityAction: () => (/* binding */ VisibilityAction),\n/* harmony export */   WithNavigator: () => (/* binding */ WithNavigator),\n/* harmony export */   WithOverride: () => (/* binding */ WithOverride),\n/* harmony export */   _getCSSTextColorFromStyle: () => (/* binding */ _getCSSTextColorFromStyle),\n/* harmony export */   _injectRuntime: () => (/* binding */ _injectRuntime),\n/* harmony export */   addActionControls: () => (/* binding */ addActionControls),\n/* harmony export */   addFonts: () => (/* binding */ addFonts),\n/* harmony export */   addPropertyControls: () => (/* binding */ addPropertyControls),\n/* harmony export */   addScaleCorrection: () => (/* binding */ addScaleCorrection),\n/* harmony export */   animate: () => (/* binding */ animate3),\n/* harmony export */   animateVisualElement: () => (/* binding */ animateVisualElement),\n/* harmony export */   animationControls: () => (/* binding */ animationControls),\n/* harmony export */   annotateTypeOnStringify: () => (/* binding */ annotateTypeOnStringify),\n/* harmony export */   backgroundImageFromProps: () => (/* binding */ backgroundImageFromProps),\n/* harmony export */   calculateRect: () => (/* binding */ calculateRect),\n/* harmony export */   callEach: () => (/* binding */ callEach),\n/* harmony export */   collectVisualStyleFromProps: () => (/* binding */ collectVisualStyleFromProps),\n/* harmony export */   constraintsEnabled: () => (/* binding */ constraintsEnabled),\n/* harmony export */   convertPresentationTree: () => (/* binding */ convertPresentationTree),\n/* harmony export */   createBatcher: () => (/* binding */ createBatcher),\n/* harmony export */   createCrossfader: () => (/* binding */ createCrossfader),\n/* harmony export */   createData: () => (/* binding */ createData),\n/* harmony export */   createDesignComponent: () => (/* binding */ createDesignComponent),\n/* harmony export */   createDomMotionComponent: () => (/* binding */ createDomMotionComponent),\n/* harmony export */   createMotionComponent: () => (/* binding */ createMotionComponent),\n/* harmony export */   cssBackgroundSize: () => (/* binding */ cssBackgroundSize),\n/* harmony export */   cx: () => (/* binding */ cx),\n/* harmony export */   debounce: () => (/* binding */ debounce),\n/* harmony export */   dispatchKeyDownEvent: () => (/* binding */ dispatchKeyDownEvent),\n/* harmony export */   domAnimation: () => (/* binding */ domAnimation),\n/* harmony export */   domMax: () => (/* binding */ domMax),\n/* harmony export */   environment: () => (/* binding */ environment),\n/* harmony export */   executeInRenderEnvironment: () => (/* binding */ executeInRenderEnvironment),\n/* harmony export */   finiteNumber: () => (/* binding */ finiteNumber),\n/* harmony export */   fontStore: () => (/* binding */ fontStore),\n/* harmony export */   forceLayerBackingWithCSSProperties: () => (/* binding */ forceLayerBackingWithCSSProperties),\n/* harmony export */   fraction: () => (/* binding */ fraction),\n/* harmony export */   frameFromElement: () => (/* binding */ frameFromElement),\n/* harmony export */   frameFromElements: () => (/* binding */ frameFromElements),\n/* harmony export */   getConfigFromPreviewURL: () => (/* binding */ getConfigFromPreviewURL),\n/* harmony export */   getConfigFromURL: () => (/* binding */ getConfigFromPreviewURL),\n/* harmony export */   getConfigFromVekterURL: () => (/* binding */ getConfigFromVekterURL),\n/* harmony export */   getFonts: () => (/* binding */ getFonts),\n/* harmony export */   getMeasurableCodeComponentChildren: () => (/* binding */ getMeasurableCodeComponentChildren),\n/* harmony export */   getMergedConstraintsProps: () => (/* binding */ getMergedConstraintsProps),\n/* harmony export */   getPropertyControls: () => (/* binding */ getPropertyControls),\n/* harmony export */   gradientForShape: () => (/* binding */ gradientForShape),\n/* harmony export */   imagePatternPropsForFill: () => (/* binding */ imagePatternPropsForFill),\n/* harmony export */   imageUrlForAsset: () => (/* binding */ imageUrlForAsset),\n/* harmony export */   isAnimatable: () => (/* binding */ isAnimatable2),\n/* harmony export */   isDesignDefinition: () => (/* binding */ isDesignDefinition),\n/* harmony export */   isEqual: () => (/* binding */ isEqual),\n/* harmony export */   isFiniteNumber: () => (/* binding */ isFiniteNumber),\n/* harmony export */   isFractionDimension: () => (/* binding */ isFractionDimension),\n/* harmony export */   isFramerGamepadKeydownData: () => (/* binding */ isFramerGamepadKeydownData),\n/* harmony export */   isGapEnabled: () => (/* binding */ isGapEnabled),\n/* harmony export */   isMotionValue: () => (/* binding */ isMotionValue2),\n/* harmony export */   isOfAnnotatedType: () => (/* binding */ isOfAnnotatedType),\n/* harmony export */   isOverride: () => (/* binding */ isOverride),\n/* harmony export */   isReactDefinition: () => (/* binding */ isReactDefinition),\n/* harmony export */   isShallowEqualArray: () => (/* binding */ isShallowEqualArray),\n/* harmony export */   isStraightCurve: () => (/* binding */ isStraightCurve),\n/* harmony export */   isValidMotionProp: () => (/* binding */ isValidMotionProp),\n/* harmony export */   lazy: () => (/* binding */ lazy2),\n/* harmony export */   loadFont: () => (/* binding */ loadFont),\n/* harmony export */   loadJSON: () => (/* binding */ loadJSON),\n/* harmony export */   localPackageFallbackIdentifier: () => (/* binding */ localPackageFallbackIdentifier),\n/* harmony export */   localShadowFrame: () => (/* binding */ localShadowFrame),\n/* harmony export */   m: () => (/* binding */ m),\n/* harmony export */   makePaddingString: () => (/* binding */ makePaddingString),\n/* harmony export */   memoize: () => (/* binding */ memoize),\n/* harmony export */   motion: () => (/* binding */ motion),\n/* harmony export */   motionValue: () => (/* binding */ motionValue),\n/* harmony export */   paddingFromProps: () => (/* binding */ paddingFromProps),\n/* harmony export */   parseVariant: () => (/* binding */ parseVariant),\n/* harmony export */   pathDefaults: () => (/* binding */ pathDefaults),\n/* harmony export */   print: () => (/* binding */ print),\n/* harmony export */   resolveMotionValue: () => (/* binding */ resolveMotionValue),\n/* harmony export */   roundWithOffset: () => (/* binding */ roundWithOffset),\n/* harmony export */   roundedNumber: () => (/* binding */ roundedNumber),\n/* harmony export */   roundedNumberString: () => (/* binding */ roundedNumberString),\n/* harmony export */   serverURL: () => (/* binding */ serverURL),\n/* harmony export */   setGlobalRenderEnvironment: () => (/* binding */ setGlobalRenderEnvironment),\n/* harmony export */   snapshotViewportBox: () => (/* binding */ snapshotViewportBox),\n/* harmony export */   startAnimation: () => (/* binding */ startAnimation2),\n/* harmony export */   systemTypefaceName: () => (/* binding */ systemTypefaceName),\n/* harmony export */   throttle: () => (/* binding */ throttle),\n/* harmony export */   toFlexDirection: () => (/* binding */ toFlexDirection),\n/* harmony export */   toJustifyOrAlignment: () => (/* binding */ toJustifyOrAlignment),\n/* harmony export */   toSVGPath: () => (/* binding */ toSVGPath),\n/* harmony export */   transform: () => (/* binding */ transform),\n/* harmony export */   transformString: () => (/* binding */ transformString),\n/* harmony export */   transformTemplate: () => (/* binding */ transformTemplate),\n/* harmony export */   useActiveTargetCallback: () => (/* binding */ useActiveTargetCallback),\n/* harmony export */   useActiveVariantCallback: () => (/* binding */ useActiveVariantCallback),\n/* harmony export */   useAddVariantProps: () => (/* binding */ useAddVariantProps),\n/* harmony export */   useAnimatedState: () => (/* binding */ useAnimatedState),\n/* harmony export */   useAnimation: () => (/* binding */ useAnimation),\n/* harmony export */   useCycle: () => (/* binding */ useCycle),\n/* harmony export */   useDeprecatedAnimatedState: () => (/* binding */ useAnimatedState),\n/* harmony export */   useDeprecatedInvertedScale: () => (/* binding */ useInvertedScale),\n/* harmony export */   useDomEvent: () => (/* binding */ useDomEvent),\n/* harmony export */   useDragControls: () => (/* binding */ useDragControls),\n/* harmony export */   useElementScroll: () => (/* binding */ useElementScroll),\n/* harmony export */   useGamepad: () => (/* binding */ useGamepad),\n/* harmony export */   useHotkey: () => (/* binding */ useHotkey),\n/* harmony export */   useInvertedScale: () => (/* binding */ useInvertedScale),\n/* harmony export */   useIsInCurrentNavigationTarget: () => (/* binding */ useIsInCurrentNavigationTarget),\n/* harmony export */   useIsOnFramerCanvas: () => (/* binding */ useIsOnFramerCanvas),\n/* harmony export */   useIsPresent: () => (/* binding */ useIsPresent),\n/* harmony export */   useMeasureLayout: () => (/* binding */ useMeasureLayout),\n/* harmony export */   useMotionTemplate: () => (/* binding */ useMotionTemplate),\n/* harmony export */   useMotionValue: () => (/* binding */ useMotionValue),\n/* harmony export */   useNavigate: () => (/* binding */ useNavigate),\n/* harmony export */   useNavigation: () => (/* binding */ useNavigation),\n/* harmony export */   useObserveData: () => (/* binding */ useObserveData),\n/* harmony export */   useOnAppear: () => (/* binding */ useOnAppear),\n/* harmony export */   useOnCurrentTargetChange: () => (/* binding */ useOnCurrentTargetChange),\n/* harmony export */   useOnVariantChange: () => (/* binding */ useOnVariantChange),\n/* harmony export */   usePresence: () => (/* binding */ usePresence),\n/* harmony export */   useReducedMotion: () => (/* binding */ useReducedMotion),\n/* harmony export */   useRenderEnvironment: () => (/* binding */ useRenderEnvironment),\n/* harmony export */   useSpring: () => (/* binding */ useSpring),\n/* harmony export */   useTransform: () => (/* binding */ useTransform),\n/* harmony export */   useVariantState: () => (/* binding */ useVariantState),\n/* harmony export */   useVelocity: () => (/* binding */ useVelocity),\n/* harmony export */   useViewportScroll: () => (/* binding */ useViewportScroll),\n/* harmony export */   valueToDimensionType: () => (/* binding */ valueToDimensionType),\n/* harmony export */   version: () => (/* binding */ version),\n/* harmony export */   visualElement: () => (/* binding */ visualElement),\n/* harmony export */   withCSS: () => (/* binding */ withCSS),\n/* harmony export */   withGeneratedLayoutId: () => (/* binding */ withGeneratedLayoutId),\n/* harmony export */   withMeasuredSize: () => (/* binding */ withMeasuredSize),\n/* harmony export */   withOpacity: () => (/* binding */ withOpacity),\n/* harmony export */   withPath: () => (/* binding */ withPath),\n/* harmony export */   withShape: () => (/* binding */ withShape)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js\");\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __markAsModule = (target) => __defProp(target, \"__esModule\", { value: true });\nvar __commonJS = (cb2, mod) => function __require() {\n  return mod || (0, cb2[Object.keys(cb2)[0]])((mod = { exports: {} }).exports, mod), mod.exports;\n};\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __reExport = (target, module, desc) => {\n  if (module && typeof module === \"object\" || typeof module === \"function\") {\n    for (let key6 of __getOwnPropNames(module))\n      if (!__hasOwnProp.call(target, key6) && key6 !== \"default\")\n        __defProp(target, key6, { get: () => module[key6], enumerable: !(desc = __getOwnPropDesc(module, key6)) || desc.enumerable });\n  }\n  return target;\n};\nvar __toModule = (module) => {\n  return __reExport(__markAsModule(__defProp(module != null ? __create(__getProtoOf(module)) : {}, \"default\", module && module.__esModule && \"default\" in module ? { get: () => module.default, enumerable: true } : { value: module, enumerable: true })), module);\n};\nvar __accessCheck = (obj, member, msg2) => {\n  if (!member.has(obj))\n    throw TypeError(\"Cannot \" + msg2);\n};\nvar __privateGet = (obj, member, getter) => {\n  __accessCheck(obj, member, \"read from private field\");\n  return getter ? getter.call(obj) : member.get(obj);\n};\nvar __privateAdd = (obj, member, value) => {\n  if (member.has(obj))\n    throw TypeError(\"Cannot add the same private member more than once\");\n  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n};\nvar __privateSet = (obj, member, value, setter) => {\n  __accessCheck(obj, member, \"write to private field\");\n  setter ? setter.call(obj, value) : member.set(obj, value);\n  return value;\n};\n\n// ../../node_modules/tslib/tslib.js\nvar require_tslib = __commonJS({\n  \"../../node_modules/tslib/tslib.js\"(exports, module) {\n    var __extends2;\n    var __assign2;\n    var __rest2;\n    var __decorate2;\n    var __param2;\n    var __metadata2;\n    var __awaiter2;\n    var __generator2;\n    var __exportStar2;\n    var __values2;\n    var __read2;\n    var __spread2;\n    var __spreadArrays2;\n    var __spreadArray2;\n    var __await2;\n    var __asyncGenerator2;\n    var __asyncDelegator2;\n    var __asyncValues2;\n    var __makeTemplateObject2;\n    var __importStar2;\n    var __importDefault2;\n    var __classPrivateFieldGet2;\n    var __classPrivateFieldSet2;\n    var __createBinding2;\n    (function(factory) {\n      var root = typeof window === \"object\" ? window : typeof self === \"object\" ? self : typeof this === \"object\" ? this : {};\n      if (typeof define === \"function\" && __webpack_require__.amdO) {\n        define(\"tslib\", [\"exports\"], function(exports2) {\n          factory(createExporter(root, createExporter(exports2)));\n        });\n      } else if (typeof module === \"object\" && typeof module.exports === \"object\") {\n        factory(createExporter(root, createExporter(module.exports)));\n      } else {\n        factory(createExporter(root));\n      }\n      function createExporter(exports2, previous) {\n        if (exports2 !== root) {\n          if (typeof Object.create === \"function\") {\n            Object.defineProperty(exports2, \"__esModule\", { value: true });\n          } else {\n            exports2.__esModule = true;\n          }\n        }\n        return function(id, v) {\n          return exports2[id] = previous ? previous(id, v) : v;\n        };\n      }\n    })(function(exporter) {\n      var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d, b2) {\n        d.__proto__ = b2;\n      } || function(d, b2) {\n        for (var p in b2)\n          if (Object.prototype.hasOwnProperty.call(b2, p))\n            d[p] = b2[p];\n      };\n      __extends2 = function(d, b2) {\n        if (typeof b2 !== \"function\" && b2 !== null)\n          throw new TypeError(\"Class extends value \" + String(b2) + \" is not a constructor or null\");\n        extendStatics(d, b2);\n        function __() {\n          this.constructor = d;\n        }\n        d.prototype = b2 === null ? Object.create(b2) : (__.prototype = b2.prototype, new __());\n      };\n      __assign2 = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s)\n            if (Object.prototype.hasOwnProperty.call(s, p))\n              t[p] = s[p];\n        }\n        return t;\n      };\n      __rest2 = function(s, e) {\n        var t = {};\n        for (var p in s)\n          if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n            t[p] = s[p];\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n          for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n          }\n        return t;\n      };\n      __decorate2 = function(decorators, target, key6, desc) {\n        var c2 = arguments.length, r = c2 < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key6) : desc, d;\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\")\n          r = Reflect.decorate(decorators, target, key6, desc);\n        else\n          for (var i = decorators.length - 1; i >= 0; i--)\n            if (d = decorators[i])\n              r = (c2 < 3 ? d(r) : c2 > 3 ? d(target, key6, r) : d(target, key6)) || r;\n        return c2 > 3 && r && Object.defineProperty(target, key6, r), r;\n      };\n      __param2 = function(paramIndex, decorator) {\n        return function(target, key6) {\n          decorator(target, key6, paramIndex);\n        };\n      };\n      __metadata2 = function(metadataKey, metadataValue) {\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\")\n          return Reflect.metadata(metadataKey, metadataValue);\n      };\n      __awaiter2 = function(thisArg, _arguments, P, generator) {\n        function adopt(value) {\n          return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n          });\n        }\n        return new (P || (P = Promise))(function(resolve, reject) {\n          function fulfilled(value) {\n            try {\n              step(generator.next(value));\n            } catch (e) {\n              reject(e);\n            }\n          }\n          function rejected(value) {\n            try {\n              step(generator[\"throw\"](value));\n            } catch (e) {\n              reject(e);\n            }\n          }\n          function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n          }\n          step((generator = generator.apply(thisArg, _arguments || [])).next());\n        });\n      };\n      __generator2 = function(thisArg, body) {\n        var _ = { label: 0, sent: function() {\n          if (t[0] & 1)\n            throw t[1];\n          return t[1];\n        }, trys: [], ops: [] }, f, y, t, g;\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() {\n          return this;\n        }), g;\n        function verb(n) {\n          return function(v) {\n            return step([n, v]);\n          };\n        }\n        function step(op) {\n          if (f)\n            throw new TypeError(\"Generator is already executing.\");\n          while (_)\n            try {\n              if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)\n                return t;\n              if (y = 0, t)\n                op = [op[0] & 2, t.value];\n              switch (op[0]) {\n                case 0:\n                case 1:\n                  t = op;\n                  break;\n                case 4:\n                  _.label++;\n                  return { value: op[1], done: false };\n                case 5:\n                  _.label++;\n                  y = op[1];\n                  op = [0];\n                  continue;\n                case 7:\n                  op = _.ops.pop();\n                  _.trys.pop();\n                  continue;\n                default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                    _ = 0;\n                    continue;\n                  }\n                  if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                    _.label = op[1];\n                    break;\n                  }\n                  if (op[0] === 6 && _.label < t[1]) {\n                    _.label = t[1];\n                    t = op;\n                    break;\n                  }\n                  if (t && _.label < t[2]) {\n                    _.label = t[2];\n                    _.ops.push(op);\n                    break;\n                  }\n                  if (t[2])\n                    _.ops.pop();\n                  _.trys.pop();\n                  continue;\n              }\n              op = body.call(thisArg, _);\n            } catch (e) {\n              op = [6, e];\n              y = 0;\n            } finally {\n              f = t = 0;\n            }\n          if (op[0] & 5)\n            throw op[1];\n          return { value: op[0] ? op[1] : void 0, done: true };\n        }\n      };\n      __exportStar2 = function(m2, o) {\n        for (var p in m2)\n          if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p))\n            __createBinding2(o, m2, p);\n      };\n      __createBinding2 = Object.create ? function(o, m2, k, k2) {\n        if (k2 === void 0)\n          k2 = k;\n        Object.defineProperty(o, k2, { enumerable: true, get: function() {\n          return m2[k];\n        } });\n      } : function(o, m2, k, k2) {\n        if (k2 === void 0)\n          k2 = k;\n        o[k2] = m2[k];\n      };\n      __values2 = function(o) {\n        var s = typeof Symbol === \"function\" && Symbol.iterator, m2 = s && o[s], i = 0;\n        if (m2)\n          return m2.call(o);\n        if (o && typeof o.length === \"number\")\n          return {\n            next: function() {\n              if (o && i >= o.length)\n                o = void 0;\n              return { value: o && o[i++], done: !o };\n            }\n          };\n        throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n      };\n      __read2 = function(o, n) {\n        var m2 = typeof Symbol === \"function\" && o[Symbol.iterator];\n        if (!m2)\n          return o;\n        var i = m2.call(o), r, ar = [], e;\n        try {\n          while ((n === void 0 || n-- > 0) && !(r = i.next()).done)\n            ar.push(r.value);\n        } catch (error) {\n          e = { error };\n        } finally {\n          try {\n            if (r && !r.done && (m2 = i[\"return\"]))\n              m2.call(i);\n          } finally {\n            if (e)\n              throw e.error;\n          }\n        }\n        return ar;\n      };\n      __spread2 = function() {\n        for (var ar = [], i = 0; i < arguments.length; i++)\n          ar = ar.concat(__read2(arguments[i]));\n        return ar;\n      };\n      __spreadArrays2 = function() {\n        for (var s = 0, i = 0, il = arguments.length; i < il; i++)\n          s += arguments[i].length;\n        for (var r = Array(s), k = 0, i = 0; i < il; i++)\n          for (var a2 = arguments[i], j = 0, jl = a2.length; j < jl; j++, k++)\n            r[k] = a2[j];\n        return r;\n      };\n      __spreadArray2 = function(to, from) {\n        for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n          to[j] = from[i];\n        return to;\n      };\n      __await2 = function(v) {\n        return this instanceof __await2 ? (this.v = v, this) : new __await2(v);\n      };\n      __asyncGenerator2 = function(thisArg, _arguments, generator) {\n        if (!Symbol.asyncIterator)\n          throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\n        return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function() {\n          return this;\n        }, i;\n        function verb(n) {\n          if (g[n])\n            i[n] = function(v) {\n              return new Promise(function(a2, b2) {\n                q.push([n, v, a2, b2]) > 1 || resume(n, v);\n              });\n            };\n        }\n        function resume(n, v) {\n          try {\n            step(g[n](v));\n          } catch (e) {\n            settle(q[0][3], e);\n          }\n        }\n        function step(r) {\n          r.value instanceof __await2 ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);\n        }\n        function fulfill(value) {\n          resume(\"next\", value);\n        }\n        function reject(value) {\n          resume(\"throw\", value);\n        }\n        function settle(f, v) {\n          if (f(v), q.shift(), q.length)\n            resume(q[0][0], q[0][1]);\n        }\n      };\n      __asyncDelegator2 = function(o) {\n        var i, p;\n        return i = {}, verb(\"next\"), verb(\"throw\", function(e) {\n          throw e;\n        }), verb(\"return\"), i[Symbol.iterator] = function() {\n          return this;\n        }, i;\n        function verb(n, f) {\n          i[n] = o[n] ? function(v) {\n            return (p = !p) ? { value: __await2(o[n](v)), done: n === \"return\" } : f ? f(v) : v;\n          } : f;\n        }\n      };\n      __asyncValues2 = function(o) {\n        if (!Symbol.asyncIterator)\n          throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n        var m2 = o[Symbol.asyncIterator], i;\n        return m2 ? m2.call(o) : (o = typeof __values2 === \"function\" ? __values2(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function() {\n          return this;\n        }, i);\n        function verb(n) {\n          i[n] = o[n] && function(v) {\n            return new Promise(function(resolve, reject) {\n              v = o[n](v), settle(resolve, reject, v.done, v.value);\n            });\n          };\n        }\n        function settle(resolve, reject, d, v) {\n          Promise.resolve(v).then(function(v2) {\n            resolve({ value: v2, done: d });\n          }, reject);\n        }\n      };\n      __makeTemplateObject2 = function(cooked, raw) {\n        if (Object.defineProperty) {\n          Object.defineProperty(cooked, \"raw\", { value: raw });\n        } else {\n          cooked.raw = raw;\n        }\n        return cooked;\n      };\n      var __setModuleDefault = Object.create ? function(o, v) {\n        Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n      } : function(o, v) {\n        o[\"default\"] = v;\n      };\n      __importStar2 = function(mod) {\n        if (mod && mod.__esModule)\n          return mod;\n        var result = {};\n        if (mod != null) {\n          for (var k in mod)\n            if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k))\n              __createBinding2(result, mod, k);\n        }\n        __setModuleDefault(result, mod);\n        return result;\n      };\n      __importDefault2 = function(mod) {\n        return mod && mod.__esModule ? mod : { \"default\": mod };\n      };\n      __classPrivateFieldGet2 = function(receiver, state, kind, f) {\n        if (kind === \"a\" && !f)\n          throw new TypeError(\"Private accessor was defined without a getter\");\n        if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver))\n          throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n        return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n      };\n      __classPrivateFieldSet2 = function(receiver, state, value, kind, f) {\n        if (kind === \"m\")\n          throw new TypeError(\"Private method is not writable\");\n        if (kind === \"a\" && !f)\n          throw new TypeError(\"Private accessor was defined without a setter\");\n        if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver))\n          throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n        return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n      };\n      exporter(\"__extends\", __extends2);\n      exporter(\"__assign\", __assign2);\n      exporter(\"__rest\", __rest2);\n      exporter(\"__decorate\", __decorate2);\n      exporter(\"__param\", __param2);\n      exporter(\"__metadata\", __metadata2);\n      exporter(\"__awaiter\", __awaiter2);\n      exporter(\"__generator\", __generator2);\n      exporter(\"__exportStar\", __exportStar2);\n      exporter(\"__createBinding\", __createBinding2);\n      exporter(\"__values\", __values2);\n      exporter(\"__read\", __read2);\n      exporter(\"__spread\", __spread2);\n      exporter(\"__spreadArrays\", __spreadArrays2);\n      exporter(\"__spreadArray\", __spreadArray2);\n      exporter(\"__await\", __await2);\n      exporter(\"__asyncGenerator\", __asyncGenerator2);\n      exporter(\"__asyncDelegator\", __asyncDelegator2);\n      exporter(\"__asyncValues\", __asyncValues2);\n      exporter(\"__makeTemplateObject\", __makeTemplateObject2);\n      exporter(\"__importStar\", __importStar2);\n      exporter(\"__importDefault\", __importDefault2);\n      exporter(\"__classPrivateFieldGet\", __classPrivateFieldGet2);\n      exporter(\"__classPrivateFieldSet\", __classPrivateFieldSet2);\n    });\n  }\n});\n\n// ../../node_modules/@emotion/memoize/dist/memoize.browser.cjs.js\nvar require_memoize_browser_cjs = __commonJS({\n  \"../../node_modules/@emotion/memoize/dist/memoize.browser.cjs.js\"(exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    function memoize2(fn) {\n      var cache4 = {};\n      return function(arg) {\n        if (cache4[arg] === void 0)\n          cache4[arg] = fn(arg);\n        return cache4[arg];\n      };\n    }\n    exports.default = memoize2;\n  }\n});\n\n// ../../node_modules/@emotion/is-prop-valid/dist/is-prop-valid.browser.cjs.js\nvar require_is_prop_valid_browser_cjs = __commonJS({\n  \"../../node_modules/@emotion/is-prop-valid/dist/is-prop-valid.browser.cjs.js\"(exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    function _interopDefault(ex) {\n      return ex && typeof ex === \"object\" && \"default\" in ex ? ex[\"default\"] : ex;\n    }\n    var memoize2 = _interopDefault(require_memoize_browser_cjs());\n    var reactPropsRegex = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|inert|itemProp|itemScope|itemType|itemID|itemRef|on|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/;\n    var index = memoize2(function(prop) {\n      return reactPropsRegex.test(prop) || prop.charCodeAt(0) === 111 && prop.charCodeAt(1) === 110 && prop.charCodeAt(2) < 91;\n    });\n    exports.default = index;\n  }\n});\n\n// ../../node_modules/hsluv/hsluv.js\nvar require_hsluv = __commonJS({\n  \"../../node_modules/hsluv/hsluv.js\"(exports, module) {\n    var hsluv = hsluv || {};\n    hsluv.Geometry = function() {\n    };\n    hsluv.Geometry.intersectLineLine = function(a2, b2) {\n      var x = (a2.intercept - b2.intercept) / (b2.slope - a2.slope);\n      var y = a2.slope * x + a2.intercept;\n      return { x, y };\n    };\n    hsluv.Geometry.distanceFromOrigin = function(point) {\n      return Math.sqrt(Math.pow(point.x, 2) + Math.pow(point.y, 2));\n    };\n    hsluv.Geometry.distanceLineFromOrigin = function(line) {\n      return Math.abs(line.intercept) / Math.sqrt(Math.pow(line.slope, 2) + 1);\n    };\n    hsluv.Geometry.perpendicularThroughPoint = function(line, point) {\n      var slope = -1 / line.slope;\n      var intercept = point.y - slope * point.x;\n      return { slope, intercept };\n    };\n    hsluv.Geometry.angleFromOrigin = function(point) {\n      return Math.atan2(point.y, point.x);\n    };\n    hsluv.Geometry.normalizeAngle = function(angle) {\n      var m2 = 2 * Math.PI;\n      return (angle % m2 + m2) % m2;\n    };\n    hsluv.Geometry.lengthOfRayUntilIntersect = function(theta, line) {\n      return line.intercept / (Math.sin(theta) - line.slope * Math.cos(theta));\n    };\n    hsluv.Hsluv = function() {\n    };\n    hsluv.Hsluv.getBounds = function(L) {\n      var result = [];\n      var sub1 = Math.pow(L + 16, 3) / 1560896;\n      var sub2 = sub1 > hsluv.Hsluv.epsilon ? sub1 : L / hsluv.Hsluv.kappa;\n      var _g = 0;\n      while (_g < 3) {\n        var c2 = _g++;\n        var m1 = hsluv.Hsluv.m[c2][0];\n        var m2 = hsluv.Hsluv.m[c2][1];\n        var m3 = hsluv.Hsluv.m[c2][2];\n        var _g1 = 0;\n        while (_g1 < 2) {\n          var t = _g1++;\n          var top1 = (284517 * m1 - 94839 * m3) * sub2;\n          var top2 = (838422 * m3 + 769860 * m2 + 731718 * m1) * L * sub2 - 769860 * t * L;\n          var bottom = (632260 * m3 - 126452 * m2) * sub2 + 126452 * t;\n          result.push({ slope: top1 / bottom, intercept: top2 / bottom });\n        }\n      }\n      return result;\n    };\n    hsluv.Hsluv.maxSafeChromaForL = function(L) {\n      var bounds = hsluv.Hsluv.getBounds(L);\n      var min = Infinity;\n      var _g = 0;\n      while (_g < bounds.length) {\n        var bound = bounds[_g];\n        ++_g;\n        var length = hsluv.Geometry.distanceLineFromOrigin(bound);\n        min = Math.min(min, length);\n      }\n      return min;\n    };\n    hsluv.Hsluv.maxChromaForLH = function(L, H) {\n      var hrad = H / 360 * Math.PI * 2;\n      var bounds = hsluv.Hsluv.getBounds(L);\n      var min = Infinity;\n      var _g = 0;\n      while (_g < bounds.length) {\n        var bound = bounds[_g];\n        ++_g;\n        var length = hsluv.Geometry.lengthOfRayUntilIntersect(hrad, bound);\n        if (length >= 0) {\n          min = Math.min(min, length);\n        }\n      }\n      return min;\n    };\n    hsluv.Hsluv.dotProduct = function(a2, b2) {\n      var sum = 0;\n      var _g1 = 0;\n      var _g = a2.length;\n      while (_g1 < _g) {\n        var i = _g1++;\n        sum += a2[i] * b2[i];\n      }\n      return sum;\n    };\n    hsluv.Hsluv.fromLinear = function(c2) {\n      if (c2 <= 31308e-7) {\n        return 12.92 * c2;\n      } else {\n        return 1.055 * Math.pow(c2, 0.4166666666666667) - 0.055;\n      }\n    };\n    hsluv.Hsluv.toLinear = function(c2) {\n      if (c2 > 0.04045) {\n        return Math.pow((c2 + 0.055) / 1.055, 2.4);\n      } else {\n        return c2 / 12.92;\n      }\n    };\n    hsluv.Hsluv.xyzToRgb = function(tuple) {\n      return [hsluv.Hsluv.fromLinear(hsluv.Hsluv.dotProduct(hsluv.Hsluv.m[0], tuple)), hsluv.Hsluv.fromLinear(hsluv.Hsluv.dotProduct(hsluv.Hsluv.m[1], tuple)), hsluv.Hsluv.fromLinear(hsluv.Hsluv.dotProduct(hsluv.Hsluv.m[2], tuple))];\n    };\n    hsluv.Hsluv.rgbToXyz = function(tuple) {\n      var rgbl = [hsluv.Hsluv.toLinear(tuple[0]), hsluv.Hsluv.toLinear(tuple[1]), hsluv.Hsluv.toLinear(tuple[2])];\n      return [hsluv.Hsluv.dotProduct(hsluv.Hsluv.minv[0], rgbl), hsluv.Hsluv.dotProduct(hsluv.Hsluv.minv[1], rgbl), hsluv.Hsluv.dotProduct(hsluv.Hsluv.minv[2], rgbl)];\n    };\n    hsluv.Hsluv.yToL = function(Y) {\n      if (Y <= hsluv.Hsluv.epsilon) {\n        return Y / hsluv.Hsluv.refY * hsluv.Hsluv.kappa;\n      } else {\n        return 116 * Math.pow(Y / hsluv.Hsluv.refY, 0.3333333333333333) - 16;\n      }\n    };\n    hsluv.Hsluv.lToY = function(L) {\n      if (L <= 8) {\n        return hsluv.Hsluv.refY * L / hsluv.Hsluv.kappa;\n      } else {\n        return hsluv.Hsluv.refY * Math.pow((L + 16) / 116, 3);\n      }\n    };\n    hsluv.Hsluv.xyzToLuv = function(tuple) {\n      var X = tuple[0];\n      var Y = tuple[1];\n      var Z = tuple[2];\n      var divider = X + 15 * Y + 3 * Z;\n      var varU = 4 * X;\n      var varV = 9 * Y;\n      if (divider != 0) {\n        varU /= divider;\n        varV /= divider;\n      } else {\n        varU = NaN;\n        varV = NaN;\n      }\n      var L = hsluv.Hsluv.yToL(Y);\n      if (L == 0) {\n        return [0, 0, 0];\n      }\n      var U = 13 * L * (varU - hsluv.Hsluv.refU);\n      var V = 13 * L * (varV - hsluv.Hsluv.refV);\n      return [L, U, V];\n    };\n    hsluv.Hsluv.luvToXyz = function(tuple) {\n      var L = tuple[0];\n      var U = tuple[1];\n      var V = tuple[2];\n      if (L == 0) {\n        return [0, 0, 0];\n      }\n      var varU = U / (13 * L) + hsluv.Hsluv.refU;\n      var varV = V / (13 * L) + hsluv.Hsluv.refV;\n      var Y = hsluv.Hsluv.lToY(L);\n      var X = 0 - 9 * Y * varU / ((varU - 4) * varV - varU * varV);\n      var Z = (9 * Y - 15 * varV * Y - varV * X) / (3 * varV);\n      return [X, Y, Z];\n    };\n    hsluv.Hsluv.luvToLch = function(tuple) {\n      var L = tuple[0];\n      var U = tuple[1];\n      var V = tuple[2];\n      var C = Math.sqrt(U * U + V * V);\n      var H;\n      if (C < 1e-8) {\n        H = 0;\n      } else {\n        var Hrad = Math.atan2(V, U);\n        H = Hrad * 180 / Math.PI;\n        if (H < 0) {\n          H = 360 + H;\n        }\n      }\n      return [L, C, H];\n    };\n    hsluv.Hsluv.lchToLuv = function(tuple) {\n      var L = tuple[0];\n      var C = tuple[1];\n      var H = tuple[2];\n      var Hrad = H / 360 * 2 * Math.PI;\n      var U = Math.cos(Hrad) * C;\n      var V = Math.sin(Hrad) * C;\n      return [L, U, V];\n    };\n    hsluv.Hsluv.hsluvToLch = function(tuple) {\n      var H = tuple[0];\n      var S = tuple[1];\n      var L = tuple[2];\n      if (L > 99.9999999) {\n        return [100, 0, H];\n      }\n      if (L < 1e-8) {\n        return [0, 0, H];\n      }\n      var max = hsluv.Hsluv.maxChromaForLH(L, H);\n      var C = max / 100 * S;\n      return [L, C, H];\n    };\n    hsluv.Hsluv.lchToHsluv = function(tuple) {\n      var L = tuple[0];\n      var C = tuple[1];\n      var H = tuple[2];\n      if (L > 99.9999999) {\n        return [H, 0, 100];\n      }\n      if (L < 1e-8) {\n        return [H, 0, 0];\n      }\n      var max = hsluv.Hsluv.maxChromaForLH(L, H);\n      var S = C / max * 100;\n      return [H, S, L];\n    };\n    hsluv.Hsluv.hpluvToLch = function(tuple) {\n      var H = tuple[0];\n      var S = tuple[1];\n      var L = tuple[2];\n      if (L > 99.9999999) {\n        return [100, 0, H];\n      }\n      if (L < 1e-8) {\n        return [0, 0, H];\n      }\n      var max = hsluv.Hsluv.maxSafeChromaForL(L);\n      var C = max / 100 * S;\n      return [L, C, H];\n    };\n    hsluv.Hsluv.lchToHpluv = function(tuple) {\n      var L = tuple[0];\n      var C = tuple[1];\n      var H = tuple[2];\n      if (L > 99.9999999) {\n        return [H, 0, 100];\n      }\n      if (L < 1e-8) {\n        return [H, 0, 0];\n      }\n      var max = hsluv.Hsluv.maxSafeChromaForL(L);\n      var S = C / max * 100;\n      return [H, S, L];\n    };\n    hsluv.Hsluv.rgbToHex = function(tuple) {\n      var h = \"#\";\n      var _g = 0;\n      while (_g < 3) {\n        var i = _g++;\n        var chan = tuple[i];\n        var c2 = Math.round(chan * 255);\n        var digit2 = c2 % 16;\n        var digit1 = (c2 - digit2) / 16 | 0;\n        h += hsluv.Hsluv.hexChars.charAt(digit1) + hsluv.Hsluv.hexChars.charAt(digit2);\n      }\n      return h;\n    };\n    hsluv.Hsluv.hexToRgb = function(hex2) {\n      hex2 = hex2.toLowerCase();\n      var ret = [];\n      var _g = 0;\n      while (_g < 3) {\n        var i = _g++;\n        var digit1 = hsluv.Hsluv.hexChars.indexOf(hex2.charAt(i * 2 + 1));\n        var digit2 = hsluv.Hsluv.hexChars.indexOf(hex2.charAt(i * 2 + 2));\n        var n = digit1 * 16 + digit2;\n        ret.push(n / 255);\n      }\n      return ret;\n    };\n    hsluv.Hsluv.lchToRgb = function(tuple) {\n      return hsluv.Hsluv.xyzToRgb(hsluv.Hsluv.luvToXyz(hsluv.Hsluv.lchToLuv(tuple)));\n    };\n    hsluv.Hsluv.rgbToLch = function(tuple) {\n      return hsluv.Hsluv.luvToLch(hsluv.Hsluv.xyzToLuv(hsluv.Hsluv.rgbToXyz(tuple)));\n    };\n    hsluv.Hsluv.hsluvToRgb = function(tuple) {\n      return hsluv.Hsluv.lchToRgb(hsluv.Hsluv.hsluvToLch(tuple));\n    };\n    hsluv.Hsluv.rgbToHsluv = function(tuple) {\n      return hsluv.Hsluv.lchToHsluv(hsluv.Hsluv.rgbToLch(tuple));\n    };\n    hsluv.Hsluv.hpluvToRgb = function(tuple) {\n      return hsluv.Hsluv.lchToRgb(hsluv.Hsluv.hpluvToLch(tuple));\n    };\n    hsluv.Hsluv.rgbToHpluv = function(tuple) {\n      return hsluv.Hsluv.lchToHpluv(hsluv.Hsluv.rgbToLch(tuple));\n    };\n    hsluv.Hsluv.hsluvToHex = function(tuple) {\n      return hsluv.Hsluv.rgbToHex(hsluv.Hsluv.hsluvToRgb(tuple));\n    };\n    hsluv.Hsluv.hpluvToHex = function(tuple) {\n      return hsluv.Hsluv.rgbToHex(hsluv.Hsluv.hpluvToRgb(tuple));\n    };\n    hsluv.Hsluv.hexToHsluv = function(s) {\n      return hsluv.Hsluv.rgbToHsluv(hsluv.Hsluv.hexToRgb(s));\n    };\n    hsluv.Hsluv.hexToHpluv = function(s) {\n      return hsluv.Hsluv.rgbToHpluv(hsluv.Hsluv.hexToRgb(s));\n    };\n    hsluv.Hsluv.m = [[3.240969941904521, -1.537383177570093, -0.498610760293], [-0.96924363628087, 1.87596750150772, 0.041555057407175], [0.055630079696993, -0.20397695888897, 1.056971514242878]];\n    hsluv.Hsluv.minv = [[0.41239079926595, 0.35758433938387, 0.18048078840183], [0.21263900587151, 0.71516867876775, 0.072192315360733], [0.019330818715591, 0.11919477979462, 0.95053215224966]];\n    hsluv.Hsluv.refY = 1;\n    hsluv.Hsluv.refU = 0.19783000664283;\n    hsluv.Hsluv.refV = 0.46831999493879;\n    hsluv.Hsluv.kappa = 903.2962962;\n    hsluv.Hsluv.epsilon = 0.0088564516;\n    hsluv.Hsluv.hexChars = \"0123456789abcdef\";\n    var root = {\n      \"hsluvToRgb\": hsluv.Hsluv.hsluvToRgb,\n      \"rgbToHsluv\": hsluv.Hsluv.rgbToHsluv,\n      \"hpluvToRgb\": hsluv.Hsluv.hpluvToRgb,\n      \"rgbToHpluv\": hsluv.Hsluv.rgbToHpluv,\n      \"hsluvToHex\": hsluv.Hsluv.hsluvToHex,\n      \"hexToHsluv\": hsluv.Hsluv.hexToHsluv,\n      \"hpluvToHex\": hsluv.Hsluv.hpluvToHex,\n      \"hexToHpluv\": hsluv.Hsluv.hexToHpluv,\n      \"lchToHpluv\": hsluv.Hsluv.lchToHpluv,\n      \"hpluvToLch\": hsluv.Hsluv.hpluvToLch,\n      \"lchToHsluv\": hsluv.Hsluv.lchToHsluv,\n      \"hsluvToLch\": hsluv.Hsluv.hsluvToLch,\n      \"lchToLuv\": hsluv.Hsluv.lchToLuv,\n      \"luvToLch\": hsluv.Hsluv.luvToLch,\n      \"xyzToLuv\": hsluv.Hsluv.xyzToLuv,\n      \"luvToXyz\": hsluv.Hsluv.luvToXyz,\n      \"xyzToRgb\": hsluv.Hsluv.xyzToRgb,\n      \"rgbToXyz\": hsluv.Hsluv.rgbToXyz,\n      \"lchToRgb\": hsluv.Hsluv.lchToRgb,\n      \"rgbToLch\": hsluv.Hsluv.rgbToLch\n    };\n    module.exports = root;\n  }\n});\n\n// ../../node_modules/eventemitter3/index.js\nvar require_eventemitter3 = __commonJS({\n  \"../../node_modules/eventemitter3/index.js\"(exports, module) {\n    \"use strict\";\n    var has = Object.prototype.hasOwnProperty;\n    var prefix = \"~\";\n    function Events() {\n    }\n    if (Object.create) {\n      Events.prototype = Object.create(null);\n      if (!new Events().__proto__)\n        prefix = false;\n    }\n    function EE(fn, context, once) {\n      this.fn = fn;\n      this.context = context;\n      this.once = once || false;\n    }\n    function addListener(emitter, event, fn, context, once) {\n      if (typeof fn !== \"function\") {\n        throw new TypeError(\"The listener must be a function\");\n      }\n      var listener = new EE(fn, context || emitter, once), evt = prefix ? prefix + event : event;\n      if (!emitter._events[evt])\n        emitter._events[evt] = listener, emitter._eventsCount++;\n      else if (!emitter._events[evt].fn)\n        emitter._events[evt].push(listener);\n      else\n        emitter._events[evt] = [emitter._events[evt], listener];\n      return emitter;\n    }\n    function clearEvent(emitter, evt) {\n      if (--emitter._eventsCount === 0)\n        emitter._events = new Events();\n      else\n        delete emitter._events[evt];\n    }\n    function EventEmitter2() {\n      this._events = new Events();\n      this._eventsCount = 0;\n    }\n    EventEmitter2.prototype.eventNames = function eventNames() {\n      var names2 = [], events2, name;\n      if (this._eventsCount === 0)\n        return names2;\n      for (name in events2 = this._events) {\n        if (has.call(events2, name))\n          names2.push(prefix ? name.slice(1) : name);\n      }\n      if (Object.getOwnPropertySymbols) {\n        return names2.concat(Object.getOwnPropertySymbols(events2));\n      }\n      return names2;\n    };\n    EventEmitter2.prototype.listeners = function listeners(event) {\n      var evt = prefix ? prefix + event : event, handlers = this._events[evt];\n      if (!handlers)\n        return [];\n      if (handlers.fn)\n        return [handlers.fn];\n      for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n        ee[i] = handlers[i].fn;\n      }\n      return ee;\n    };\n    EventEmitter2.prototype.listenerCount = function listenerCount(event) {\n      var evt = prefix ? prefix + event : event, listeners = this._events[evt];\n      if (!listeners)\n        return 0;\n      if (listeners.fn)\n        return 1;\n      return listeners.length;\n    };\n    EventEmitter2.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n      var evt = prefix ? prefix + event : event;\n      if (!this._events[evt])\n        return false;\n      var listeners = this._events[evt], len = arguments.length, args, i;\n      if (listeners.fn) {\n        if (listeners.once)\n          this.removeListener(event, listeners.fn, void 0, true);\n        switch (len) {\n          case 1:\n            return listeners.fn.call(listeners.context), true;\n          case 2:\n            return listeners.fn.call(listeners.context, a1), true;\n          case 3:\n            return listeners.fn.call(listeners.context, a1, a2), true;\n          case 4:\n            return listeners.fn.call(listeners.context, a1, a2, a3), true;\n          case 5:\n            return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n          case 6:\n            return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n        }\n        for (i = 1, args = new Array(len - 1); i < len; i++) {\n          args[i - 1] = arguments[i];\n        }\n        listeners.fn.apply(listeners.context, args);\n      } else {\n        var length = listeners.length, j;\n        for (i = 0; i < length; i++) {\n          if (listeners[i].once)\n            this.removeListener(event, listeners[i].fn, void 0, true);\n          switch (len) {\n            case 1:\n              listeners[i].fn.call(listeners[i].context);\n              break;\n            case 2:\n              listeners[i].fn.call(listeners[i].context, a1);\n              break;\n            case 3:\n              listeners[i].fn.call(listeners[i].context, a1, a2);\n              break;\n            case 4:\n              listeners[i].fn.call(listeners[i].context, a1, a2, a3);\n              break;\n            default:\n              if (!args)\n                for (j = 1, args = new Array(len - 1); j < len; j++) {\n                  args[j - 1] = arguments[j];\n                }\n              listeners[i].fn.apply(listeners[i].context, args);\n          }\n        }\n      }\n      return true;\n    };\n    EventEmitter2.prototype.on = function on(event, fn, context) {\n      return addListener(this, event, fn, context, false);\n    };\n    EventEmitter2.prototype.once = function once(event, fn, context) {\n      return addListener(this, event, fn, context, true);\n    };\n    EventEmitter2.prototype.removeListener = function removeListener(event, fn, context, once) {\n      var evt = prefix ? prefix + event : event;\n      if (!this._events[evt])\n        return this;\n      if (!fn) {\n        clearEvent(this, evt);\n        return this;\n      }\n      var listeners = this._events[evt];\n      if (listeners.fn) {\n        if (listeners.fn === fn && (!once || listeners.once) && (!context || listeners.context === context)) {\n          clearEvent(this, evt);\n        }\n      } else {\n        for (var i = 0, events2 = [], length = listeners.length; i < length; i++) {\n          if (listeners[i].fn !== fn || once && !listeners[i].once || context && listeners[i].context !== context) {\n            events2.push(listeners[i]);\n          }\n        }\n        if (events2.length)\n          this._events[evt] = events2.length === 1 ? events2[0] : events2;\n        else\n          clearEvent(this, evt);\n      }\n      return this;\n    };\n    EventEmitter2.prototype.removeAllListeners = function removeAllListeners(event) {\n      var evt;\n      if (event) {\n        evt = prefix ? prefix + event : event;\n        if (this._events[evt])\n          clearEvent(this, evt);\n      } else {\n        this._events = new Events();\n        this._eventsCount = 0;\n      }\n      return this;\n    };\n    EventEmitter2.prototype.off = EventEmitter2.prototype.removeListener;\n    EventEmitter2.prototype.addListener = EventEmitter2.prototype.on;\n    EventEmitter2.prefixed = prefix;\n    EventEmitter2.EventEmitter = EventEmitter2;\n    if (typeof module !== \"undefined\") {\n      module.exports = EventEmitter2;\n    }\n  }\n});\n\n// node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js\nvar require_hoist_non_react_statics_cjs = __commonJS({\n  \"node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js\"(exports, module) {\n    \"use strict\";\n    var REACT_STATICS = {\n      childContextTypes: true,\n      contextTypes: true,\n      defaultProps: true,\n      displayName: true,\n      getDefaultProps: true,\n      getDerivedStateFromProps: true,\n      mixins: true,\n      propTypes: true,\n      type: true\n    };\n    var KNOWN_STATICS = {\n      name: true,\n      length: true,\n      prototype: true,\n      caller: true,\n      callee: true,\n      arguments: true,\n      arity: true\n    };\n    var defineProperty = Object.defineProperty;\n    var getOwnPropertyNames = Object.getOwnPropertyNames;\n    var getOwnPropertySymbols = Object.getOwnPropertySymbols;\n    var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n    var getPrototypeOf = Object.getPrototypeOf;\n    var objectPrototype = getPrototypeOf && getPrototypeOf(Object);\n    function hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n      if (typeof sourceComponent !== \"string\") {\n        if (objectPrototype) {\n          var inheritedComponent = getPrototypeOf(sourceComponent);\n          if (inheritedComponent && inheritedComponent !== objectPrototype) {\n            hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n          }\n        }\n        var keys2 = getOwnPropertyNames(sourceComponent);\n        if (getOwnPropertySymbols) {\n          keys2 = keys2.concat(getOwnPropertySymbols(sourceComponent));\n        }\n        for (var i = 0; i < keys2.length; ++i) {\n          var key6 = keys2[i];\n          if (!REACT_STATICS[key6] && !KNOWN_STATICS[key6] && (!blacklist || !blacklist[key6])) {\n            var descriptor = getOwnPropertyDescriptor(sourceComponent, key6);\n            try {\n              defineProperty(targetComponent, key6, descriptor);\n            } catch (e) {\n            }\n          }\n        }\n        return targetComponent;\n      }\n      return targetComponent;\n    }\n    module.exports = hoistNonReactStatics;\n  }\n});\n\n// ../../node_modules/fontfaceobserver/fontfaceobserver.standalone.js\nvar require_fontfaceobserver_standalone = __commonJS({\n  \"../../node_modules/fontfaceobserver/fontfaceobserver.standalone.js\"(exports, module) {\n    (function() {\n      function l(a2, b2) {\n        document.addEventListener ? a2.addEventListener(\"scroll\", b2, false) : a2.attachEvent(\"scroll\", b2);\n      }\n      function m2(a2) {\n        document.body ? a2() : document.addEventListener ? document.addEventListener(\"DOMContentLoaded\", function c2() {\n          document.removeEventListener(\"DOMContentLoaded\", c2);\n          a2();\n        }) : document.attachEvent(\"onreadystatechange\", function k() {\n          if (document.readyState == \"interactive\" || document.readyState == \"complete\")\n            document.detachEvent(\"onreadystatechange\", k), a2();\n        });\n      }\n      ;\n      function t(a2) {\n        this.a = document.createElement(\"div\");\n        this.a.setAttribute(\"aria-hidden\", \"true\");\n        this.a.appendChild(document.createTextNode(a2));\n        this.b = document.createElement(\"span\");\n        this.c = document.createElement(\"span\");\n        this.h = document.createElement(\"span\");\n        this.f = document.createElement(\"span\");\n        this.g = -1;\n        this.b.style.cssText = \"max-width:none;display:inline-block;position:absolute;height:100%;width:100%;overflow:scroll;font-size:16px;\";\n        this.c.style.cssText = \"max-width:none;display:inline-block;position:absolute;height:100%;width:100%;overflow:scroll;font-size:16px;\";\n        this.f.style.cssText = \"max-width:none;display:inline-block;position:absolute;height:100%;width:100%;overflow:scroll;font-size:16px;\";\n        this.h.style.cssText = \"display:inline-block;width:200%;height:200%;font-size:16px;max-width:none;\";\n        this.b.appendChild(this.h);\n        this.c.appendChild(this.f);\n        this.a.appendChild(this.b);\n        this.a.appendChild(this.c);\n      }\n      function u(a2, b2) {\n        a2.a.style.cssText = \"max-width:none;min-width:20px;min-height:20px;display:inline-block;overflow:hidden;position:absolute;width:auto;margin:0;padding:0;top:-999px;white-space:nowrap;font-synthesis:none;font:\" + b2 + \";\";\n      }\n      function z(a2) {\n        var b2 = a2.a.offsetWidth, c2 = b2 + 100;\n        a2.f.style.width = c2 + \"px\";\n        a2.c.scrollLeft = c2;\n        a2.b.scrollLeft = a2.b.scrollWidth + 100;\n        return a2.g !== b2 ? (a2.g = b2, true) : false;\n      }\n      function A(a2, b2) {\n        function c2() {\n          var a3 = k;\n          z(a3) && a3.a.parentNode && b2(a3.g);\n        }\n        var k = a2;\n        l(a2.b, c2);\n        l(a2.c, c2);\n        z(a2);\n      }\n      ;\n      function B(a2, b2) {\n        var c2 = b2 || {};\n        this.family = a2;\n        this.style = c2.style || \"normal\";\n        this.weight = c2.weight || \"normal\";\n        this.stretch = c2.stretch || \"normal\";\n      }\n      var C = null, D = null, E = null, F = null;\n      function G() {\n        if (D === null)\n          if (J() && /Apple/.test(window.navigator.vendor)) {\n            var a2 = /AppleWebKit\\/([0-9]+)(?:\\.([0-9]+))(?:\\.([0-9]+))/.exec(window.navigator.userAgent);\n            D = !!a2 && 603 > parseInt(a2[1], 10);\n          } else\n            D = false;\n        return D;\n      }\n      function J() {\n        F === null && (F = !!document.fonts);\n        return F;\n      }\n      function K() {\n        if (E === null) {\n          var a2 = document.createElement(\"div\");\n          try {\n            a2.style.font = \"condensed 100px sans-serif\";\n          } catch (b2) {\n          }\n          E = a2.style.font !== \"\";\n        }\n        return E;\n      }\n      function L(a2, b2) {\n        return [a2.style, a2.weight, K() ? a2.stretch : \"\", \"100px\", b2].join(\" \");\n      }\n      B.prototype.load = function(a2, b2) {\n        var c2 = this, k = a2 || \"BESbswy\", r = 0, n = b2 || 3e3, H = new Date().getTime();\n        return new Promise(function(a3, b3) {\n          if (J() && !G()) {\n            var M = new Promise(function(a4, b4) {\n              function e() {\n                new Date().getTime() - H >= n ? b4(Error(\"\" + n + \"ms timeout exceeded\")) : document.fonts.load(L(c2, '\"' + c2.family + '\"'), k).then(function(c3) {\n                  1 <= c3.length ? a4() : setTimeout(e, 25);\n                }, b4);\n              }\n              e();\n            }), N = new Promise(function(a4, c3) {\n              r = setTimeout(function() {\n                c3(Error(\"\" + n + \"ms timeout exceeded\"));\n              }, n);\n            });\n            Promise.race([N, M]).then(function() {\n              clearTimeout(r);\n              a3(c2);\n            }, b3);\n          } else\n            m2(function() {\n              function v() {\n                var b4;\n                if (b4 = f != -1 && g != -1 || f != -1 && h != -1 || g != -1 && h != -1)\n                  (b4 = f != g && f != h && g != h) || (C === null && (b4 = /AppleWebKit\\/([0-9]+)(?:\\.([0-9]+))/.exec(window.navigator.userAgent), C = !!b4 && (536 > parseInt(b4[1], 10) || parseInt(b4[1], 10) === 536 && 11 >= parseInt(b4[2], 10))), b4 = C && (f == w && g == w && h == w || f == x && g == x && h == x || f == y && g == y && h == y)), b4 = !b4;\n                b4 && (d.parentNode && d.parentNode.removeChild(d), clearTimeout(r), a3(c2));\n              }\n              function I() {\n                if (new Date().getTime() - H >= n)\n                  d.parentNode && d.parentNode.removeChild(d), b3(Error(\"\" + n + \"ms timeout exceeded\"));\n                else {\n                  var a4 = document.hidden;\n                  if (a4 === true || a4 === void 0)\n                    f = e.a.offsetWidth, g = p.a.offsetWidth, h = q.a.offsetWidth, v();\n                  r = setTimeout(I, 50);\n                }\n              }\n              var e = new t(k), p = new t(k), q = new t(k), f = -1, g = -1, h = -1, w = -1, x = -1, y = -1, d = document.createElement(\"div\");\n              d.dir = \"ltr\";\n              u(e, L(c2, \"sans-serif\"));\n              u(p, L(c2, \"serif\"));\n              u(q, L(c2, \"monospace\"));\n              d.appendChild(e.a);\n              d.appendChild(p.a);\n              d.appendChild(q.a);\n              document.body.appendChild(d);\n              w = e.a.offsetWidth;\n              x = p.a.offsetWidth;\n              y = q.a.offsetWidth;\n              I();\n              A(e, function(a4) {\n                f = a4;\n                v();\n              });\n              u(e, L(c2, '\"' + c2.family + '\",sans-serif'));\n              A(p, function(a4) {\n                g = a4;\n                v();\n              });\n              u(p, L(c2, '\"' + c2.family + '\",serif'));\n              A(q, function(a4) {\n                h = a4;\n                v();\n              });\n              u(q, L(c2, '\"' + c2.family + '\",monospace'));\n            });\n        });\n      };\n      typeof module === \"object\" ? module.exports = B : (window.FontFaceObserver = B, window.FontFaceObserver.prototype.load = B.prototype.load);\n    })();\n  }\n});\n\n// ../../node_modules/tslib/modules/index.js\nvar import_tslib = __toModule(require_tslib());\nvar {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __metadata,\n  __awaiter,\n  __generator,\n  __exportStar,\n  __createBinding,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet\n} = import_tslib.default;\n\n// ../../node_modules/framer-motion/dist/es/motion/index.js\n\n\n\n// ../../node_modules/framer-motion/dist/es/motion/features/use-features.js\n\n\n\n// ../../node_modules/framer-motion/dist/es/motion/features/definitions.js\nvar createDefinition = function(propNames) {\n  return {\n    isEnabled: function(props) {\n      return propNames.some(function(name) {\n        return !!props[name];\n      });\n    }\n  };\n};\nvar featureDefinitions = {\n  measureLayout: createDefinition([\n    \"layout\",\n    \"layoutId\",\n    \"drag\",\n    \"_layoutResetTransform\"\n  ]),\n  animation: createDefinition([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileFocus\",\n    \"whileDrag\"\n  ]),\n  exit: createDefinition([\"exit\"]),\n  drag: createDefinition([\"drag\", \"dragControls\"]),\n  focus: createDefinition([\"whileFocus\"]),\n  hover: createDefinition([\"whileHover\", \"onHoverStart\", \"onHoverEnd\"]),\n  tap: createDefinition([\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"]),\n  pan: createDefinition([\n    \"onPan\",\n    \"onPanStart\",\n    \"onPanSessionStart\",\n    \"onPanEnd\"\n  ]),\n  layoutAnimation: createDefinition([\"layout\", \"layoutId\"])\n};\nfunction loadFeatures(features) {\n  for (var key6 in features) {\n    var Component19 = features[key6];\n    if (Component19 !== null)\n      featureDefinitions[key6].Component = Component19;\n  }\n}\n\n// ../../node_modules/hey-listen/dist/hey-listen.es.js\nvar warning = function() {\n};\nvar invariant = function() {\n};\nif (true) {\n  warning = function(check, message) {\n    if (!check && typeof console !== \"undefined\") {\n      console.warn(message);\n    }\n  };\n  invariant = function(check, message) {\n    if (!check) {\n      throw new Error(message);\n    }\n  };\n}\n\n// ../../node_modules/framer-motion/dist/es/context/LazyContext.js\n\nvar LazyContext = (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)({ strict: false });\n\n// ../../node_modules/framer-motion/dist/es/motion/features/use-features.js\nvar featureNames = Object.keys(featureDefinitions);\nvar numFeatures = featureNames.length;\nfunction useFeatures(props, visualElement2, preloadedFeatures) {\n  var features = [];\n  var lazyContext = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(LazyContext);\n  if (!visualElement2)\n    return null;\n  if (preloadedFeatures && lazyContext.strict) {\n    invariant(false, \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\");\n  }\n  for (var i = 0; i < numFeatures; i++) {\n    var name_1 = featureNames[i];\n    var _a = featureDefinitions[name_1], isEnabled = _a.isEnabled, Component19 = _a.Component;\n    if (isEnabled(props) && Component19) {\n      features.push((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Component19, __assign({ key: name_1 }, props, { visualElement: visualElement2 })));\n    }\n  }\n  return features;\n}\n\n// ../../node_modules/framer-motion/dist/es/context/MotionConfigContext.js\n\nvar MotionConfigContext = (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)({\n  transformPagePoint: function(p) {\n    return p;\n  },\n  isStatic: false\n});\n\n// ../../node_modules/framer-motion/dist/es/context/MotionContext/index.js\n\nvar MotionContext = (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)({});\nfunction useVisualElementContext() {\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(MotionContext).visualElement;\n}\n\n// ../../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.js\n\n\n// ../../node_modules/framer-motion/dist/es/context/PresenceContext.js\n\nvar PresenceContext = (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(null);\n\n// ../../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.js\n\n\n// ../../node_modules/framer-motion/dist/es/utils/use-constant.js\n\nfunction useConstant(init) {\n  var ref = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n  if (ref.current === null) {\n    ref.current = init();\n  }\n  return ref.current;\n}\n\n// ../../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.js\nfunction usePresence() {\n  var context = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(PresenceContext);\n  if (context === null)\n    return [true, null];\n  var isPresent2 = context.isPresent, onExitComplete = context.onExitComplete, register = context.register;\n  var id = useUniqueId();\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function() {\n    return register(id);\n  }, []);\n  var safeToRemove = function() {\n    return onExitComplete === null || onExitComplete === void 0 ? void 0 : onExitComplete(id);\n  };\n  return !isPresent2 && onExitComplete ? [false, safeToRemove] : [true];\n}\nfunction useIsPresent() {\n  return isPresent((0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(PresenceContext));\n}\nfunction isPresent(context) {\n  return context === null ? true : context.isPresent;\n}\nvar counter = 0;\nvar incrementId = function() {\n  return counter++;\n};\nvar useUniqueId = function() {\n  return useConstant(incrementId);\n};\n\n// ../../node_modules/framer-motion/dist/es/context/LayoutGroupContext.js\n\nvar LayoutGroupContext = (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(null);\n\n// ../../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.js\n\n\n// ../../node_modules/framer-motion/dist/es/utils/is-browser.js\nvar isBrowser = typeof window !== \"undefined\";\n\n// ../../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.js\nvar useIsomorphicLayoutEffect = isBrowser ? react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect : react__WEBPACK_IMPORTED_MODULE_0__.useEffect;\n\n// ../../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.js\nfunction useLayoutId(_a) {\n  var layoutId = _a.layoutId;\n  var layoutGroupId = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(LayoutGroupContext);\n  return layoutGroupId && layoutId !== void 0 ? layoutGroupId + \"-\" + layoutId : layoutId;\n}\nfunction useVisualElement(Component19, visualState, props, createVisualElement) {\n  var config = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(MotionConfigContext);\n  var lazyContext = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(LazyContext);\n  var parent = useVisualElementContext();\n  var presenceContext = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(PresenceContext);\n  var layoutId = useLayoutId(props);\n  var visualElementRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(void 0);\n  if (!createVisualElement)\n    createVisualElement = lazyContext.renderer;\n  if (!visualElementRef.current && createVisualElement) {\n    visualElementRef.current = createVisualElement(Component19, {\n      visualState,\n      parent,\n      props: __assign(__assign({}, props), { layoutId }),\n      presenceId: presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.id,\n      blockInitialAnimation: (presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.initial) === false\n    });\n  }\n  var visualElement2 = visualElementRef.current;\n  useIsomorphicLayoutEffect(function() {\n    if (!visualElement2)\n      return;\n    visualElement2.setProps(__assign(__assign(__assign({}, config), props), { layoutId }));\n    visualElement2.isPresent = isPresent(presenceContext);\n    visualElement2.isPresenceRoot = !parent || parent.presenceId !== (presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.id);\n    visualElement2.syncRender();\n  });\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function() {\n    var _a;\n    if (!visualElement2)\n      return;\n    (_a = visualElement2.animationState) === null || _a === void 0 ? void 0 : _a.animateChanges();\n  });\n  useIsomorphicLayoutEffect(function() {\n    return function() {\n      return visualElement2 === null || visualElement2 === void 0 ? void 0 : visualElement2.notifyUnmount();\n    };\n  }, []);\n  return visualElement2;\n}\n\n// ../../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.js\n\n\n// ../../node_modules/framer-motion/dist/es/utils/is-ref-object.js\nfunction isRefObject(ref) {\n  return typeof ref === \"object\" && Object.prototype.hasOwnProperty.call(ref, \"current\");\n}\n\n// ../../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.js\nfunction useMotionRef(visualState, visualElement2, externalRef) {\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function(instance) {\n    var _a;\n    instance && ((_a = visualState.mount) === null || _a === void 0 ? void 0 : _a.call(visualState, instance));\n    if (visualElement2) {\n      instance ? visualElement2.mount(instance) : visualElement2.unmount();\n    }\n    if (externalRef) {\n      if (typeof externalRef === \"function\") {\n        externalRef(instance);\n      } else if (isRefObject(externalRef)) {\n        externalRef.current = instance;\n      }\n    }\n  }, [visualElement2]);\n}\n\n// ../../node_modules/framer-motion/dist/es/context/MotionContext/create.js\n\n\n// ../../node_modules/framer-motion/dist/es/render/utils/variants.js\nfunction isVariantLabels(v) {\n  return Array.isArray(v);\n}\nfunction isVariantLabel(v) {\n  return typeof v === \"string\" || isVariantLabels(v);\n}\nfunction getCurrent(visualElement2) {\n  var current = {};\n  visualElement2.forEachValue(function(value, key6) {\n    return current[key6] = value.get();\n  });\n  return current;\n}\nfunction getVelocity(visualElement2) {\n  var velocity = {};\n  visualElement2.forEachValue(function(value, key6) {\n    return velocity[key6] = value.getVelocity();\n  });\n  return velocity;\n}\nfunction resolveVariantFromProps(props, definition, custom, currentValues, currentVelocity) {\n  var _a;\n  if (currentValues === void 0) {\n    currentValues = {};\n  }\n  if (currentVelocity === void 0) {\n    currentVelocity = {};\n  }\n  if (typeof definition === \"string\") {\n    definition = (_a = props.variants) === null || _a === void 0 ? void 0 : _a[definition];\n  }\n  return typeof definition === \"function\" ? definition(custom !== null && custom !== void 0 ? custom : props.custom, currentValues, currentVelocity) : definition;\n}\nfunction resolveVariant(visualElement2, definition, custom) {\n  var props = visualElement2.getProps();\n  return resolveVariantFromProps(props, definition, custom !== null && custom !== void 0 ? custom : props.custom, getCurrent(visualElement2), getVelocity(visualElement2));\n}\nfunction checkIfControllingVariants(props) {\n  var _a;\n  return typeof ((_a = props.animate) === null || _a === void 0 ? void 0 : _a.start) === \"function\" || isVariantLabel(props.initial) || isVariantLabel(props.animate) || isVariantLabel(props.whileHover) || isVariantLabel(props.whileDrag) || isVariantLabel(props.whileTap) || isVariantLabel(props.whileFocus) || isVariantLabel(props.exit);\n}\nfunction checkIfVariantNode(props) {\n  return Boolean(checkIfControllingVariants(props) || props.variants);\n}\n\n// ../../node_modules/framer-motion/dist/es/context/MotionContext/utils.js\nfunction getCurrentTreeVariants(props, context) {\n  if (checkIfControllingVariants(props)) {\n    var initial = props.initial, animate4 = props.animate;\n    return {\n      initial: initial === false || isVariantLabel(initial) ? initial : void 0,\n      animate: isVariantLabel(animate4) ? animate4 : void 0\n    };\n  }\n  return props.inherit !== false ? context : {};\n}\n\n// ../../node_modules/framer-motion/dist/es/context/MotionContext/create.js\nfunction useCreateMotionContext(props, isStatic) {\n  var _a = getCurrentTreeVariants(props, (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(MotionContext)), initial = _a.initial, animate4 = _a.animate;\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(function() {\n    return { initial, animate: animate4 };\n  }, isStatic ? [\n    variantLabelsAsDependency(initial),\n    variantLabelsAsDependency(animate4)\n  ] : []);\n}\nfunction variantLabelsAsDependency(prop) {\n  return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\n// ../../node_modules/framer-motion/dist/es/motion/index.js\nfunction createMotionComponent(_a) {\n  var preloadedFeatures = _a.preloadedFeatures, createVisualElement = _a.createVisualElement, useRender = _a.useRender, useVisualState2 = _a.useVisualState, Component19 = _a.Component;\n  preloadedFeatures && loadFeatures(preloadedFeatures);\n  function MotionComponent(props, externalRef) {\n    var isStatic = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(MotionConfigContext).isStatic;\n    var features = null;\n    var context = useCreateMotionContext(props, isStatic);\n    var visualState = useVisualState2(props, isStatic);\n    if (!isStatic && isBrowser) {\n      context.visualElement = useVisualElement(Component19, visualState, props, createVisualElement);\n      features = useFeatures(props, context.visualElement, preloadedFeatures);\n    }\n    return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(MotionContext.Provider, { value: context }, useRender(Component19, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic)), features);\n  }\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(MotionComponent);\n}\n\n// ../../node_modules/framer-motion/dist/es/render/dom/motion-proxy.js\nfunction createMotionProxy(createConfig) {\n  function custom(Component19, customMotionComponentConfig) {\n    if (customMotionComponentConfig === void 0) {\n      customMotionComponentConfig = {};\n    }\n    return createMotionComponent(createConfig(Component19, customMotionComponentConfig));\n  }\n  var componentCache = new Map();\n  return new Proxy(custom, {\n    get: function(_target, key6) {\n      if (!componentCache.has(key6)) {\n        componentCache.set(key6, custom(key6));\n      }\n      return componentCache.get(key6);\n    }\n  });\n}\n\n// ../../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.js\nvar lowercaseSVGElements = [\n  \"animate\",\n  \"circle\",\n  \"defs\",\n  \"desc\",\n  \"ellipse\",\n  \"g\",\n  \"image\",\n  \"line\",\n  \"filter\",\n  \"marker\",\n  \"mask\",\n  \"metadata\",\n  \"path\",\n  \"pattern\",\n  \"polygon\",\n  \"polyline\",\n  \"rect\",\n  \"stop\",\n  \"svg\",\n  \"switch\",\n  \"symbol\",\n  \"text\",\n  \"tspan\",\n  \"use\",\n  \"view\"\n];\n\n// ../../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.js\nfunction isSVGComponent(Component19) {\n  if (typeof Component19 !== \"string\" || Component19.includes(\"-\")) {\n    return false;\n  } else if (lowercaseSVGElements.indexOf(Component19) > -1 || /[A-Z]/.test(Component19)) {\n    return true;\n  }\n  return false;\n}\n\n// ../../node_modules/framer-motion/dist/es/render/dom/use-render.js\n\n\n// ../../node_modules/framer-motion/dist/es/render/html/use-props.js\n\n\n// ../../node_modules/framer-motion/dist/es/render/dom/projection/scale-correction.js\nvar valueScaleCorrection = {};\nfunction addScaleCorrection(correctors) {\n  for (var key6 in correctors) {\n    valueScaleCorrection[key6] = correctors[key6];\n  }\n}\n\n// ../../node_modules/framer-motion/dist/es/render/html/utils/transform.js\nvar transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nvar order = [\"translate\", \"scale\", \"rotate\", \"skew\"];\nvar transformProps = [\"transformPerspective\", \"x\", \"y\", \"z\"];\norder.forEach(function(operationKey) {\n  return transformAxes.forEach(function(axesKey) {\n    return transformProps.push(operationKey + axesKey);\n  });\n});\nfunction sortTransformProps(a2, b2) {\n  return transformProps.indexOf(a2) - transformProps.indexOf(b2);\n}\nvar transformPropSet = new Set(transformProps);\nfunction isTransformProp(key6) {\n  return transformPropSet.has(key6);\n}\nvar transformOriginProps = new Set([\"originX\", \"originY\", \"originZ\"]);\nfunction isTransformOriginProp(key6) {\n  return transformOriginProps.has(key6);\n}\n\n// ../../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.js\nfunction isForcedMotionValue(key6, _a) {\n  var layout = _a.layout, layoutId = _a.layoutId;\n  return isTransformProp(key6) || isTransformOriginProp(key6) || (layout || layoutId !== void 0) && (!!valueScaleCorrection[key6] || key6 === \"opacity\");\n}\n\n// ../../node_modules/framer-motion/dist/es/value/utils/is-motion-value.js\nvar isMotionValue = function(value) {\n  return value !== null && typeof value === \"object\" && value.getVelocity;\n};\n\n// ../../node_modules/framer-motion/dist/es/render/html/utils/build-transform.js\nvar translateAlias = {\n  x: \"translateX\",\n  y: \"translateY\",\n  z: \"translateZ\",\n  transformPerspective: \"perspective\"\n};\nfunction buildTransform(_a, _b, transformIsDefault, transformTemplate2) {\n  var transform2 = _a.transform, transformKeys2 = _a.transformKeys;\n  var _c = _b.enableHardwareAcceleration, enableHardwareAcceleration = _c === void 0 ? true : _c, _d = _b.allowTransformNone, allowTransformNone = _d === void 0 ? true : _d;\n  var transformString2 = \"\";\n  transformKeys2.sort(sortTransformProps);\n  var transformHasZ = false;\n  var numTransformKeys = transformKeys2.length;\n  for (var i = 0; i < numTransformKeys; i++) {\n    var key6 = transformKeys2[i];\n    transformString2 += (translateAlias[key6] || key6) + \"(\" + transform2[key6] + \") \";\n    if (key6 === \"z\")\n      transformHasZ = true;\n  }\n  if (!transformHasZ && enableHardwareAcceleration) {\n    transformString2 += \"translateZ(0)\";\n  } else {\n    transformString2 = transformString2.trim();\n  }\n  if (transformTemplate2) {\n    transformString2 = transformTemplate2(transform2, transformIsDefault ? \"\" : transformString2);\n  } else if (allowTransformNone && transformIsDefault) {\n    transformString2 = \"none\";\n  }\n  return transformString2;\n}\nfunction buildTransformOrigin(_a) {\n  var _b = _a.originX, originX = _b === void 0 ? \"50%\" : _b, _c = _a.originY, originY = _c === void 0 ? \"50%\" : _c, _d = _a.originZ, originZ = _d === void 0 ? 0 : _d;\n  return originX + \" \" + originY + \" \" + originZ;\n}\n\n// ../../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.js\nfunction isCSSVariable(key6) {\n  return key6.startsWith(\"--\");\n}\n\n// ../../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.js\nvar getValueAsType = function(value, type) {\n  return type && typeof value === \"number\" ? type.transform(value) : value;\n};\n\n// ../../node_modules/style-value-types/dist/es/utils.js\nvar clamp = function(min, max) {\n  return function(v) {\n    return Math.max(Math.min(v, max), min);\n  };\n};\nvar sanitize = function(v) {\n  return v % 1 ? Number(v.toFixed(5)) : v;\n};\nvar floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nvar colorRegex = /(#[0-9a-f]{6}|#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2,3}\\s*\\/*\\s*[\\d\\.]+%?\\))/gi;\nvar singleColorRegex = /^(#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2,3}\\s*\\/*\\s*[\\d\\.]+%?\\))$/i;\nfunction isString(v) {\n  return typeof v === \"string\";\n}\n\n// ../../node_modules/style-value-types/dist/es/numbers/index.js\nvar number = {\n  test: function(v) {\n    return typeof v === \"number\";\n  },\n  parse: parseFloat,\n  transform: function(v) {\n    return v;\n  }\n};\nvar alpha = __assign(__assign({}, number), { transform: clamp(0, 1) });\nvar scale = __assign(__assign({}, number), { default: 1 });\n\n// ../../node_modules/style-value-types/dist/es/numbers/units.js\nvar createUnitType = function(unit) {\n  return {\n    test: function(v) {\n      return isString(v) && v.endsWith(unit) && v.split(\" \").length === 1;\n    },\n    parse: parseFloat,\n    transform: function(v) {\n      return \"\" + v + unit;\n    }\n  };\n};\nvar degrees = createUnitType(\"deg\");\nvar percent = createUnitType(\"%\");\nvar px = createUnitType(\"px\");\nvar vh = createUnitType(\"vh\");\nvar vw = createUnitType(\"vw\");\nvar progressPercentage = __assign(__assign({}, percent), { parse: function(v) {\n  return percent.parse(v) / 100;\n}, transform: function(v) {\n  return percent.transform(v * 100);\n} });\n\n// ../../node_modules/style-value-types/dist/es/color/utils.js\nvar isColorString = function(type, testProp) {\n  return function(v) {\n    return Boolean(isString(v) && singleColorRegex.test(v) && v.startsWith(type) || testProp && Object.prototype.hasOwnProperty.call(v, testProp));\n  };\n};\nvar splitColor = function(aName, bName, cName) {\n  return function(v) {\n    var _a;\n    if (!isString(v))\n      return v;\n    var _b = v.match(floatRegex), a2 = _b[0], b2 = _b[1], c2 = _b[2], alpha2 = _b[3];\n    return _a = {}, _a[aName] = parseFloat(a2), _a[bName] = parseFloat(b2), _a[cName] = parseFloat(c2), _a.alpha = alpha2 !== void 0 ? parseFloat(alpha2) : 1, _a;\n  };\n};\n\n// ../../node_modules/style-value-types/dist/es/color/hsla.js\nvar hsla = {\n  test: isColorString(\"hsl\", \"hue\"),\n  parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n  transform: function(_a) {\n    var hue = _a.hue, saturation = _a.saturation, lightness = _a.lightness, _b = _a.alpha, alpha$1 = _b === void 0 ? 1 : _b;\n    return \"hsla(\" + Math.round(hue) + \", \" + percent.transform(sanitize(saturation)) + \", \" + percent.transform(sanitize(lightness)) + \", \" + sanitize(alpha.transform(alpha$1)) + \")\";\n  }\n};\n\n// ../../node_modules/style-value-types/dist/es/color/rgba.js\nvar clampRgbUnit = clamp(0, 255);\nvar rgbUnit = __assign(__assign({}, number), { transform: function(v) {\n  return Math.round(clampRgbUnit(v));\n} });\nvar rgba = {\n  test: isColorString(\"rgb\", \"red\"),\n  parse: splitColor(\"red\", \"green\", \"blue\"),\n  transform: function(_a) {\n    var red = _a.red, green = _a.green, blue = _a.blue, _b = _a.alpha, alpha$1 = _b === void 0 ? 1 : _b;\n    return \"rgba(\" + rgbUnit.transform(red) + \", \" + rgbUnit.transform(green) + \", \" + rgbUnit.transform(blue) + \", \" + sanitize(alpha.transform(alpha$1)) + \")\";\n  }\n};\n\n// ../../node_modules/style-value-types/dist/es/color/hex.js\nfunction parseHex(v) {\n  var r = \"\";\n  var g = \"\";\n  var b2 = \"\";\n  var a2 = \"\";\n  if (v.length > 5) {\n    r = v.substr(1, 2);\n    g = v.substr(3, 2);\n    b2 = v.substr(5, 2);\n    a2 = v.substr(7, 2);\n  } else {\n    r = v.substr(1, 1);\n    g = v.substr(2, 1);\n    b2 = v.substr(3, 1);\n    a2 = v.substr(4, 1);\n    r += r;\n    g += g;\n    b2 += b2;\n    a2 += a2;\n  }\n  return {\n    red: parseInt(r, 16),\n    green: parseInt(g, 16),\n    blue: parseInt(b2, 16),\n    alpha: a2 ? parseInt(a2, 16) / 255 : 1\n  };\n}\nvar hex = {\n  test: isColorString(\"#\"),\n  parse: parseHex,\n  transform: rgba.transform\n};\n\n// ../../node_modules/style-value-types/dist/es/color/index.js\nvar color = {\n  test: function(v) {\n    return rgba.test(v) || hex.test(v) || hsla.test(v);\n  },\n  parse: function(v) {\n    if (rgba.test(v)) {\n      return rgba.parse(v);\n    } else if (hsla.test(v)) {\n      return hsla.parse(v);\n    } else {\n      return hex.parse(v);\n    }\n  },\n  transform: function(v) {\n    return isString(v) ? v : v.hasOwnProperty(\"red\") ? rgba.transform(v) : hsla.transform(v);\n  }\n};\n\n// ../../node_modules/style-value-types/dist/es/complex/index.js\nvar colorToken = \"${c}\";\nvar numberToken = \"${n}\";\nfunction test(v) {\n  var _a, _b, _c, _d;\n  return isNaN(v) && isString(v) && ((_b = (_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0) + ((_d = (_c = v.match(colorRegex)) === null || _c === void 0 ? void 0 : _c.length) !== null && _d !== void 0 ? _d : 0) > 0;\n}\nfunction analyse(v) {\n  var values = [];\n  var numColors = 0;\n  var colors = v.match(colorRegex);\n  if (colors) {\n    numColors = colors.length;\n    v = v.replace(colorRegex, colorToken);\n    values.push.apply(values, colors.map(color.parse));\n  }\n  var numbers = v.match(floatRegex);\n  if (numbers) {\n    v = v.replace(floatRegex, numberToken);\n    values.push.apply(values, numbers.map(number.parse));\n  }\n  return { values, numColors, tokenised: v };\n}\nfunction parse(v) {\n  return analyse(v).values;\n}\nfunction createTransformer(v) {\n  var _a = analyse(v), values = _a.values, numColors = _a.numColors, tokenised = _a.tokenised;\n  var numValues = values.length;\n  return function(v2) {\n    var output = tokenised;\n    for (var i = 0; i < numValues; i++) {\n      output = output.replace(i < numColors ? colorToken : numberToken, i < numColors ? color.transform(v2[i]) : sanitize(v2[i]));\n    }\n    return output;\n  };\n}\nvar convertNumbersToZero = function(v) {\n  return typeof v === \"number\" ? 0 : v;\n};\nfunction getAnimatableNone(v) {\n  var parsed = parse(v);\n  var transformer = createTransformer(v);\n  return transformer(parsed.map(convertNumbersToZero));\n}\nvar complex = { test, parse, createTransformer, getAnimatableNone };\n\n// ../../node_modules/style-value-types/dist/es/complex/filter.js\nvar maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n  var _a = v.slice(0, -1).split(\"(\"), name = _a[0], value = _a[1];\n  if (name === \"drop-shadow\")\n    return v;\n  var number2 = (value.match(floatRegex) || [])[0];\n  if (!number2)\n    return v;\n  var unit = value.replace(number2, \"\");\n  var defaultValue = maxDefaults.has(name) ? 1 : 0;\n  if (number2 !== value)\n    defaultValue *= 100;\n  return name + \"(\" + defaultValue + unit + \")\";\n}\nvar functionRegex = /([a-z-]*)\\(.*?\\)/g;\nvar filter = __assign(__assign({}, complex), { getAnimatableNone: function(v) {\n  var functions = v.match(functionRegex);\n  return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n} });\n\n// ../../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.js\nvar int = __assign(__assign({}, number), { transform: Math.round });\n\n// ../../node_modules/framer-motion/dist/es/render/dom/value-types/number.js\nvar numberValueTypes = {\n  borderWidth: px,\n  borderTopWidth: px,\n  borderRightWidth: px,\n  borderBottomWidth: px,\n  borderLeftWidth: px,\n  borderRadius: px,\n  radius: px,\n  borderTopLeftRadius: px,\n  borderTopRightRadius: px,\n  borderBottomRightRadius: px,\n  borderBottomLeftRadius: px,\n  width: px,\n  maxWidth: px,\n  height: px,\n  maxHeight: px,\n  size: px,\n  top: px,\n  right: px,\n  bottom: px,\n  left: px,\n  padding: px,\n  paddingTop: px,\n  paddingRight: px,\n  paddingBottom: px,\n  paddingLeft: px,\n  margin: px,\n  marginTop: px,\n  marginRight: px,\n  marginBottom: px,\n  marginLeft: px,\n  rotate: degrees,\n  rotateX: degrees,\n  rotateY: degrees,\n  rotateZ: degrees,\n  scale,\n  scaleX: scale,\n  scaleY: scale,\n  scaleZ: scale,\n  skew: degrees,\n  skewX: degrees,\n  skewY: degrees,\n  distance: px,\n  translateX: px,\n  translateY: px,\n  translateZ: px,\n  x: px,\n  y: px,\n  z: px,\n  perspective: px,\n  transformPerspective: px,\n  opacity: __assign(__assign({}, alpha), { default: 1 }),\n  originX: progressPercentage,\n  originY: progressPercentage,\n  originZ: px,\n  zIndex: int,\n  fillOpacity: alpha,\n  strokeOpacity: alpha,\n  numOctaves: int\n};\n\n// ../../node_modules/framer-motion/dist/es/render/html/utils/build-styles.js\nfunction buildHTMLStyles(state, latestValues, projection, layoutState, options, transformTemplate2, buildProjectionTransform, buildProjectionTransformOrigin) {\n  var _a;\n  var style = state.style, vars = state.vars, transform2 = state.transform, transformKeys2 = state.transformKeys, transformOrigin = state.transformOrigin;\n  transformKeys2.length = 0;\n  var hasTransform = false;\n  var hasTransformOrigin = false;\n  var transformIsNone = true;\n  for (var key6 in latestValues) {\n    var value = latestValues[key6];\n    if (isCSSVariable(key6)) {\n      vars[key6] = value;\n      continue;\n    }\n    var valueType = numberValueTypes[key6];\n    var valueAsType = getValueAsType(value, valueType);\n    if (isTransformProp(key6)) {\n      hasTransform = true;\n      transform2[key6] = valueAsType;\n      transformKeys2.push(key6);\n      if (!transformIsNone)\n        continue;\n      if (value !== ((_a = valueType.default) !== null && _a !== void 0 ? _a : 0))\n        transformIsNone = false;\n    } else if (isTransformOriginProp(key6)) {\n      transformOrigin[key6] = valueAsType;\n      hasTransformOrigin = true;\n    } else {\n      if (layoutState && projection && layoutState.isHydrated && valueScaleCorrection[key6]) {\n        var correctedValue = valueScaleCorrection[key6].process(value, layoutState, projection);\n        var applyTo = valueScaleCorrection[key6].applyTo;\n        if (applyTo) {\n          var num = applyTo.length;\n          for (var i = 0; i < num; i++) {\n            style[applyTo[i]] = correctedValue;\n          }\n        } else {\n          style[key6] = correctedValue;\n        }\n      } else {\n        style[key6] = valueAsType;\n      }\n    }\n  }\n  if (layoutState && projection && buildProjectionTransform && buildProjectionTransformOrigin) {\n    style.transform = buildProjectionTransform(layoutState.deltaFinal, layoutState.treeScale, hasTransform ? transform2 : void 0);\n    if (transformTemplate2) {\n      style.transform = transformTemplate2(transform2, style.transform);\n    }\n    style.transformOrigin = buildProjectionTransformOrigin(layoutState);\n  } else {\n    if (hasTransform) {\n      style.transform = buildTransform(state, options, transformIsNone, transformTemplate2);\n    }\n    if (hasTransformOrigin) {\n      style.transformOrigin = buildTransformOrigin(transformOrigin);\n    }\n  }\n}\n\n// ../../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.js\nvar createHtmlRenderState = function() {\n  return {\n    style: {},\n    transform: {},\n    transformKeys: [],\n    transformOrigin: {},\n    vars: {}\n  };\n};\n\n// ../../node_modules/framer-motion/dist/es/render/html/use-props.js\nfunction copyRawValuesOnly(target, source, props) {\n  for (var key6 in source) {\n    if (!isMotionValue(source[key6]) && !isForcedMotionValue(key6, props)) {\n      target[key6] = source[key6];\n    }\n  }\n}\nfunction useInitialMotionValues(_a, visualState, isStatic) {\n  var transformTemplate2 = _a.transformTemplate;\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(function() {\n    var state = createHtmlRenderState();\n    buildHTMLStyles(state, visualState, void 0, void 0, { enableHardwareAcceleration: !isStatic }, transformTemplate2);\n    var vars = state.vars, style = state.style;\n    return __assign(__assign({}, vars), style);\n  }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n  var styleProp = props.style || {};\n  var style = {};\n  copyRawValuesOnly(style, styleProp, props);\n  Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n  if (props.transformValues) {\n    style = props.transformValues(style);\n  }\n  return style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n  var htmlProps = {};\n  var style = useStyle(props, visualState, isStatic);\n  if (Boolean(props.drag)) {\n    htmlProps.draggable = false;\n    style.userSelect = style.WebkitUserSelect = style.WebkitTouchCallout = \"none\";\n    style.touchAction = props.drag === true ? \"none\" : \"pan-\" + (props.drag === \"x\" ? \"y\" : \"x\");\n  }\n  htmlProps.style = style;\n  return htmlProps;\n}\n\n// ../../node_modules/framer-motion/dist/es/motion/utils/valid-prop.js\nvar validMotionProps = new Set([\n  \"initial\",\n  \"animate\",\n  \"exit\",\n  \"style\",\n  \"variants\",\n  \"transition\",\n  \"transformTemplate\",\n  \"transformValues\",\n  \"custom\",\n  \"inherit\",\n  \"layout\",\n  \"layoutId\",\n  \"_layoutResetTransform\",\n  \"onLayoutAnimationComplete\",\n  \"onViewportBoxUpdate\",\n  \"onLayoutMeasure\",\n  \"onBeforeLayoutMeasure\",\n  \"onAnimationStart\",\n  \"onAnimationComplete\",\n  \"onUpdate\",\n  \"onDragStart\",\n  \"onDrag\",\n  \"onDragEnd\",\n  \"onMeasureDragConstraints\",\n  \"onDirectionLock\",\n  \"onDragTransitionEnd\",\n  \"drag\",\n  \"dragControls\",\n  \"dragListener\",\n  \"dragConstraints\",\n  \"dragDirectionLock\",\n  \"_dragX\",\n  \"_dragY\",\n  \"dragElastic\",\n  \"dragMomentum\",\n  \"dragPropagation\",\n  \"dragTransition\",\n  \"whileDrag\",\n  \"onPan\",\n  \"onPanStart\",\n  \"onPanEnd\",\n  \"onPanSessionStart\",\n  \"onTap\",\n  \"onTapStart\",\n  \"onTapCancel\",\n  \"onHoverStart\",\n  \"onHoverEnd\",\n  \"whileFocus\",\n  \"whileTap\",\n  \"whileHover\"\n]);\nfunction isValidMotionProp(key6) {\n  return validMotionProps.has(key6);\n}\n\n// ../../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.js\nvar shouldForward = function(key6) {\n  return !isValidMotionProp(key6);\n};\ntry {\n  emotionIsPropValid_1 = require_is_prop_valid_browser_cjs().default;\n  shouldForward = function(key6) {\n    if (key6.startsWith(\"on\")) {\n      return !isValidMotionProp(key6);\n    } else {\n      return emotionIsPropValid_1(key6);\n    }\n  };\n} catch (_a) {\n}\nvar emotionIsPropValid_1;\nfunction filterProps(props, isDom, forwardMotionProps) {\n  var filteredProps2 = {};\n  for (var key6 in props) {\n    if (shouldForward(key6) || forwardMotionProps === true && isValidMotionProp(key6) || !isDom && !isValidMotionProp(key6)) {\n      filteredProps2[key6] = props[key6];\n    }\n  }\n  return filteredProps2;\n}\n\n// ../../node_modules/framer-motion/dist/es/render/svg/use-props.js\n\n\n// ../../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.js\nfunction calcOrigin(origin, offset, size2) {\n  return typeof origin === \"string\" ? origin : px.transform(offset + size2 * origin);\n}\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n  var pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n  var pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n  return pxOriginX + \" \" + pxOriginY;\n}\n\n// ../../node_modules/framer-motion/dist/es/render/svg/utils/path.js\nvar progressToPixels = function(progress2, length) {\n  return px.transform(progress2 * length);\n};\nvar dashKeys = {\n  offset: \"stroke-dashoffset\",\n  array: \"stroke-dasharray\"\n};\nvar camelKeys = {\n  offset: \"strokeDashoffset\",\n  array: \"strokeDasharray\"\n};\nfunction buildSVGPath(attrs, totalLength, length, spacing, offset, useDashCase) {\n  if (spacing === void 0) {\n    spacing = 1;\n  }\n  if (offset === void 0) {\n    offset = 0;\n  }\n  if (useDashCase === void 0) {\n    useDashCase = true;\n  }\n  var keys2 = useDashCase ? dashKeys : camelKeys;\n  attrs[keys2.offset] = progressToPixels(-offset, totalLength);\n  var pathLength = progressToPixels(length, totalLength);\n  var pathSpacing = progressToPixels(spacing, totalLength);\n  attrs[keys2.array] = pathLength + \" \" + pathSpacing;\n}\n\n// ../../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.js\nfunction buildSVGAttrs(state, _a, projection, layoutState, options, transformTemplate2, buildProjectionTransform, buildProjectionTransformOrigin) {\n  var attrX = _a.attrX, attrY = _a.attrY, originX = _a.originX, originY = _a.originY, pathLength = _a.pathLength, _b = _a.pathSpacing, pathSpacing = _b === void 0 ? 1 : _b, _c = _a.pathOffset, pathOffset = _c === void 0 ? 0 : _c, latest = __rest(_a, [\"attrX\", \"attrY\", \"originX\", \"originY\", \"pathLength\", \"pathSpacing\", \"pathOffset\"]);\n  buildHTMLStyles(state, latest, projection, layoutState, options, transformTemplate2, buildProjectionTransform, buildProjectionTransformOrigin);\n  state.attrs = state.style;\n  state.style = {};\n  var attrs = state.attrs, style = state.style, dimensions = state.dimensions, totalPathLength = state.totalPathLength;\n  if (attrs.transform) {\n    if (dimensions)\n      style.transform = attrs.transform;\n    delete attrs.transform;\n  }\n  if (dimensions && (originX !== void 0 || originY !== void 0 || style.transform)) {\n    style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== void 0 ? originX : 0.5, originY !== void 0 ? originY : 0.5);\n  }\n  if (attrX !== void 0)\n    attrs.x = attrX;\n  if (attrY !== void 0)\n    attrs.y = attrY;\n  if (totalPathLength !== void 0 && pathLength !== void 0) {\n    buildSVGPath(attrs, totalPathLength, pathLength, pathSpacing, pathOffset, false);\n  }\n}\n\n// ../../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.js\nvar createSvgRenderState = function() {\n  return __assign(__assign({}, createHtmlRenderState()), { attrs: {} });\n};\n\n// ../../node_modules/framer-motion/dist/es/render/svg/use-props.js\nfunction useSVGProps(props, visualState) {\n  var visualProps = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(function() {\n    var state = createSvgRenderState();\n    buildSVGAttrs(state, visualState, void 0, void 0, { enableHardwareAcceleration: false }, props.transformTemplate);\n    return __assign(__assign({}, state.attrs), { style: __assign({}, state.style) });\n  }, [visualState]);\n  if (props.style) {\n    var rawStyles = {};\n    copyRawValuesOnly(rawStyles, props.style, props);\n    visualProps.style = __assign(__assign({}, rawStyles), visualProps.style);\n  }\n  return visualProps;\n}\n\n// ../../node_modules/framer-motion/dist/es/render/dom/use-render.js\nfunction createUseRender(forwardMotionProps) {\n  if (forwardMotionProps === void 0) {\n    forwardMotionProps = false;\n  }\n  var useRender = function(Component19, props, ref, _a, isStatic) {\n    var latestValues = _a.latestValues;\n    var useVisualProps = isSVGComponent(Component19) ? useSVGProps : useHTMLProps;\n    var visualProps = useVisualProps(props, latestValues, isStatic);\n    var filteredProps2 = filterProps(props, typeof Component19 === \"string\", forwardMotionProps);\n    var elementProps = __assign(__assign(__assign({}, filteredProps2), visualProps), { ref });\n    return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Component19, elementProps);\n  };\n  return useRender;\n}\n\n// ../../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.js\nvar CAMEL_CASE_PATTERN = /([a-z])([A-Z])/g;\nvar REPLACE_TEMPLATE = \"$1-$2\";\nvar camelToDash = function(str) {\n  return str.replace(CAMEL_CASE_PATTERN, REPLACE_TEMPLATE).toLowerCase();\n};\n\n// ../../node_modules/framer-motion/dist/es/render/html/utils/render.js\nfunction renderHTML(element, _a) {\n  var style = _a.style, vars = _a.vars;\n  Object.assign(element.style, style);\n  for (var key6 in vars) {\n    element.style.setProperty(key6, vars[key6]);\n  }\n}\n\n// ../../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.js\nvar camelCaseAttributes = new Set([\n  \"baseFrequency\",\n  \"diffuseConstant\",\n  \"kernelMatrix\",\n  \"kernelUnitLength\",\n  \"keySplines\",\n  \"keyTimes\",\n  \"limitingConeAngle\",\n  \"markerHeight\",\n  \"markerWidth\",\n  \"numOctaves\",\n  \"targetX\",\n  \"targetY\",\n  \"surfaceScale\",\n  \"specularConstant\",\n  \"specularExponent\",\n  \"stdDeviation\",\n  \"tableValues\",\n  \"viewBox\"\n]);\n\n// ../../node_modules/framer-motion/dist/es/render/svg/utils/render.js\nfunction renderSVG(element, renderState) {\n  renderHTML(element, renderState);\n  for (var key6 in renderState.attrs) {\n    element.setAttribute(!camelCaseAttributes.has(key6) ? camelToDash(key6) : key6, renderState.attrs[key6]);\n  }\n}\n\n// ../../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.js\nfunction scrapeMotionValuesFromProps(props) {\n  var style = props.style;\n  var newValues = {};\n  for (var key6 in style) {\n    if (isMotionValue(style[key6]) || isForcedMotionValue(key6, props)) {\n      newValues[key6] = style[key6];\n    }\n  }\n  return newValues;\n}\n\n// ../../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.js\nfunction scrapeMotionValuesFromProps2(props) {\n  var newValues = scrapeMotionValuesFromProps(props);\n  for (var key6 in props) {\n    if (isMotionValue(props[key6])) {\n      var targetKey = key6 === \"x\" || key6 === \"y\" ? \"attr\" + key6.toUpperCase() : key6;\n      newValues[targetKey] = props[key6];\n    }\n  }\n  return newValues;\n}\n\n// ../../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.js\n\n\n// ../../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.js\nfunction isAnimationControls(v) {\n  return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\n// ../../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.js\nvar isKeyframesTarget = function(v) {\n  return Array.isArray(v);\n};\n\n// ../../node_modules/framer-motion/dist/es/utils/resolve-value.js\nvar isCustomValue = function(v) {\n  return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nvar resolveFinalValueInKeyframes = function(v) {\n  return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\n// ../../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.js\nfunction resolveMotionValue(value) {\n  var unwrappedValue = isMotionValue(value) ? value.get() : value;\n  return isCustomValue(unwrappedValue) ? unwrappedValue.toValue() : unwrappedValue;\n}\n\n// ../../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.js\nfunction makeState(_a, props, context, presenceContext) {\n  var scrapeMotionValuesFromProps3 = _a.scrapeMotionValuesFromProps, createRenderState = _a.createRenderState, onMount = _a.onMount;\n  var state = {\n    latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps3),\n    renderState: createRenderState()\n  };\n  if (onMount) {\n    state.mount = function(instance) {\n      return onMount(props, instance, state);\n    };\n  }\n  return state;\n}\nvar makeUseVisualState = function(config) {\n  return function(props, isStatic) {\n    var context = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(MotionContext);\n    var presenceContext = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(PresenceContext);\n    return isStatic ? makeState(config, props, context, presenceContext) : useConstant(function() {\n      return makeState(config, props, context, presenceContext);\n    });\n  };\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n  var values = {};\n  var blockInitialAnimation = (presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.initial) === false;\n  var motionValues = scrapeMotionValues(props);\n  for (var key6 in motionValues) {\n    values[key6] = resolveMotionValue(motionValues[key6]);\n  }\n  var initial = props.initial, animate4 = props.animate;\n  var isControllingVariants = checkIfControllingVariants(props);\n  var isVariantNode = checkIfVariantNode(props);\n  if (context && isVariantNode && !isControllingVariants && props.inherit !== false) {\n    initial !== null && initial !== void 0 ? initial : initial = context.initial;\n    animate4 !== null && animate4 !== void 0 ? animate4 : animate4 = context.animate;\n  }\n  var variantToSet = blockInitialAnimation || initial === false ? animate4 : initial;\n  if (variantToSet && typeof variantToSet !== \"boolean\" && !isAnimationControls(variantToSet)) {\n    var list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n    list.forEach(function(definition) {\n      var resolved = resolveVariantFromProps(props, definition);\n      if (!resolved)\n        return;\n      var transitionEnd = resolved.transitionEnd;\n      resolved.transition;\n      var target = __rest(resolved, [\"transitionEnd\", \"transition\"]);\n      for (var key7 in target)\n        values[key7] = target[key7];\n      for (var key7 in transitionEnd)\n        values[key7] = transitionEnd[key7];\n    });\n  }\n  return values;\n}\n\n// ../../node_modules/framer-motion/dist/es/render/svg/config-motion.js\nvar svgMotionConfig = {\n  useVisualState: makeUseVisualState({\n    scrapeMotionValuesFromProps: scrapeMotionValuesFromProps2,\n    createRenderState: createSvgRenderState,\n    onMount: function(props, instance, _a) {\n      var renderState = _a.renderState, latestValues = _a.latestValues;\n      try {\n        renderState.dimensions = typeof instance.getBBox === \"function\" ? instance.getBBox() : instance.getBoundingClientRect();\n      } catch (e) {\n        renderState.dimensions = {\n          x: 0,\n          y: 0,\n          width: 0,\n          height: 0\n        };\n      }\n      if (isPath(instance)) {\n        renderState.totalPathLength = instance.getTotalLength();\n      }\n      buildSVGAttrs(renderState, latestValues, void 0, void 0, { enableHardwareAcceleration: false }, props.transformTemplate);\n      renderSVG(instance, renderState);\n    }\n  })\n};\nfunction isPath(element) {\n  return element.tagName === \"path\";\n}\n\n// ../../node_modules/framer-motion/dist/es/render/html/config-motion.js\nvar htmlMotionConfig = {\n  useVisualState: makeUseVisualState({\n    scrapeMotionValuesFromProps,\n    createRenderState: createHtmlRenderState\n  })\n};\n\n// ../../node_modules/framer-motion/dist/es/render/dom/utils/create-config.js\nfunction createDomMotionConfig(Component19, _a, preloadedFeatures, createVisualElement) {\n  var _b = _a.forwardMotionProps, forwardMotionProps = _b === void 0 ? false : _b;\n  var baseConfig = isSVGComponent(Component19) ? svgMotionConfig : htmlMotionConfig;\n  return __assign(__assign({}, baseConfig), {\n    preloadedFeatures,\n    useRender: createUseRender(forwardMotionProps),\n    createVisualElement,\n    Component: Component19\n  });\n}\n\n// ../../node_modules/framer-motion/dist/es/render/utils/types.js\nvar AnimationType;\n(function(AnimationType2) {\n  AnimationType2[\"Animate\"] = \"animate\";\n  AnimationType2[\"Hover\"] = \"whileHover\";\n  AnimationType2[\"Tap\"] = \"whileTap\";\n  AnimationType2[\"Drag\"] = \"whileDrag\";\n  AnimationType2[\"Focus\"] = \"whileFocus\";\n  AnimationType2[\"Exit\"] = \"exit\";\n})(AnimationType || (AnimationType = {}));\n\n// ../../node_modules/framer-motion/dist/es/events/use-dom-event.js\n\nfunction addDomEvent(target, eventName, handler, options) {\n  target.addEventListener(eventName, handler, options);\n  return function() {\n    return target.removeEventListener(eventName, handler, options);\n  };\n}\nfunction useDomEvent(ref, eventName, handler, options) {\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function() {\n    var element = ref.current;\n    if (handler && element) {\n      return addDomEvent(element, eventName, handler, options);\n    }\n  }, [ref, eventName, handler, options]);\n}\n\n// ../../node_modules/framer-motion/dist/es/gestures/use-focus-gesture.js\nfunction useFocusGesture(_a) {\n  var whileFocus = _a.whileFocus, visualElement2 = _a.visualElement;\n  var onFocus = function() {\n    var _a2;\n    (_a2 = visualElement2.animationState) === null || _a2 === void 0 ? void 0 : _a2.setActive(AnimationType.Focus, true);\n  };\n  var onBlur = function() {\n    var _a2;\n    (_a2 = visualElement2.animationState) === null || _a2 === void 0 ? void 0 : _a2.setActive(AnimationType.Focus, false);\n  };\n  useDomEvent(visualElement2, \"focus\", whileFocus ? onFocus : void 0);\n  useDomEvent(visualElement2, \"blur\", whileFocus ? onBlur : void 0);\n}\n\n// ../../node_modules/framer-motion/dist/es/gestures/utils/event-type.js\nfunction isMouseEvent(event) {\n  if (typeof PointerEvent !== \"undefined\" && event instanceof PointerEvent) {\n    return !!(event.pointerType === \"mouse\");\n  }\n  return event instanceof MouseEvent;\n}\nfunction isTouchEvent(event) {\n  var hasTouches = !!event.touches;\n  return hasTouches;\n}\n\n// ../../node_modules/framer-motion/dist/es/events/event-info.js\nfunction filterPrimaryPointer(eventHandler) {\n  return function(event) {\n    var isMouseEvent2 = event instanceof MouseEvent;\n    var isPrimaryPointer = !isMouseEvent2 || isMouseEvent2 && event.button === 0;\n    if (isPrimaryPointer) {\n      eventHandler(event);\n    }\n  };\n}\nvar defaultPagePoint = { pageX: 0, pageY: 0 };\nfunction pointFromTouch(e, pointType) {\n  if (pointType === void 0) {\n    pointType = \"page\";\n  }\n  var primaryTouch = e.touches[0] || e.changedTouches[0];\n  var point = primaryTouch || defaultPagePoint;\n  return {\n    x: point[pointType + \"X\"],\n    y: point[pointType + \"Y\"]\n  };\n}\nfunction pointFromMouse(point, pointType) {\n  if (pointType === void 0) {\n    pointType = \"page\";\n  }\n  return {\n    x: point[pointType + \"X\"],\n    y: point[pointType + \"Y\"]\n  };\n}\nfunction extractEventInfo(event, pointType) {\n  if (pointType === void 0) {\n    pointType = \"page\";\n  }\n  return {\n    point: isTouchEvent(event) ? pointFromTouch(event, pointType) : pointFromMouse(event, pointType)\n  };\n}\nfunction getViewportPointFromEvent(event) {\n  return extractEventInfo(event, \"client\");\n}\nvar wrapHandler = function(handler, shouldFilterPrimaryPointer) {\n  if (shouldFilterPrimaryPointer === void 0) {\n    shouldFilterPrimaryPointer = false;\n  }\n  var listener = function(event) {\n    return handler(event, extractEventInfo(event));\n  };\n  return shouldFilterPrimaryPointer ? filterPrimaryPointer(listener) : listener;\n};\n\n// ../../node_modules/framer-motion/dist/es/events/utils.js\nvar supportsPointerEvents = function() {\n  return isBrowser && window.onpointerdown === null;\n};\nvar supportsTouchEvents = function() {\n  return isBrowser && window.ontouchstart === null;\n};\nvar supportsMouseEvents = function() {\n  return isBrowser && window.onmousedown === null;\n};\n\n// ../../node_modules/framer-motion/dist/es/events/use-pointer-event.js\nvar mouseEventNames = {\n  pointerdown: \"mousedown\",\n  pointermove: \"mousemove\",\n  pointerup: \"mouseup\",\n  pointercancel: \"mousecancel\",\n  pointerover: \"mouseover\",\n  pointerout: \"mouseout\",\n  pointerenter: \"mouseenter\",\n  pointerleave: \"mouseleave\"\n};\nvar touchEventNames = {\n  pointerdown: \"touchstart\",\n  pointermove: \"touchmove\",\n  pointerup: \"touchend\",\n  pointercancel: \"touchcancel\"\n};\nfunction getPointerEventName(name) {\n  if (supportsPointerEvents()) {\n    return name;\n  } else if (supportsTouchEvents()) {\n    return touchEventNames[name];\n  } else if (supportsMouseEvents()) {\n    return mouseEventNames[name];\n  }\n  return name;\n}\nfunction addPointerEvent(target, eventName, handler, options) {\n  return addDomEvent(target, getPointerEventName(eventName), wrapHandler(handler, eventName === \"pointerdown\"), options);\n}\nfunction usePointerEvent(ref, eventName, handler, options) {\n  return useDomEvent(ref, getPointerEventName(eventName), handler && wrapHandler(handler, eventName === \"pointerdown\"), options);\n}\n\n// ../../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.js\nfunction createLock(name) {\n  var lock = null;\n  return function() {\n    var openLock = function() {\n      lock = null;\n    };\n    if (lock === null) {\n      lock = name;\n      return openLock;\n    }\n    return false;\n  };\n}\nvar globalHorizontalLock = createLock(\"dragHorizontal\");\nvar globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag2) {\n  var lock = false;\n  if (drag2 === \"y\") {\n    lock = globalVerticalLock();\n  } else if (drag2 === \"x\") {\n    lock = globalHorizontalLock();\n  } else {\n    var openHorizontal_1 = globalHorizontalLock();\n    var openVertical_1 = globalVerticalLock();\n    if (openHorizontal_1 && openVertical_1) {\n      lock = function() {\n        openHorizontal_1();\n        openVertical_1();\n      };\n    } else {\n      if (openHorizontal_1)\n        openHorizontal_1();\n      if (openVertical_1)\n        openVertical_1();\n    }\n  }\n  return lock;\n}\nfunction isDragActive() {\n  var openGestureLock = getGlobalLock(true);\n  if (!openGestureLock)\n    return true;\n  openGestureLock();\n  return false;\n}\n\n// ../../node_modules/framer-motion/dist/es/gestures/use-hover-gesture.js\nfunction createHoverEvent(visualElement2, isActive, callback) {\n  return function(event, info) {\n    var _a;\n    if (!isMouseEvent(event) || !visualElement2.isHoverEventsEnabled || isDragActive()) {\n      return;\n    }\n    callback === null || callback === void 0 ? void 0 : callback(event, info);\n    (_a = visualElement2.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Hover, isActive);\n  };\n}\nfunction useHoverGesture(_a) {\n  var onHoverStart = _a.onHoverStart, onHoverEnd = _a.onHoverEnd, whileHover = _a.whileHover, visualElement2 = _a.visualElement;\n  usePointerEvent(visualElement2, \"pointerenter\", onHoverStart || whileHover ? createHoverEvent(visualElement2, true, onHoverStart) : void 0);\n  usePointerEvent(visualElement2, \"pointerleave\", onHoverEnd || whileHover ? createHoverEvent(visualElement2, false, onHoverEnd) : void 0);\n}\n\n// ../../node_modules/framer-motion/dist/es/gestures/use-tap-gesture.js\n\n\n// ../../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.js\nvar isNodeOrChild = function(parent, child) {\n  if (!child) {\n    return false;\n  } else if (parent === child) {\n    return true;\n  } else {\n    return isNodeOrChild(parent, child.parentElement);\n  }\n};\n\n// ../../node_modules/framer-motion/dist/es/utils/use-unmount-effect.js\n\nfunction useUnmountEffect(callback) {\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function() {\n    return function() {\n      return callback();\n    };\n  }, []);\n}\n\n// ../../node_modules/popmotion/dist/es/utils/clamp.js\nvar clamp2 = function(min, max, v) {\n  return Math.min(Math.max(v, min), max);\n};\n\n// ../../node_modules/popmotion/dist/es/animations/utils/find-spring.js\nvar safeMin = 1e-3;\nvar minDuration = 0.01;\nvar maxDuration = 10;\nvar minDamping = 0.05;\nvar maxDamping = 1;\nfunction findSpring(_a) {\n  var _b = _a.duration, duration = _b === void 0 ? 800 : _b, _c = _a.bounce, bounce = _c === void 0 ? 0.25 : _c, _d = _a.velocity, velocity = _d === void 0 ? 0 : _d, _e = _a.mass, mass = _e === void 0 ? 1 : _e;\n  var envelope;\n  var derivative;\n  warning(duration <= maxDuration * 1e3, \"Spring duration must be 10 seconds or less\");\n  var dampingRatio = 1 - bounce;\n  dampingRatio = clamp2(minDamping, maxDamping, dampingRatio);\n  duration = clamp2(minDuration, maxDuration, duration / 1e3);\n  if (dampingRatio < 1) {\n    envelope = function(undampedFreq2) {\n      var exponentialDecay = undampedFreq2 * dampingRatio;\n      var delta2 = exponentialDecay * duration;\n      var a2 = exponentialDecay - velocity;\n      var b2 = calcAngularFreq(undampedFreq2, dampingRatio);\n      var c2 = Math.exp(-delta2);\n      return safeMin - a2 / b2 * c2;\n    };\n    derivative = function(undampedFreq2) {\n      var exponentialDecay = undampedFreq2 * dampingRatio;\n      var delta2 = exponentialDecay * duration;\n      var d = delta2 * velocity + velocity;\n      var e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq2, 2) * duration;\n      var f = Math.exp(-delta2);\n      var g = calcAngularFreq(Math.pow(undampedFreq2, 2), dampingRatio);\n      var factor = -envelope(undampedFreq2) + safeMin > 0 ? -1 : 1;\n      return factor * ((d - e) * f) / g;\n    };\n  } else {\n    envelope = function(undampedFreq2) {\n      var a2 = Math.exp(-undampedFreq2 * duration);\n      var b2 = (undampedFreq2 - velocity) * duration + 1;\n      return -safeMin + a2 * b2;\n    };\n    derivative = function(undampedFreq2) {\n      var a2 = Math.exp(-undampedFreq2 * duration);\n      var b2 = (velocity - undampedFreq2) * (duration * duration);\n      return a2 * b2;\n    };\n  }\n  var initialGuess = 5 / duration;\n  var undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n  duration = duration * 1e3;\n  if (isNaN(undampedFreq)) {\n    return {\n      stiffness: 100,\n      damping: 10,\n      duration\n    };\n  } else {\n    var stiffness = Math.pow(undampedFreq, 2) * mass;\n    return {\n      stiffness,\n      damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n      duration\n    };\n  }\n}\nvar rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n  var result = initialGuess;\n  for (var i = 1; i < rootIterations; i++) {\n    result = result - envelope(result) / derivative(result);\n  }\n  return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n  return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\n// ../../node_modules/popmotion/dist/es/animations/generators/spring.js\nvar durationKeys = [\"duration\", \"bounce\"];\nvar physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys2) {\n  return keys2.some(function(key6) {\n    return options[key6] !== void 0;\n  });\n}\nfunction getSpringOptions(options) {\n  var springOptions = __assign({ velocity: 0, stiffness: 100, damping: 10, mass: 1, isResolvedFromDuration: false }, options);\n  if (!isSpringType(options, physicsKeys) && isSpringType(options, durationKeys)) {\n    var derived = findSpring(options);\n    springOptions = __assign(__assign(__assign({}, springOptions), derived), { velocity: 0, mass: 1 });\n    springOptions.isResolvedFromDuration = true;\n  }\n  return springOptions;\n}\nfunction spring(_a) {\n  var _b = _a.from, from = _b === void 0 ? 0 : _b, _c = _a.to, to = _c === void 0 ? 1 : _c, _d = _a.restSpeed, restSpeed = _d === void 0 ? 2 : _d, restDelta = _a.restDelta, options = __rest(_a, [\"from\", \"to\", \"restSpeed\", \"restDelta\"]);\n  var state = { done: false, value: from };\n  var _e = getSpringOptions(options), stiffness = _e.stiffness, damping = _e.damping, mass = _e.mass, velocity = _e.velocity, duration = _e.duration, isResolvedFromDuration = _e.isResolvedFromDuration;\n  var resolveSpring = zero;\n  var resolveVelocity = zero;\n  function createSpring() {\n    var initialVelocity = velocity ? -(velocity / 1e3) : 0;\n    var initialDelta = to - from;\n    var dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    var undampedAngularFreq = Math.sqrt(stiffness / mass) / 1e3;\n    restDelta !== null && restDelta !== void 0 ? restDelta : restDelta = Math.abs(to - from) <= 1 ? 0.01 : 0.4;\n    if (dampingRatio < 1) {\n      var angularFreq_1 = calcAngularFreq(undampedAngularFreq, dampingRatio);\n      resolveSpring = function(t) {\n        var envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n        return to - envelope * ((initialVelocity + dampingRatio * undampedAngularFreq * initialDelta) / angularFreq_1 * Math.sin(angularFreq_1 * t) + initialDelta * Math.cos(angularFreq_1 * t));\n      };\n      resolveVelocity = function(t) {\n        var envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n        return dampingRatio * undampedAngularFreq * envelope * (Math.sin(angularFreq_1 * t) * (initialVelocity + dampingRatio * undampedAngularFreq * initialDelta) / angularFreq_1 + initialDelta * Math.cos(angularFreq_1 * t)) - envelope * (Math.cos(angularFreq_1 * t) * (initialVelocity + dampingRatio * undampedAngularFreq * initialDelta) - angularFreq_1 * initialDelta * Math.sin(angularFreq_1 * t));\n      };\n    } else if (dampingRatio === 1) {\n      resolveSpring = function(t) {\n        return to - Math.exp(-undampedAngularFreq * t) * (initialDelta + (initialVelocity + undampedAngularFreq * initialDelta) * t);\n      };\n    } else {\n      var dampedAngularFreq_1 = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n      resolveSpring = function(t) {\n        var envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n        var freqForT = Math.min(dampedAngularFreq_1 * t, 300);\n        return to - envelope * ((initialVelocity + dampingRatio * undampedAngularFreq * initialDelta) * Math.sinh(freqForT) + dampedAngularFreq_1 * initialDelta * Math.cosh(freqForT)) / dampedAngularFreq_1;\n      };\n    }\n  }\n  createSpring();\n  return {\n    next: function(t) {\n      var current = resolveSpring(t);\n      if (!isResolvedFromDuration) {\n        var currentVelocity = resolveVelocity(t) * 1e3;\n        var isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n        var isBelowDisplacementThreshold = Math.abs(to - current) <= restDelta;\n        state.done = isBelowVelocityThreshold && isBelowDisplacementThreshold;\n      } else {\n        state.done = t >= duration;\n      }\n      state.value = state.done ? to : current;\n      return state;\n    },\n    flipTarget: function() {\n      var _a2;\n      velocity = -velocity;\n      _a2 = [to, from], from = _a2[0], to = _a2[1];\n      createSpring();\n    }\n  };\n}\nspring.needsInterpolation = function(a2, b2) {\n  return typeof a2 === \"string\" || typeof b2 === \"string\";\n};\nvar zero = function(_t) {\n  return 0;\n};\n\n// ../../node_modules/popmotion/dist/es/utils/progress.js\nvar progress = function(from, to, value) {\n  var toFromDifference = to - from;\n  return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\n// ../../node_modules/popmotion/dist/es/utils/mix.js\nvar mix = function(from, to, progress2) {\n  return -progress2 * from + progress2 * to + from;\n};\n\n// ../../node_modules/popmotion/dist/es/utils/mix-color.js\nvar mixLinearColor = function(from, to, v) {\n  var fromExpo = from * from;\n  var toExpo = to * to;\n  return Math.sqrt(Math.max(0, v * (toExpo - fromExpo) + fromExpo));\n};\nvar colorTypes = [hex, rgba, hsla];\nvar getColorType = function(v) {\n  return colorTypes.find(function(type) {\n    return type.test(v);\n  });\n};\nvar notAnimatable = function(color2) {\n  return \"'\" + color2 + \"' is not an animatable color. Use the equivalent color code instead.\";\n};\nvar mixColor = function(from, to) {\n  var fromColorType = getColorType(from);\n  var toColorType = getColorType(to);\n  invariant(!!fromColorType, notAnimatable(from));\n  invariant(!!toColorType, notAnimatable(to));\n  invariant(fromColorType.transform === toColorType.transform, \"Both colors must be hex/RGBA, OR both must be HSLA.\");\n  var fromColor = fromColorType.parse(from);\n  var toColor = toColorType.parse(to);\n  var blended = __assign({}, fromColor);\n  var mixFunc = fromColorType === hsla ? mix : mixLinearColor;\n  return function(v) {\n    for (var key6 in blended) {\n      if (key6 !== \"alpha\") {\n        blended[key6] = mixFunc(fromColor[key6], toColor[key6], v);\n      }\n    }\n    blended.alpha = mix(fromColor.alpha, toColor.alpha, v);\n    return fromColorType.transform(blended);\n  };\n};\n\n// ../../node_modules/popmotion/dist/es/utils/inc.js\nvar isNum = function(v) {\n  return typeof v === \"number\";\n};\n\n// ../../node_modules/popmotion/dist/es/utils/pipe.js\nvar combineFunctions = function(a2, b2) {\n  return function(v) {\n    return b2(a2(v));\n  };\n};\nvar pipe = function() {\n  var transformers = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    transformers[_i] = arguments[_i];\n  }\n  return transformers.reduce(combineFunctions);\n};\n\n// ../../node_modules/popmotion/dist/es/utils/mix-complex.js\nfunction getMixer(origin, target) {\n  if (isNum(origin)) {\n    return function(v) {\n      return mix(origin, target, v);\n    };\n  } else if (color.test(origin)) {\n    return mixColor(origin, target);\n  } else {\n    return mixComplex(origin, target);\n  }\n}\nvar mixArray = function(from, to) {\n  var output = __spreadArray([], from);\n  var numValues = output.length;\n  var blendValue = from.map(function(fromThis, i) {\n    return getMixer(fromThis, to[i]);\n  });\n  return function(v) {\n    for (var i = 0; i < numValues; i++) {\n      output[i] = blendValue[i](v);\n    }\n    return output;\n  };\n};\nvar mixObject = function(origin, target) {\n  var output = __assign(__assign({}, origin), target);\n  var blendValue = {};\n  for (var key6 in output) {\n    if (origin[key6] !== void 0 && target[key6] !== void 0) {\n      blendValue[key6] = getMixer(origin[key6], target[key6]);\n    }\n  }\n  return function(v) {\n    for (var key7 in blendValue) {\n      output[key7] = blendValue[key7](v);\n    }\n    return output;\n  };\n};\nfunction analyse2(value) {\n  var parsed = complex.parse(value);\n  var numValues = parsed.length;\n  var numNumbers = 0;\n  var numRGB = 0;\n  var numHSL = 0;\n  for (var i = 0; i < numValues; i++) {\n    if (numNumbers || typeof parsed[i] === \"number\") {\n      numNumbers++;\n    } else {\n      if (parsed[i].hue !== void 0) {\n        numHSL++;\n      } else {\n        numRGB++;\n      }\n    }\n  }\n  return { parsed, numNumbers, numRGB, numHSL };\n}\nvar mixComplex = function(origin, target) {\n  var template = complex.createTransformer(target);\n  var originStats = analyse2(origin);\n  var targetStats = analyse2(target);\n  invariant(originStats.numHSL === targetStats.numHSL && originStats.numRGB === targetStats.numRGB && originStats.numNumbers >= targetStats.numNumbers, \"Complex values '\" + origin + \"' and '\" + target + \"' too different to mix. Ensure all colors are of the same type.\");\n  return pipe(mixArray(originStats.parsed, targetStats.parsed), template);\n};\n\n// ../../node_modules/popmotion/dist/es/utils/interpolate.js\nvar mixNumber = function(from, to) {\n  return function(p) {\n    return mix(from, to, p);\n  };\n};\nfunction detectMixerFactory(v) {\n  if (typeof v === \"number\") {\n    return mixNumber;\n  } else if (typeof v === \"string\") {\n    if (color.test(v)) {\n      return mixColor;\n    } else {\n      return mixComplex;\n    }\n  } else if (Array.isArray(v)) {\n    return mixArray;\n  } else if (typeof v === \"object\") {\n    return mixObject;\n  }\n}\nfunction createMixers(output, ease, customMixer) {\n  var mixers = [];\n  var mixerFactory = customMixer || detectMixerFactory(output[0]);\n  var numMixers = output.length - 1;\n  for (var i = 0; i < numMixers; i++) {\n    var mixer = mixerFactory(output[i], output[i + 1]);\n    if (ease) {\n      var easingFunction = Array.isArray(ease) ? ease[i] : ease;\n      mixer = pipe(easingFunction, mixer);\n    }\n    mixers.push(mixer);\n  }\n  return mixers;\n}\nfunction fastInterpolate(_a, _b) {\n  var from = _a[0], to = _a[1];\n  var mixer = _b[0];\n  return function(v) {\n    return mixer(progress(from, to, v));\n  };\n}\nfunction slowInterpolate(input, mixers) {\n  var inputLength = input.length;\n  var lastInputIndex = inputLength - 1;\n  return function(v) {\n    var mixerIndex = 0;\n    var foundMixerIndex = false;\n    if (v <= input[0]) {\n      foundMixerIndex = true;\n    } else if (v >= input[lastInputIndex]) {\n      mixerIndex = lastInputIndex - 1;\n      foundMixerIndex = true;\n    }\n    if (!foundMixerIndex) {\n      var i = 1;\n      for (; i < inputLength; i++) {\n        if (input[i] > v || i === lastInputIndex) {\n          break;\n        }\n      }\n      mixerIndex = i - 1;\n    }\n    var progressInRange = progress(input[mixerIndex], input[mixerIndex + 1], v);\n    return mixers[mixerIndex](progressInRange);\n  };\n}\nfunction interpolate(input, output, _a) {\n  var _b = _a === void 0 ? {} : _a, _c = _b.clamp, isClamp = _c === void 0 ? true : _c, ease = _b.ease, mixer = _b.mixer;\n  var inputLength = input.length;\n  invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n  invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, \"Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.\");\n  if (input[0] > input[inputLength - 1]) {\n    input = [].concat(input);\n    output = [].concat(output);\n    input.reverse();\n    output.reverse();\n  }\n  var mixers = createMixers(output, ease, mixer);\n  var interpolator = inputLength === 2 ? fastInterpolate(input, mixers) : slowInterpolate(input, mixers);\n  return isClamp ? function(v) {\n    return interpolator(clamp2(input[0], input[inputLength - 1], v));\n  } : interpolator;\n}\n\n// ../../node_modules/popmotion/dist/es/easing/utils.js\nvar reverseEasing = function(easing) {\n  return function(p) {\n    return 1 - easing(1 - p);\n  };\n};\nvar mirrorEasing = function(easing) {\n  return function(p) {\n    return p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n  };\n};\nvar createExpoIn = function(power) {\n  return function(p) {\n    return Math.pow(p, power);\n  };\n};\nvar createBackIn = function(power) {\n  return function(p) {\n    return p * p * ((power + 1) * p - power);\n  };\n};\nvar createAnticipate = function(power) {\n  var backEasing = createBackIn(power);\n  return function(p) {\n    return (p *= 2) < 1 ? 0.5 * backEasing(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n  };\n};\n\n// ../../node_modules/popmotion/dist/es/easing/index.js\nvar DEFAULT_OVERSHOOT_STRENGTH = 1.525;\nvar BOUNCE_FIRST_THRESHOLD = 4 / 11;\nvar BOUNCE_SECOND_THRESHOLD = 8 / 11;\nvar BOUNCE_THIRD_THRESHOLD = 9 / 10;\nvar linear = function(p) {\n  return p;\n};\nvar easeIn = createExpoIn(2);\nvar easeOut = reverseEasing(easeIn);\nvar easeInOut = mirrorEasing(easeIn);\nvar circIn = function(p) {\n  return 1 - Math.sin(Math.acos(p));\n};\nvar circOut = reverseEasing(circIn);\nvar circInOut = mirrorEasing(circOut);\nvar backIn = createBackIn(DEFAULT_OVERSHOOT_STRENGTH);\nvar backOut = reverseEasing(backIn);\nvar backInOut = mirrorEasing(backIn);\nvar anticipate = createAnticipate(DEFAULT_OVERSHOOT_STRENGTH);\nvar ca = 4356 / 361;\nvar cb = 35442 / 1805;\nvar cc = 16061 / 1805;\nvar bounceOut = function(p) {\n  if (p === 1 || p === 0)\n    return p;\n  var p2 = p * p;\n  return p < BOUNCE_FIRST_THRESHOLD ? 7.5625 * p2 : p < BOUNCE_SECOND_THRESHOLD ? 9.075 * p2 - 9.9 * p + 3.4 : p < BOUNCE_THIRD_THRESHOLD ? ca * p2 - cb * p + cc : 10.8 * p * p - 20.52 * p + 10.72;\n};\nvar bounceIn = reverseEasing(bounceOut);\nvar bounceInOut = function(p) {\n  return p < 0.5 ? 0.5 * (1 - bounceOut(1 - p * 2)) : 0.5 * bounceOut(p * 2 - 1) + 0.5;\n};\n\n// ../../node_modules/popmotion/dist/es/animations/generators/keyframes.js\nfunction defaultEasing(values, easing) {\n  return values.map(function() {\n    return easing || easeInOut;\n  }).splice(0, values.length - 1);\n}\nfunction defaultOffset(values) {\n  var numValues = values.length;\n  return values.map(function(_value, i) {\n    return i !== 0 ? i / (numValues - 1) : 0;\n  });\n}\nfunction convertOffsetToTimes(offset, duration) {\n  return offset.map(function(o) {\n    return o * duration;\n  });\n}\nfunction keyframes(_a) {\n  var _b = _a.from, from = _b === void 0 ? 0 : _b, _c = _a.to, to = _c === void 0 ? 1 : _c, ease = _a.ease, offset = _a.offset, _d = _a.duration, duration = _d === void 0 ? 300 : _d;\n  var state = { done: false, value: from };\n  var values = Array.isArray(to) ? to : [from, to];\n  var times = convertOffsetToTimes(offset && offset.length === values.length ? offset : defaultOffset(values), duration);\n  function createInterpolator() {\n    return interpolate(times, values, {\n      ease: Array.isArray(ease) ? ease : defaultEasing(values, ease)\n    });\n  }\n  var interpolator = createInterpolator();\n  return {\n    next: function(t) {\n      state.value = interpolator(t);\n      state.done = t >= duration;\n      return state;\n    },\n    flipTarget: function() {\n      values.reverse();\n      interpolator = createInterpolator();\n    }\n  };\n}\n\n// ../../node_modules/popmotion/dist/es/animations/generators/decay.js\nfunction decay(_a) {\n  var _b = _a.velocity, velocity = _b === void 0 ? 0 : _b, _c = _a.from, from = _c === void 0 ? 0 : _c, _d = _a.power, power = _d === void 0 ? 0.8 : _d, _e = _a.timeConstant, timeConstant2 = _e === void 0 ? 350 : _e, _f = _a.restDelta, restDelta = _f === void 0 ? 0.5 : _f, modifyTarget = _a.modifyTarget;\n  var state = { done: false, value: from };\n  var amplitude = power * velocity;\n  var ideal = from + amplitude;\n  var target = modifyTarget === void 0 ? ideal : modifyTarget(ideal);\n  if (target !== ideal)\n    amplitude = target - from;\n  return {\n    next: function(t) {\n      var delta2 = -amplitude * Math.exp(-t / timeConstant2);\n      state.done = !(delta2 > restDelta || delta2 < -restDelta);\n      state.value = state.done ? target : target + delta2;\n      return state;\n    },\n    flipTarget: function() {\n    }\n  };\n}\n\n// ../../node_modules/popmotion/dist/es/animations/utils/detect-animation-from-options.js\nvar types = { keyframes, spring, decay };\nfunction detectAnimationFromOptions(config) {\n  if (Array.isArray(config.to)) {\n    return keyframes;\n  } else if (types[config.type]) {\n    return types[config.type];\n  }\n  var keys2 = new Set(Object.keys(config));\n  if (keys2.has(\"ease\") || keys2.has(\"duration\") && !keys2.has(\"dampingRatio\")) {\n    return keyframes;\n  } else if (keys2.has(\"dampingRatio\") || keys2.has(\"stiffness\") || keys2.has(\"mass\") || keys2.has(\"damping\") || keys2.has(\"restSpeed\") || keys2.has(\"restDelta\")) {\n    return spring;\n  }\n  return keyframes;\n}\n\n// ../../node_modules/framesync/dist/es/on-next-frame.js\nvar defaultTimestep = 1 / 60 * 1e3;\nvar getCurrentTime = typeof performance !== \"undefined\" ? function() {\n  return performance.now();\n} : function() {\n  return Date.now();\n};\nvar onNextFrame = typeof window !== \"undefined\" ? function(callback) {\n  return window.requestAnimationFrame(callback);\n} : function(callback) {\n  return setTimeout(function() {\n    return callback(getCurrentTime());\n  }, defaultTimestep);\n};\n\n// ../../node_modules/framesync/dist/es/create-render-step.js\nfunction createRenderStep(runNextFrame2) {\n  var toRun = [];\n  var toRunNextFrame = [];\n  var numToRun = 0;\n  var isProcessing2 = false;\n  var toKeepAlive = new WeakSet();\n  var step = {\n    schedule: function(callback, keepAlive, immediate) {\n      if (keepAlive === void 0) {\n        keepAlive = false;\n      }\n      if (immediate === void 0) {\n        immediate = false;\n      }\n      var addToCurrentFrame = immediate && isProcessing2;\n      var buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n      if (keepAlive)\n        toKeepAlive.add(callback);\n      if (buffer.indexOf(callback) === -1) {\n        buffer.push(callback);\n        if (addToCurrentFrame && isProcessing2)\n          numToRun = toRun.length;\n      }\n      return callback;\n    },\n    cancel: function(callback) {\n      var index = toRunNextFrame.indexOf(callback);\n      if (index !== -1)\n        toRunNextFrame.splice(index, 1);\n      toKeepAlive.delete(callback);\n    },\n    process: function(frameData) {\n      var _a;\n      isProcessing2 = true;\n      _a = [toRunNextFrame, toRun], toRun = _a[0], toRunNextFrame = _a[1];\n      toRunNextFrame.length = 0;\n      numToRun = toRun.length;\n      if (numToRun) {\n        for (var i = 0; i < numToRun; i++) {\n          var callback = toRun[i];\n          callback(frameData);\n          if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame2();\n          }\n        }\n      }\n      isProcessing2 = false;\n    }\n  };\n  return step;\n}\n\n// ../../node_modules/framesync/dist/es/index.js\nvar maxElapsed = 40;\nvar useDefaultElapsed = true;\nvar runNextFrame = false;\nvar isProcessing = false;\nvar frame = {\n  delta: 0,\n  timestamp: 0\n};\nvar stepsOrder = [\"read\", \"update\", \"preRender\", \"render\", \"postRender\"];\nvar steps = /* @__PURE__ */ stepsOrder.reduce(function(acc, key6) {\n  acc[key6] = createRenderStep(function() {\n    return runNextFrame = true;\n  });\n  return acc;\n}, {});\nvar sync = /* @__PURE__ */ stepsOrder.reduce(function(acc, key6) {\n  var step = steps[key6];\n  acc[key6] = function(process3, keepAlive, immediate) {\n    if (keepAlive === void 0) {\n      keepAlive = false;\n    }\n    if (immediate === void 0) {\n      immediate = false;\n    }\n    if (!runNextFrame)\n      startLoop();\n    return step.schedule(process3, keepAlive, immediate);\n  };\n  return acc;\n}, {});\nvar cancelSync = /* @__PURE__ */ stepsOrder.reduce(function(acc, key6) {\n  acc[key6] = steps[key6].cancel;\n  return acc;\n}, {});\nvar flushSync = /* @__PURE__ */ stepsOrder.reduce(function(acc, key6) {\n  acc[key6] = function() {\n    return steps[key6].process(frame);\n  };\n  return acc;\n}, {});\nvar processStep = function(stepId) {\n  return steps[stepId].process(frame);\n};\nvar processFrame = function(timestamp) {\n  runNextFrame = false;\n  frame.delta = useDefaultElapsed ? defaultTimestep : Math.max(Math.min(timestamp - frame.timestamp, maxElapsed), 1);\n  frame.timestamp = timestamp;\n  isProcessing = true;\n  stepsOrder.forEach(processStep);\n  isProcessing = false;\n  if (runNextFrame) {\n    useDefaultElapsed = false;\n    onNextFrame(processFrame);\n  }\n};\nvar startLoop = function() {\n  runNextFrame = true;\n  useDefaultElapsed = true;\n  if (!isProcessing)\n    onNextFrame(processFrame);\n};\nvar getFrameData = function() {\n  return frame;\n};\nvar es_default = sync;\n\n// ../../node_modules/popmotion/dist/es/animations/utils/elapsed.js\nfunction loopElapsed(elapsed, duration, delay) {\n  if (delay === void 0) {\n    delay = 0;\n  }\n  return elapsed - duration - delay;\n}\nfunction reverseElapsed(elapsed, duration, delay, isForwardPlayback) {\n  if (delay === void 0) {\n    delay = 0;\n  }\n  if (isForwardPlayback === void 0) {\n    isForwardPlayback = true;\n  }\n  return isForwardPlayback ? loopElapsed(duration + -elapsed, duration, delay) : duration - (elapsed - duration) + delay;\n}\nfunction hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {\n  return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;\n}\n\n// ../../node_modules/popmotion/dist/es/animations/index.js\nvar framesync = function(update) {\n  var passTimestamp = function(_a) {\n    var delta2 = _a.delta;\n    return update(delta2);\n  };\n  return {\n    start: function() {\n      return es_default.update(passTimestamp, true);\n    },\n    stop: function() {\n      return cancelSync.update(passTimestamp);\n    }\n  };\n};\nfunction animate(_a) {\n  var _b, _c;\n  var from = _a.from, _d = _a.autoplay, autoplay = _d === void 0 ? true : _d, _e = _a.driver, driver = _e === void 0 ? framesync : _e, _f = _a.elapsed, elapsed = _f === void 0 ? 0 : _f, _g = _a.repeat, repeatMax = _g === void 0 ? 0 : _g, _h = _a.repeatType, repeatType = _h === void 0 ? \"loop\" : _h, _j = _a.repeatDelay, repeatDelay = _j === void 0 ? 0 : _j, onPlay = _a.onPlay, onStop = _a.onStop, onComplete = _a.onComplete, onRepeat = _a.onRepeat, onUpdate = _a.onUpdate, options = __rest(_a, [\"from\", \"autoplay\", \"driver\", \"elapsed\", \"repeat\", \"repeatType\", \"repeatDelay\", \"onPlay\", \"onStop\", \"onComplete\", \"onRepeat\", \"onUpdate\"]);\n  var to = options.to;\n  var driverControls;\n  var repeatCount = 0;\n  var computedDuration = options.duration;\n  var latest;\n  var isComplete = false;\n  var isForwardPlayback = true;\n  var interpolateFromNumber;\n  var animator = detectAnimationFromOptions(options);\n  if ((_c = (_b = animator).needsInterpolation) === null || _c === void 0 ? void 0 : _c.call(_b, from, to)) {\n    interpolateFromNumber = interpolate([0, 100], [from, to], {\n      clamp: false\n    });\n    from = 0;\n    to = 100;\n  }\n  var animation = animator(__assign(__assign({}, options), { from, to }));\n  function repeat() {\n    repeatCount++;\n    if (repeatType === \"reverse\") {\n      isForwardPlayback = repeatCount % 2 === 0;\n      elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n    } else {\n      elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n      if (repeatType === \"mirror\")\n        animation.flipTarget();\n    }\n    isComplete = false;\n    onRepeat && onRepeat();\n  }\n  function complete() {\n    driverControls.stop();\n    onComplete && onComplete();\n  }\n  function update(delta2) {\n    if (!isForwardPlayback)\n      delta2 = -delta2;\n    elapsed += delta2;\n    if (!isComplete) {\n      var state = animation.next(Math.max(0, elapsed));\n      latest = state.value;\n      if (interpolateFromNumber)\n        latest = interpolateFromNumber(latest);\n      isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n    }\n    onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(latest);\n    if (isComplete) {\n      if (repeatCount === 0)\n        computedDuration !== null && computedDuration !== void 0 ? computedDuration : computedDuration = elapsed;\n      if (repeatCount < repeatMax) {\n        hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n      } else {\n        complete();\n      }\n    }\n  }\n  function play() {\n    onPlay === null || onPlay === void 0 ? void 0 : onPlay();\n    driverControls = driver(update);\n    driverControls.start();\n  }\n  autoplay && play();\n  return {\n    stop: function() {\n      onStop === null || onStop === void 0 ? void 0 : onStop();\n      driverControls.stop();\n    }\n  };\n}\n\n// ../../node_modules/popmotion/dist/es/utils/velocity-per-second.js\nfunction velocityPerSecond(velocity, frameDuration) {\n  return frameDuration ? velocity * (1e3 / frameDuration) : 0;\n}\n\n// ../../node_modules/popmotion/dist/es/animations/inertia.js\nfunction inertia(_a) {\n  var _b = _a.from, from = _b === void 0 ? 0 : _b, _c = _a.velocity, velocity = _c === void 0 ? 0 : _c, min = _a.min, max = _a.max, _d = _a.power, power = _d === void 0 ? 0.8 : _d, _e = _a.timeConstant, timeConstant2 = _e === void 0 ? 750 : _e, _f = _a.bounceStiffness, bounceStiffness = _f === void 0 ? 500 : _f, _g = _a.bounceDamping, bounceDamping = _g === void 0 ? 10 : _g, _h = _a.restDelta, restDelta = _h === void 0 ? 1 : _h, modifyTarget = _a.modifyTarget, driver = _a.driver, onUpdate = _a.onUpdate, onComplete = _a.onComplete, onStop = _a.onStop;\n  var currentAnimation;\n  function isOutOfBounds(v) {\n    return min !== void 0 && v < min || max !== void 0 && v > max;\n  }\n  function boundaryNearest(v) {\n    if (min === void 0)\n      return max;\n    if (max === void 0)\n      return min;\n    return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n  }\n  function startAnimation3(options) {\n    currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();\n    currentAnimation = animate(__assign(__assign({}, options), {\n      driver,\n      onUpdate: function(v) {\n        var _a2;\n        onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(v);\n        (_a2 = options.onUpdate) === null || _a2 === void 0 ? void 0 : _a2.call(options, v);\n      },\n      onComplete,\n      onStop\n    }));\n  }\n  function startSpring(options) {\n    startAnimation3(__assign({ type: \"spring\", stiffness: bounceStiffness, damping: bounceDamping, restDelta }, options));\n  }\n  if (isOutOfBounds(from)) {\n    startSpring({ from, velocity, to: boundaryNearest(from) });\n  } else {\n    var target = power * velocity + from;\n    if (typeof modifyTarget !== \"undefined\")\n      target = modifyTarget(target);\n    var boundary_1 = boundaryNearest(target);\n    var heading_1 = boundary_1 === min ? -1 : 1;\n    var prev_1;\n    var current_1;\n    var checkBoundary = function(v) {\n      prev_1 = current_1;\n      current_1 = v;\n      velocity = velocityPerSecond(v - prev_1, getFrameData().delta);\n      if (heading_1 === 1 && v > boundary_1 || heading_1 === -1 && v < boundary_1) {\n        startSpring({ from: v, to: boundary_1, velocity });\n      }\n    };\n    startAnimation3({\n      type: \"decay\",\n      from,\n      velocity,\n      timeConstant: timeConstant2,\n      power,\n      restDelta,\n      modifyTarget,\n      onUpdate: isOutOfBounds(target) ? checkBoundary : void 0\n    });\n  }\n  return {\n    stop: function() {\n      return currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();\n    }\n  };\n}\n\n// ../../node_modules/popmotion/dist/es/utils/is-point.js\nvar isPoint = function(point) {\n  return point.hasOwnProperty(\"x\") && point.hasOwnProperty(\"y\");\n};\n\n// ../../node_modules/popmotion/dist/es/utils/is-point-3d.js\nvar isPoint3D = function(point) {\n  return isPoint(point) && point.hasOwnProperty(\"z\");\n};\n\n// ../../node_modules/popmotion/dist/es/utils/distance.js\nvar distance1D = function(a2, b2) {\n  return Math.abs(a2 - b2);\n};\nfunction distance(a2, b2) {\n  if (isNum(a2) && isNum(b2)) {\n    return distance1D(a2, b2);\n  } else if (isPoint(a2) && isPoint(b2)) {\n    var xDelta = distance1D(a2.x, b2.x);\n    var yDelta = distance1D(a2.y, b2.y);\n    var zDelta = isPoint3D(a2) && isPoint3D(b2) ? distance1D(a2.z, b2.z) : 0;\n    return Math.sqrt(Math.pow(xDelta, 2) + Math.pow(yDelta, 2) + Math.pow(zDelta, 2));\n  }\n}\n\n// ../../node_modules/popmotion/dist/es/utils/wrap.js\nvar wrap = function(min, max, v) {\n  var rangeSize = max - min;\n  return ((v - min) % rangeSize + rangeSize) % rangeSize + min;\n};\n\n// ../../node_modules/popmotion/dist/es/easing/cubic-bezier.js\nvar a = function(a1, a2) {\n  return 1 - 3 * a2 + 3 * a1;\n};\nvar b = function(a1, a2) {\n  return 3 * a2 - 6 * a1;\n};\nvar c = function(a1) {\n  return 3 * a1;\n};\nvar calcBezier = function(t, a1, a2) {\n  return ((a(a1, a2) * t + b(a1, a2)) * t + c(a1)) * t;\n};\nvar getSlope = function(t, a1, a2) {\n  return 3 * a(a1, a2) * t * t + 2 * b(a1, a2) * t + c(a1);\n};\nvar subdivisionPrecision = 1e-7;\nvar subdivisionMaxIterations = 10;\nfunction binarySubdivide(aX, aA, aB, mX1, mX2) {\n  var currentX;\n  var currentT;\n  var i = 0;\n  do {\n    currentT = aA + (aB - aA) / 2;\n    currentX = calcBezier(currentT, mX1, mX2) - aX;\n    if (currentX > 0) {\n      aB = currentT;\n    } else {\n      aA = currentT;\n    }\n  } while (Math.abs(currentX) > subdivisionPrecision && ++i < subdivisionMaxIterations);\n  return currentT;\n}\nvar newtonIterations = 8;\nvar newtonMinSlope = 1e-3;\nfunction newtonRaphsonIterate(aX, aGuessT, mX1, mX2) {\n  for (var i = 0; i < newtonIterations; ++i) {\n    var currentSlope = getSlope(aGuessT, mX1, mX2);\n    if (currentSlope === 0) {\n      return aGuessT;\n    }\n    var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\n    aGuessT -= currentX / currentSlope;\n  }\n  return aGuessT;\n}\nvar kSplineTableSize = 11;\nvar kSampleStepSize = 1 / (kSplineTableSize - 1);\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n  if (mX1 === mY1 && mX2 === mY2)\n    return linear;\n  var sampleValues = new Float32Array(kSplineTableSize);\n  for (var i = 0; i < kSplineTableSize; ++i) {\n    sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\n  }\n  function getTForX(aX) {\n    var intervalStart = 0;\n    var currentSample = 1;\n    var lastSample = kSplineTableSize - 1;\n    for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {\n      intervalStart += kSampleStepSize;\n    }\n    --currentSample;\n    var dist = (aX - sampleValues[currentSample]) / (sampleValues[currentSample + 1] - sampleValues[currentSample]);\n    var guessForT = intervalStart + dist * kSampleStepSize;\n    var initialSlope = getSlope(guessForT, mX1, mX2);\n    if (initialSlope >= newtonMinSlope) {\n      return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\n    } else if (initialSlope === 0) {\n      return guessForT;\n    } else {\n      return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\n    }\n  }\n  return function(t) {\n    return t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n  };\n}\n\n// ../../node_modules/framer-motion/dist/es/gestures/use-tap-gesture.js\nfunction useTapGesture(_a) {\n  var onTap = _a.onTap, onTapStart = _a.onTapStart, onTapCancel = _a.onTapCancel, whileTap = _a.whileTap, visualElement2 = _a.visualElement;\n  var hasPressListeners = onTap || onTapStart || onTapCancel || whileTap;\n  var isPressing = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(false);\n  var cancelPointerEndListeners = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n  function removePointerEndListener() {\n    var _a2;\n    (_a2 = cancelPointerEndListeners.current) === null || _a2 === void 0 ? void 0 : _a2.call(cancelPointerEndListeners);\n    cancelPointerEndListeners.current = null;\n  }\n  function checkPointerEnd() {\n    var _a2;\n    removePointerEndListener();\n    isPressing.current = false;\n    (_a2 = visualElement2.animationState) === null || _a2 === void 0 ? void 0 : _a2.setActive(AnimationType.Tap, false);\n    return !isDragActive();\n  }\n  function onPointerUp(event, info) {\n    if (!checkPointerEnd())\n      return;\n    !isNodeOrChild(visualElement2.getInstance(), event.target) ? onTapCancel === null || onTapCancel === void 0 ? void 0 : onTapCancel(event, info) : onTap === null || onTap === void 0 ? void 0 : onTap(event, info);\n  }\n  function onPointerCancel(event, info) {\n    if (!checkPointerEnd())\n      return;\n    onTapCancel === null || onTapCancel === void 0 ? void 0 : onTapCancel(event, info);\n  }\n  function onPointerDown(event, info) {\n    var _a2;\n    removePointerEndListener();\n    if (isPressing.current)\n      return;\n    isPressing.current = true;\n    cancelPointerEndListeners.current = pipe(addPointerEvent(window, \"pointerup\", onPointerUp), addPointerEvent(window, \"pointercancel\", onPointerCancel));\n    onTapStart === null || onTapStart === void 0 ? void 0 : onTapStart(event, info);\n    (_a2 = visualElement2.animationState) === null || _a2 === void 0 ? void 0 : _a2.setActive(AnimationType.Tap, true);\n  }\n  usePointerEvent(visualElement2, \"pointerdown\", hasPressListeners ? onPointerDown : void 0);\n  useUnmountEffect(removePointerEndListener);\n}\n\n// ../../node_modules/framer-motion/dist/es/motion/utils/make-renderless-component.js\nvar makeRenderlessComponent = function(hook) {\n  return function(props) {\n    hook(props);\n    return null;\n  };\n};\n\n// ../../node_modules/framer-motion/dist/es/motion/features/gestures.js\nvar gestureAnimations = {\n  tap: makeRenderlessComponent(useTapGesture),\n  focus: makeRenderlessComponent(useFocusGesture),\n  hover: makeRenderlessComponent(useHoverGesture)\n};\n\n// ../../node_modules/framer-motion/dist/es/motion/features/animations.js\n\n\n// ../../node_modules/framer-motion/dist/es/utils/shallow-compare.js\nfunction shallowCompare(next, prev) {\n  if (!Array.isArray(prev))\n    return false;\n  var prevLength = prev.length;\n  if (prevLength !== next.length)\n    return false;\n  for (var i = 0; i < prevLength; i++) {\n    if (prev[i] !== next[i])\n      return false;\n  }\n  return true;\n}\n\n// ../../node_modules/framer-motion/dist/es/utils/time-conversion.js\nvar secondsToMilliseconds = function(seconds) {\n  return seconds * 1e3;\n};\n\n// ../../node_modules/framer-motion/dist/es/animation/utils/easing.js\nvar easingLookup = {\n  linear,\n  easeIn,\n  easeInOut,\n  easeOut,\n  circIn,\n  circInOut,\n  circOut,\n  backIn,\n  backInOut,\n  backOut,\n  anticipate,\n  bounceIn,\n  bounceInOut,\n  bounceOut\n};\nvar easingDefinitionToFunction = function(definition) {\n  if (Array.isArray(definition)) {\n    invariant(definition.length === 4, \"Cubic bezier arrays must contain four numerical values.\");\n    var _a = __read(definition, 4), x1 = _a[0], y1 = _a[1], x2 = _a[2], y2 = _a[3];\n    return cubicBezier(x1, y1, x2, y2);\n  } else if (typeof definition === \"string\") {\n    invariant(easingLookup[definition] !== void 0, \"Invalid easing type '\" + definition + \"'\");\n    return easingLookup[definition];\n  }\n  return definition;\n};\nvar isEasingArray = function(ease) {\n  return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\n// ../../node_modules/framer-motion/dist/es/animation/utils/is-animatable.js\nvar isAnimatable = function(key6, value) {\n  if (key6 === \"zIndex\")\n    return false;\n  if (typeof value === \"number\" || Array.isArray(value))\n    return true;\n  if (typeof value === \"string\" && complex.test(value) && !value.startsWith(\"url(\")) {\n    return true;\n  }\n  return false;\n};\n\n// ../../node_modules/framer-motion/dist/es/animation/utils/default-transitions.js\nvar underDampedSpring = function() {\n  return {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restDelta: 0.5,\n    restSpeed: 10\n  };\n};\nvar criticallyDampedSpring = function(to) {\n  return {\n    type: \"spring\",\n    stiffness: 550,\n    damping: to === 0 ? 2 * Math.sqrt(550) : 30,\n    restDelta: 0.01,\n    restSpeed: 10\n  };\n};\nvar linearTween = function() {\n  return {\n    type: \"keyframes\",\n    ease: \"linear\",\n    duration: 0.3\n  };\n};\nvar keyframes2 = function(values) {\n  return {\n    type: \"keyframes\",\n    duration: 0.8,\n    values\n  };\n};\nvar defaultTransitions = {\n  x: underDampedSpring,\n  y: underDampedSpring,\n  z: underDampedSpring,\n  rotate: underDampedSpring,\n  rotateX: underDampedSpring,\n  rotateY: underDampedSpring,\n  rotateZ: underDampedSpring,\n  scaleX: criticallyDampedSpring,\n  scaleY: criticallyDampedSpring,\n  scale: criticallyDampedSpring,\n  opacity: linearTween,\n  backgroundColor: linearTween,\n  color: linearTween,\n  default: criticallyDampedSpring\n};\nvar getDefaultTransition = function(valueKey, to) {\n  var transitionFactory;\n  if (isKeyframesTarget(to)) {\n    transitionFactory = keyframes2;\n  } else {\n    transitionFactory = defaultTransitions[valueKey] || defaultTransitions.default;\n  }\n  return __assign({ to }, transitionFactory(to));\n};\n\n// ../../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.js\nvar defaultValueTypes = __assign(__assign({}, numberValueTypes), {\n  color,\n  backgroundColor: color,\n  outlineColor: color,\n  fill: color,\n  stroke: color,\n  borderColor: color,\n  borderTopColor: color,\n  borderRightColor: color,\n  borderBottomColor: color,\n  borderLeftColor: color,\n  filter,\n  WebkitFilter: filter\n});\nvar getDefaultValueType = function(key6) {\n  return defaultValueTypes[key6];\n};\n\n// ../../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.js\nfunction getAnimatableNone2(key6, value) {\n  var _a;\n  var defaultValueType = getDefaultValueType(key6);\n  if (defaultValueType !== filter)\n    defaultValueType = complex;\n  return (_a = defaultValueType.getAnimatableNone) === null || _a === void 0 ? void 0 : _a.call(defaultValueType, value);\n}\n\n// ../../node_modules/framer-motion/dist/es/animation/utils/transitions.js\nfunction isTransitionDefined(_a) {\n  _a.when;\n  _a.delay;\n  _a.delayChildren;\n  _a.staggerChildren;\n  _a.staggerDirection;\n  _a.repeat;\n  _a.repeatType;\n  _a.repeatDelay;\n  _a.from;\n  var transition = __rest(_a, [\"when\", \"delay\", \"delayChildren\", \"staggerChildren\", \"staggerDirection\", \"repeat\", \"repeatType\", \"repeatDelay\", \"from\"]);\n  return !!Object.keys(transition).length;\n}\nvar legacyRepeatWarning = false;\nfunction convertTransitionToAnimationOptions(_a) {\n  var ease = _a.ease, times = _a.times, yoyo = _a.yoyo, flip = _a.flip, loop = _a.loop, transition = __rest(_a, [\"ease\", \"times\", \"yoyo\", \"flip\", \"loop\"]);\n  var options = __assign({}, transition);\n  if (times)\n    options[\"offset\"] = times;\n  if (transition.duration)\n    options[\"duration\"] = secondsToMilliseconds(transition.duration);\n  if (transition.repeatDelay)\n    options.repeatDelay = secondsToMilliseconds(transition.repeatDelay);\n  if (ease) {\n    options[\"ease\"] = isEasingArray(ease) ? ease.map(easingDefinitionToFunction) : easingDefinitionToFunction(ease);\n  }\n  if (transition.type === \"tween\")\n    options.type = \"keyframes\";\n  if (yoyo || loop || flip) {\n    warning(!legacyRepeatWarning, \"yoyo, loop and flip have been removed from the API. Replace with repeat and repeatType options.\");\n    legacyRepeatWarning = true;\n    if (yoyo) {\n      options.repeatType = \"reverse\";\n    } else if (loop) {\n      options.repeatType = \"loop\";\n    } else if (flip) {\n      options.repeatType = \"mirror\";\n    }\n    options.repeat = loop || yoyo || flip || transition.repeat;\n  }\n  if (transition.type !== \"spring\")\n    options.type = \"keyframes\";\n  return options;\n}\nfunction getDelayFromTransition(transition, key6) {\n  var _a;\n  var valueTransition = getValueTransition(transition, key6) || {};\n  return (_a = valueTransition.delay) !== null && _a !== void 0 ? _a : 0;\n}\nfunction hydrateKeyframes(options) {\n  if (Array.isArray(options.to) && options.to[0] === null) {\n    options.to = __spreadArray([], __read(options.to));\n    options.to[0] = options.from;\n  }\n  return options;\n}\nfunction getPopmotionAnimationOptions(transition, options, key6) {\n  var _a;\n  if (Array.isArray(options.to)) {\n    (_a = transition.duration) !== null && _a !== void 0 ? _a : transition.duration = 0.8;\n  }\n  hydrateKeyframes(options);\n  if (!isTransitionDefined(transition)) {\n    transition = __assign(__assign({}, transition), getDefaultTransition(key6, options.to));\n  }\n  return __assign(__assign({}, options), convertTransitionToAnimationOptions(transition));\n}\nfunction getAnimation(key6, value, target, transition, onComplete) {\n  var _a;\n  var valueTransition = getValueTransition(transition, key6);\n  var origin = (_a = valueTransition.from) !== null && _a !== void 0 ? _a : value.get();\n  var isTargetAnimatable = isAnimatable(key6, target);\n  if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n    origin = getAnimatableNone2(key6, target);\n  } else if (isZero(origin) && typeof target === \"string\") {\n    origin = getZeroUnit(target);\n  } else if (!Array.isArray(target) && isZero(target) && typeof origin === \"string\") {\n    target = getZeroUnit(origin);\n  }\n  var isOriginAnimatable = isAnimatable(key6, origin);\n  warning(isOriginAnimatable === isTargetAnimatable, \"You are trying to animate \" + key6 + ' from \"' + origin + '\" to \"' + target + '\". ' + origin + \" is not an animatable value - to enable this animation set \" + origin + \" to a value animatable to \" + target + \" via the `style` property.\");\n  function start() {\n    var options = {\n      from: origin,\n      to: target,\n      velocity: value.getVelocity(),\n      onComplete,\n      onUpdate: function(v) {\n        return value.set(v);\n      }\n    };\n    return valueTransition.type === \"inertia\" || valueTransition.type === \"decay\" ? inertia(__assign(__assign({}, options), valueTransition)) : animate(__assign(__assign({}, getPopmotionAnimationOptions(valueTransition, options, key6)), { onUpdate: function(v) {\n      var _a2;\n      options.onUpdate(v);\n      (_a2 = valueTransition.onUpdate) === null || _a2 === void 0 ? void 0 : _a2.call(valueTransition, v);\n    }, onComplete: function() {\n      var _a2;\n      options.onComplete();\n      (_a2 = valueTransition.onComplete) === null || _a2 === void 0 ? void 0 : _a2.call(valueTransition);\n    } }));\n  }\n  function set() {\n    var _a2;\n    value.set(target);\n    onComplete();\n    (_a2 = valueTransition === null || valueTransition === void 0 ? void 0 : valueTransition.onComplete) === null || _a2 === void 0 ? void 0 : _a2.call(valueTransition);\n    return { stop: function() {\n    } };\n  }\n  return !isOriginAnimatable || !isTargetAnimatable || valueTransition.type === false ? set : start;\n}\nfunction isZero(value) {\n  return value === 0 || typeof value === \"string\" && parseFloat(value) === 0 && value.indexOf(\" \") === -1;\n}\nfunction getZeroUnit(potentialUnitType) {\n  return typeof potentialUnitType === \"number\" ? 0 : getAnimatableNone2(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key6) {\n  return transition[key6] || transition[\"default\"] || transition;\n}\nfunction startAnimation(key6, value, target, transition) {\n  if (transition === void 0) {\n    transition = {};\n  }\n  return value.start(function(onComplete) {\n    var delayTimer;\n    var controls;\n    var animation = getAnimation(key6, value, target, transition, onComplete);\n    var delay = getDelayFromTransition(transition, key6);\n    var start = function() {\n      return controls = animation();\n    };\n    if (delay) {\n      delayTimer = setTimeout(start, secondsToMilliseconds(delay));\n    } else {\n      start();\n    }\n    return function() {\n      clearTimeout(delayTimer);\n      controls === null || controls === void 0 ? void 0 : controls.stop();\n    };\n  });\n}\n\n// ../../node_modules/framer-motion/dist/es/utils/is-numerical-string.js\nvar isNumericalString = function(v) {\n  return /^\\-?\\d*\\.?\\d+$/.test(v);\n};\n\n// ../../node_modules/framer-motion/dist/es/utils/array.js\nfunction addUniqueItem(arr, item) {\n  arr.indexOf(item) === -1 && arr.push(item);\n}\nfunction removeItem(arr, item) {\n  var index = arr.indexOf(item);\n  index > -1 && arr.splice(index, 1);\n}\n\n// ../../node_modules/framer-motion/dist/es/utils/subscription-manager.js\nvar SubscriptionManager = function() {\n  function SubscriptionManager2() {\n    this.subscriptions = [];\n  }\n  SubscriptionManager2.prototype.add = function(handler) {\n    var _this = this;\n    addUniqueItem(this.subscriptions, handler);\n    return function() {\n      return removeItem(_this.subscriptions, handler);\n    };\n  };\n  SubscriptionManager2.prototype.notify = function(a2, b2, c2) {\n    var numSubscriptions = this.subscriptions.length;\n    if (!numSubscriptions)\n      return;\n    if (numSubscriptions === 1) {\n      this.subscriptions[0](a2, b2, c2);\n    } else {\n      for (var i = 0; i < numSubscriptions; i++) {\n        var handler = this.subscriptions[i];\n        handler && handler(a2, b2, c2);\n      }\n    }\n  };\n  SubscriptionManager2.prototype.getSize = function() {\n    return this.subscriptions.length;\n  };\n  SubscriptionManager2.prototype.clear = function() {\n    this.subscriptions.length = 0;\n  };\n  return SubscriptionManager2;\n}();\n\n// ../../node_modules/framer-motion/dist/es/value/index.js\nvar isFloat = function(value) {\n  return !isNaN(parseFloat(value));\n};\nvar MotionValue = function() {\n  function MotionValue10(init) {\n    var _this = this;\n    this.timeDelta = 0;\n    this.lastUpdated = 0;\n    this.updateSubscribers = new SubscriptionManager();\n    this.velocityUpdateSubscribers = new SubscriptionManager();\n    this.renderSubscribers = new SubscriptionManager();\n    this.canTrackVelocity = false;\n    this.updateAndNotify = function(v, render) {\n      if (render === void 0) {\n        render = true;\n      }\n      _this.prev = _this.current;\n      _this.current = v;\n      var _a = getFrameData(), delta2 = _a.delta, timestamp = _a.timestamp;\n      if (_this.lastUpdated !== timestamp) {\n        _this.timeDelta = delta2;\n        _this.lastUpdated = timestamp;\n        es_default.postRender(_this.scheduleVelocityCheck);\n      }\n      if (_this.prev !== _this.current) {\n        _this.updateSubscribers.notify(_this.current);\n      }\n      if (_this.velocityUpdateSubscribers.getSize()) {\n        _this.velocityUpdateSubscribers.notify(_this.getVelocity());\n      }\n      if (render) {\n        _this.renderSubscribers.notify(_this.current);\n      }\n    };\n    this.scheduleVelocityCheck = function() {\n      return es_default.postRender(_this.velocityCheck);\n    };\n    this.velocityCheck = function(_a) {\n      var timestamp = _a.timestamp;\n      if (timestamp !== _this.lastUpdated) {\n        _this.prev = _this.current;\n        _this.velocityUpdateSubscribers.notify(_this.getVelocity());\n      }\n    };\n    this.hasAnimated = false;\n    this.prev = this.current = init;\n    this.canTrackVelocity = isFloat(this.current);\n  }\n  MotionValue10.prototype.onChange = function(subscription) {\n    return this.updateSubscribers.add(subscription);\n  };\n  MotionValue10.prototype.clearListeners = function() {\n    this.updateSubscribers.clear();\n  };\n  MotionValue10.prototype.onRenderRequest = function(subscription) {\n    subscription(this.get());\n    return this.renderSubscribers.add(subscription);\n  };\n  MotionValue10.prototype.attach = function(passiveEffect) {\n    this.passiveEffect = passiveEffect;\n  };\n  MotionValue10.prototype.set = function(v, render) {\n    if (render === void 0) {\n      render = true;\n    }\n    if (!render || !this.passiveEffect) {\n      this.updateAndNotify(v, render);\n    } else {\n      this.passiveEffect(v, this.updateAndNotify);\n    }\n  };\n  MotionValue10.prototype.get = function() {\n    return this.current;\n  };\n  MotionValue10.prototype.getPrevious = function() {\n    return this.prev;\n  };\n  MotionValue10.prototype.getVelocity = function() {\n    return this.canTrackVelocity ? velocityPerSecond(parseFloat(this.current) - parseFloat(this.prev), this.timeDelta) : 0;\n  };\n  MotionValue10.prototype.start = function(animation) {\n    var _this = this;\n    this.stop();\n    return new Promise(function(resolve) {\n      _this.hasAnimated = true;\n      _this.stopAnimation = animation(resolve);\n    }).then(function() {\n      return _this.clearAnimation();\n    });\n  };\n  MotionValue10.prototype.stop = function() {\n    if (this.stopAnimation)\n      this.stopAnimation();\n    this.clearAnimation();\n  };\n  MotionValue10.prototype.isAnimating = function() {\n    return !!this.stopAnimation;\n  };\n  MotionValue10.prototype.clearAnimation = function() {\n    this.stopAnimation = null;\n  };\n  MotionValue10.prototype.destroy = function() {\n    this.updateSubscribers.clear();\n    this.renderSubscribers.clear();\n    this.stop();\n  };\n  return MotionValue10;\n}();\nfunction motionValue(init) {\n  return new MotionValue(init);\n}\n\n// ../../node_modules/framer-motion/dist/es/render/dom/value-types/test.js\nvar testValueType = function(v) {\n  return function(type) {\n    return type.test(v);\n  };\n};\n\n// ../../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.js\nvar auto = {\n  test: function(v) {\n    return v === \"auto\";\n  },\n  parse: function(v) {\n    return v;\n  }\n};\n\n// ../../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.js\nvar dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\nvar findDimensionValueType = function(v) {\n  return dimensionValueTypes.find(testValueType(v));\n};\n\n// ../../node_modules/framer-motion/dist/es/render/dom/value-types/find.js\nvar valueTypes = __spreadArray(__spreadArray([], __read(dimensionValueTypes)), [color, complex]);\nvar findValueType = function(v) {\n  return valueTypes.find(testValueType(v));\n};\n\n// ../../node_modules/framer-motion/dist/es/render/utils/setters.js\nfunction setMotionValue(visualElement2, key6, value) {\n  if (visualElement2.hasValue(key6)) {\n    visualElement2.getValue(key6).set(value);\n  } else {\n    visualElement2.addValue(key6, motionValue(value));\n  }\n}\nfunction setTarget(visualElement2, definition) {\n  var resolved = resolveVariant(visualElement2, definition);\n  var _a = resolved ? visualElement2.makeTargetAnimatable(resolved, false) : {}, _b = _a.transitionEnd, transitionEnd = _b === void 0 ? {} : _b;\n  _a.transition;\n  var target = __rest(_a, [\"transitionEnd\", \"transition\"]);\n  target = __assign(__assign({}, target), transitionEnd);\n  for (var key6 in target) {\n    var value = resolveFinalValueInKeyframes(target[key6]);\n    setMotionValue(visualElement2, key6, value);\n  }\n}\nfunction setVariants(visualElement2, variantLabels) {\n  var reversedLabels = __spreadArray([], __read(variantLabels)).reverse();\n  reversedLabels.forEach(function(key6) {\n    var _a;\n    var variant = visualElement2.getVariant(key6);\n    variant && setTarget(visualElement2, variant);\n    (_a = visualElement2.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach(function(child) {\n      setVariants(child, variantLabels);\n    });\n  });\n}\nfunction setValues(visualElement2, definition) {\n  if (Array.isArray(definition)) {\n    return setVariants(visualElement2, definition);\n  } else if (typeof definition === \"string\") {\n    return setVariants(visualElement2, [definition]);\n  } else {\n    setTarget(visualElement2, definition);\n  }\n}\nfunction checkTargetForNewValues(visualElement2, target, origin) {\n  var _a, _b, _c;\n  var _d;\n  var newValueKeys = Object.keys(target).filter(function(key7) {\n    return !visualElement2.hasValue(key7);\n  });\n  var numNewValues = newValueKeys.length;\n  if (!numNewValues)\n    return;\n  for (var i = 0; i < numNewValues; i++) {\n    var key6 = newValueKeys[i];\n    var targetValue = target[key6];\n    var value = null;\n    if (Array.isArray(targetValue)) {\n      value = targetValue[0];\n    }\n    if (value === null) {\n      value = (_b = (_a = origin[key6]) !== null && _a !== void 0 ? _a : visualElement2.readValue(key6)) !== null && _b !== void 0 ? _b : target[key6];\n    }\n    if (value === void 0 || value === null)\n      continue;\n    if (typeof value === \"string\" && (isNumericalString(value) || value.startsWith(\"0\"))) {\n      value = parseFloat(value);\n    } else if (!findValueType(value) && complex.test(targetValue)) {\n      value = getAnimatableNone2(key6, targetValue);\n    }\n    visualElement2.addValue(key6, motionValue(value));\n    (_c = (_d = origin)[key6]) !== null && _c !== void 0 ? _c : _d[key6] = value;\n    visualElement2.setBaseTarget(key6, value);\n  }\n}\nfunction getOriginFromTransition(key6, transition) {\n  if (!transition)\n    return;\n  var valueTransition = transition[key6] || transition[\"default\"] || transition;\n  return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement2) {\n  var _a, _b;\n  var origin = {};\n  for (var key6 in target) {\n    origin[key6] = (_a = getOriginFromTransition(key6, transition)) !== null && _a !== void 0 ? _a : (_b = visualElement2.getValue(key6)) === null || _b === void 0 ? void 0 : _b.get();\n  }\n  return origin;\n}\n\n// ../../node_modules/framer-motion/dist/es/render/utils/animation.js\nfunction animateVisualElement(visualElement2, definition, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  visualElement2.notifyAnimationStart();\n  var animation;\n  if (Array.isArray(definition)) {\n    var animations2 = definition.map(function(variant) {\n      return animateVariant(visualElement2, variant, options);\n    });\n    animation = Promise.all(animations2);\n  } else if (typeof definition === \"string\") {\n    animation = animateVariant(visualElement2, definition, options);\n  } else {\n    var resolvedDefinition = typeof definition === \"function\" ? resolveVariant(visualElement2, definition, options.custom) : definition;\n    animation = animateTarget(visualElement2, resolvedDefinition, options);\n  }\n  return animation.then(function() {\n    return visualElement2.notifyAnimationComplete(definition);\n  });\n}\nfunction animateVariant(visualElement2, variant, options) {\n  var _a;\n  if (options === void 0) {\n    options = {};\n  }\n  var resolved = resolveVariant(visualElement2, variant, options.custom);\n  var _b = (resolved || {}).transition, transition = _b === void 0 ? visualElement2.getDefaultTransition() || {} : _b;\n  if (options.transitionOverride) {\n    transition = options.transitionOverride;\n  }\n  var getAnimation2 = resolved ? function() {\n    return animateTarget(visualElement2, resolved, options);\n  } : function() {\n    return Promise.resolve();\n  };\n  var getChildAnimations = ((_a = visualElement2.variantChildren) === null || _a === void 0 ? void 0 : _a.size) ? function(forwardDelay) {\n    if (forwardDelay === void 0) {\n      forwardDelay = 0;\n    }\n    var _a2 = transition.delayChildren, delayChildren = _a2 === void 0 ? 0 : _a2, staggerChildren = transition.staggerChildren, staggerDirection = transition.staggerDirection;\n    return animateChildren(visualElement2, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n  } : function() {\n    return Promise.resolve();\n  };\n  var when = transition.when;\n  if (when) {\n    var _c = __read(when === \"beforeChildren\" ? [getAnimation2, getChildAnimations] : [getChildAnimations, getAnimation2], 2), first = _c[0], last = _c[1];\n    return first().then(last);\n  } else {\n    return Promise.all([getAnimation2(), getChildAnimations(options.delay)]);\n  }\n}\nfunction animateTarget(visualElement2, definition, _a) {\n  var _b;\n  var _c = _a === void 0 ? {} : _a, _d = _c.delay, delay = _d === void 0 ? 0 : _d, transitionOverride = _c.transitionOverride, type = _c.type;\n  var _e = visualElement2.makeTargetAnimatable(definition), _f = _e.transition, transition = _f === void 0 ? visualElement2.getDefaultTransition() : _f, transitionEnd = _e.transitionEnd, target = __rest(_e, [\"transition\", \"transitionEnd\"]);\n  if (transitionOverride)\n    transition = transitionOverride;\n  var animations2 = [];\n  var animationTypeState = type && ((_b = visualElement2.animationState) === null || _b === void 0 ? void 0 : _b.getState()[type]);\n  for (var key6 in target) {\n    var value = visualElement2.getValue(key6);\n    var valueTarget = target[key6];\n    if (!value || valueTarget === void 0 || animationTypeState && shouldBlockAnimation(animationTypeState, key6)) {\n      continue;\n    }\n    var animation = startAnimation(key6, value, valueTarget, __assign({ delay }, transition));\n    animations2.push(animation);\n  }\n  return Promise.all(animations2).then(function() {\n    transitionEnd && setTarget(visualElement2, transitionEnd);\n  });\n}\nfunction animateChildren(visualElement2, variant, delayChildren, staggerChildren, staggerDirection, options) {\n  if (delayChildren === void 0) {\n    delayChildren = 0;\n  }\n  if (staggerChildren === void 0) {\n    staggerChildren = 0;\n  }\n  if (staggerDirection === void 0) {\n    staggerDirection = 1;\n  }\n  var animations2 = [];\n  var maxStaggerDuration = (visualElement2.variantChildren.size - 1) * staggerChildren;\n  var generateStaggerDuration = staggerDirection === 1 ? function(i) {\n    if (i === void 0) {\n      i = 0;\n    }\n    return i * staggerChildren;\n  } : function(i) {\n    if (i === void 0) {\n      i = 0;\n    }\n    return maxStaggerDuration - i * staggerChildren;\n  };\n  Array.from(visualElement2.variantChildren).sort(sortByTreeOrder).forEach(function(child, i) {\n    animations2.push(animateVariant(child, variant, __assign(__assign({}, options), { delay: delayChildren + generateStaggerDuration(i) })).then(function() {\n      return child.notifyAnimationComplete(variant);\n    }));\n  });\n  return Promise.all(animations2);\n}\nfunction stopAnimation(visualElement2) {\n  visualElement2.forEachValue(function(value) {\n    return value.stop();\n  });\n}\nfunction sortByTreeOrder(a2, b2) {\n  return a2.sortNodePosition(b2);\n}\nfunction shouldBlockAnimation(_a, key6) {\n  var protectedKeys = _a.protectedKeys, needsAnimating = _a.needsAnimating;\n  var shouldBlock = protectedKeys.hasOwnProperty(key6) && needsAnimating[key6] !== true;\n  needsAnimating[key6] = false;\n  return shouldBlock;\n}\n\n// ../../node_modules/framer-motion/dist/es/render/utils/animation-state.js\nvar variantPriorityOrder = [\n  AnimationType.Animate,\n  AnimationType.Hover,\n  AnimationType.Tap,\n  AnimationType.Drag,\n  AnimationType.Focus,\n  AnimationType.Exit\n];\nvar reversePriorityOrder = __spreadArray([], __read(variantPriorityOrder)).reverse();\nvar numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement2) {\n  return function(animations2) {\n    return Promise.all(animations2.map(function(_a) {\n      var animation = _a.animation, options = _a.options;\n      return animateVisualElement(visualElement2, animation, options);\n    }));\n  };\n}\nfunction createAnimationState(visualElement2) {\n  var animate4 = animateList(visualElement2);\n  var state = createState();\n  var allAnimatedKeys = {};\n  var isInitialRender = true;\n  var buildResolvedTypeValues = function(acc, definition) {\n    var resolved = resolveVariant(visualElement2, definition);\n    if (resolved) {\n      resolved.transition;\n      var transitionEnd = resolved.transitionEnd, target = __rest(resolved, [\"transition\", \"transitionEnd\"]);\n      acc = __assign(__assign(__assign({}, acc), target), transitionEnd);\n    }\n    return acc;\n  };\n  function isAnimated(key6) {\n    return allAnimatedKeys[key6] !== void 0;\n  }\n  function setAnimateFunction(makeAnimator) {\n    animate4 = makeAnimator(visualElement2);\n  }\n  function animateChanges(options, changedActiveType) {\n    var _a;\n    var props = visualElement2.getProps();\n    var context = visualElement2.getVariantContext(true) || {};\n    var animations2 = [];\n    var removedKeys = new Set();\n    var encounteredKeys = {};\n    var removedVariantIndex = Infinity;\n    var _loop_1 = function(i2) {\n      var type = reversePriorityOrder[i2];\n      var typeState = state[type];\n      var prop = (_a = props[type]) !== null && _a !== void 0 ? _a : context[type];\n      var propIsVariant = isVariantLabel(prop);\n      var activeDelta = type === changedActiveType ? typeState.isActive : null;\n      if (activeDelta === false)\n        removedVariantIndex = i2;\n      var isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n      if (isInherited && isInitialRender && visualElement2.manuallyAnimateOnMount) {\n        isInherited = false;\n      }\n      typeState.protectedKeys = __assign({}, encounteredKeys);\n      if (!typeState.isActive && activeDelta === null || !prop && !typeState.prevProp || isAnimationControls(prop) || typeof prop === \"boolean\") {\n        return \"continue\";\n      }\n      var shouldAnimateType = variantsHaveChanged(typeState.prevProp, prop) || type === changedActiveType && typeState.isActive && !isInherited && propIsVariant || i2 > removedVariantIndex && propIsVariant;\n      var definitionList = Array.isArray(prop) ? prop : [prop];\n      var resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n      if (activeDelta === false)\n        resolvedValues = {};\n      var _b = typeState.prevResolvedValues, prevResolvedValues = _b === void 0 ? {} : _b;\n      var allKeys = __assign(__assign({}, prevResolvedValues), resolvedValues);\n      var markToAnimate = function(key7) {\n        shouldAnimateType = true;\n        removedKeys.delete(key7);\n        typeState.needsAnimating[key7] = true;\n      };\n      for (var key6 in allKeys) {\n        var next = resolvedValues[key6];\n        var prev = prevResolvedValues[key6];\n        if (encounteredKeys.hasOwnProperty(key6))\n          continue;\n        if (next !== prev) {\n          if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n            if (!shallowCompare(next, prev)) {\n              markToAnimate(key6);\n            } else {\n              typeState.protectedKeys[key6] = true;\n            }\n          } else if (next !== void 0) {\n            markToAnimate(key6);\n          } else {\n            removedKeys.add(key6);\n          }\n        } else if (next !== void 0 && removedKeys.has(key6)) {\n          markToAnimate(key6);\n        } else {\n          typeState.protectedKeys[key6] = true;\n        }\n      }\n      typeState.prevProp = prop;\n      typeState.prevResolvedValues = resolvedValues;\n      if (typeState.isActive) {\n        encounteredKeys = __assign(__assign({}, encounteredKeys), resolvedValues);\n      }\n      if (isInitialRender && visualElement2.blockInitialAnimation) {\n        shouldAnimateType = false;\n      }\n      if (shouldAnimateType && !isInherited) {\n        animations2.push.apply(animations2, __spreadArray([], __read(definitionList.map(function(animation) {\n          return {\n            animation,\n            options: __assign({ type }, options)\n          };\n        }))));\n      }\n    };\n    for (var i = 0; i < numAnimationTypes; i++) {\n      _loop_1(i);\n    }\n    allAnimatedKeys = __assign({}, encounteredKeys);\n    if (removedKeys.size) {\n      var fallbackAnimation_1 = {};\n      removedKeys.forEach(function(key6) {\n        var fallbackTarget = visualElement2.getBaseTarget(key6);\n        if (fallbackTarget !== void 0) {\n          fallbackAnimation_1[key6] = fallbackTarget;\n        }\n      });\n      animations2.push({ animation: fallbackAnimation_1 });\n    }\n    var shouldAnimate = Boolean(animations2.length);\n    if (isInitialRender && props.initial === false && !visualElement2.manuallyAnimateOnMount) {\n      shouldAnimate = false;\n    }\n    isInitialRender = false;\n    return shouldAnimate ? animate4(animations2) : Promise.resolve();\n  }\n  function setActive(type, isActive, options) {\n    var _a;\n    if (state[type].isActive === isActive)\n      return Promise.resolve();\n    (_a = visualElement2.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach(function(child) {\n      var _a2;\n      return (_a2 = child.animationState) === null || _a2 === void 0 ? void 0 : _a2.setActive(type, isActive);\n    });\n    state[type].isActive = isActive;\n    return animateChanges(options, type);\n  }\n  return {\n    isAnimated,\n    animateChanges,\n    setActive,\n    setAnimateFunction,\n    getState: function() {\n      return state;\n    }\n  };\n}\nfunction variantsHaveChanged(prev, next) {\n  if (typeof next === \"string\") {\n    return next !== prev;\n  } else if (isVariantLabels(next)) {\n    return !shallowCompare(next, prev);\n  }\n  return false;\n}\nfunction createTypeState(isActive) {\n  if (isActive === void 0) {\n    isActive = false;\n  }\n  return {\n    isActive,\n    protectedKeys: {},\n    needsAnimating: {},\n    prevResolvedValues: {}\n  };\n}\nfunction createState() {\n  var _a;\n  return _a = {}, _a[AnimationType.Animate] = createTypeState(true), _a[AnimationType.Hover] = createTypeState(), _a[AnimationType.Tap] = createTypeState(), _a[AnimationType.Drag] = createTypeState(), _a[AnimationType.Focus] = createTypeState(), _a[AnimationType.Exit] = createTypeState(), _a;\n}\n\n// ../../node_modules/framer-motion/dist/es/motion/features/animations.js\nvar animations = {\n  animation: makeRenderlessComponent(function(_a) {\n    var visualElement2 = _a.visualElement, animate4 = _a.animate;\n    visualElement2.animationState || (visualElement2.animationState = createAnimationState(visualElement2));\n    if (isAnimationControls(animate4)) {\n      (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function() {\n        return animate4.subscribe(visualElement2);\n      }, [animate4]);\n    }\n  }),\n  exit: makeRenderlessComponent(function(props) {\n    var custom = props.custom, visualElement2 = props.visualElement;\n    var _a = __read(usePresence(), 2), isPresent2 = _a[0], onExitComplete = _a[1];\n    var presenceContext = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(PresenceContext);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function() {\n      var _a2, _b;\n      var animation = (_a2 = visualElement2.animationState) === null || _a2 === void 0 ? void 0 : _a2.setActive(AnimationType.Exit, !isPresent2, { custom: (_b = presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.custom) !== null && _b !== void 0 ? _b : custom });\n      !isPresent2 && (animation === null || animation === void 0 ? void 0 : animation.then(onExitComplete));\n    }, [isPresent2]);\n  })\n};\n\n// ../../node_modules/framer-motion/dist/es/gestures/drag/use-drag.js\n\n\n// ../../node_modules/framer-motion/dist/es/gestures/PanSession.js\nvar PanSession = function() {\n  function PanSession2(event, handlers, _a) {\n    var _this = this;\n    var _b = _a === void 0 ? {} : _a, transformPagePoint = _b.transformPagePoint;\n    this.startEvent = null;\n    this.lastMoveEvent = null;\n    this.lastMoveEventInfo = null;\n    this.handlers = {};\n    this.updatePoint = function() {\n      if (!(_this.lastMoveEvent && _this.lastMoveEventInfo))\n        return;\n      var info2 = getPanInfo(_this.lastMoveEventInfo, _this.history);\n      var isPanStarted = _this.startEvent !== null;\n      var isDistancePastThreshold = distance(info2.offset, { x: 0, y: 0 }) >= 3;\n      if (!isPanStarted && !isDistancePastThreshold)\n        return;\n      var point2 = info2.point;\n      var timestamp2 = getFrameData().timestamp;\n      _this.history.push(__assign(__assign({}, point2), { timestamp: timestamp2 }));\n      var _a2 = _this.handlers, onStart = _a2.onStart, onMove = _a2.onMove;\n      if (!isPanStarted) {\n        onStart && onStart(_this.lastMoveEvent, info2);\n        _this.startEvent = _this.lastMoveEvent;\n      }\n      onMove && onMove(_this.lastMoveEvent, info2);\n    };\n    this.handlePointerMove = function(event2, info2) {\n      _this.lastMoveEvent = event2;\n      _this.lastMoveEventInfo = transformPoint(info2, _this.transformPagePoint);\n      if (isMouseEvent(event2) && event2.buttons === 0) {\n        _this.handlePointerUp(event2, info2);\n        return;\n      }\n      es_default.update(_this.updatePoint, true);\n    };\n    this.handlePointerUp = function(event2, info2) {\n      _this.end();\n      var onEnd = _this.handlers.onEnd;\n      if (!onEnd || !_this.startEvent)\n        return;\n      var panInfo = getPanInfo(transformPoint(info2, _this.transformPagePoint), _this.history);\n      onEnd && onEnd(event2, panInfo);\n    };\n    if (isTouchEvent(event) && event.touches.length > 1)\n      return;\n    this.handlers = handlers;\n    this.transformPagePoint = transformPagePoint;\n    var info = extractEventInfo(event);\n    var initialInfo = transformPoint(info, this.transformPagePoint);\n    var point = initialInfo.point;\n    var timestamp = getFrameData().timestamp;\n    this.history = [__assign(__assign({}, point), { timestamp })];\n    var onSessionStart = handlers.onSessionStart;\n    onSessionStart && onSessionStart(event, getPanInfo(initialInfo, this.history));\n    this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n  }\n  PanSession2.prototype.updateHandlers = function(handlers) {\n    this.handlers = handlers;\n  };\n  PanSession2.prototype.end = function() {\n    this.removeListeners && this.removeListeners();\n    cancelSync.update(this.updatePoint);\n  };\n  return PanSession2;\n}();\nfunction transformPoint(info, transformPagePoint) {\n  return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a2, b2) {\n  return { x: a2.x - b2.x, y: a2.y - b2.y };\n}\nfunction getPanInfo(_a, history) {\n  var point = _a.point;\n  return {\n    point,\n    delta: subtractPoint(point, lastDevicePoint(history)),\n    offset: subtractPoint(point, startDevicePoint(history)),\n    velocity: getVelocity2(history, 0.1)\n  };\n}\nfunction startDevicePoint(history) {\n  return history[0];\n}\nfunction lastDevicePoint(history) {\n  return history[history.length - 1];\n}\nfunction getVelocity2(history, timeDelta2) {\n  if (history.length < 2) {\n    return { x: 0, y: 0 };\n  }\n  var i = history.length - 1;\n  var timestampedPoint = null;\n  var lastPoint = lastDevicePoint(history);\n  while (i >= 0) {\n    timestampedPoint = history[i];\n    if (lastPoint.timestamp - timestampedPoint.timestamp > secondsToMilliseconds(timeDelta2)) {\n      break;\n    }\n    i--;\n  }\n  if (!timestampedPoint) {\n    return { x: 0, y: 0 };\n  }\n  var time3 = (lastPoint.timestamp - timestampedPoint.timestamp) / 1e3;\n  if (time3 === 0) {\n    return { x: 0, y: 0 };\n  }\n  var currentVelocity = {\n    x: (lastPoint.x - timestampedPoint.x) / time3,\n    y: (lastPoint.y - timestampedPoint.y) / time3\n  };\n  if (currentVelocity.x === Infinity) {\n    currentVelocity.x = 0;\n  }\n  if (currentVelocity.y === Infinity) {\n    currentVelocity.y = 0;\n  }\n  return currentVelocity;\n}\n\n// ../../node_modules/framer-motion/dist/es/utils/noop.js\nfunction noop(any) {\n  return any;\n}\n\n// ../../node_modules/framer-motion/dist/es/utils/geometry/index.js\nfunction convertBoundingBoxToAxisBox(_a) {\n  var top = _a.top, left = _a.left, right = _a.right, bottom = _a.bottom;\n  return {\n    x: { min: left, max: right },\n    y: { min: top, max: bottom }\n  };\n}\nfunction convertAxisBoxToBoundingBox(_a) {\n  var x = _a.x, y = _a.y;\n  return {\n    top: y.min,\n    bottom: y.max,\n    left: x.min,\n    right: x.max\n  };\n}\nfunction transformBoundingBox(_a, transformPoint2) {\n  var top = _a.top, left = _a.left, bottom = _a.bottom, right = _a.right;\n  if (transformPoint2 === void 0) {\n    transformPoint2 = noop;\n  }\n  var topLeft = transformPoint2({ x: left, y: top });\n  var bottomRight = transformPoint2({ x: right, y: bottom });\n  return {\n    top: topLeft.y,\n    left: topLeft.x,\n    bottom: bottomRight.y,\n    right: bottomRight.x\n  };\n}\nfunction axisBox() {\n  return { x: { min: 0, max: 1 }, y: { min: 0, max: 1 } };\n}\nfunction copyAxisBox(box) {\n  return {\n    x: __assign({}, box.x),\n    y: __assign({}, box.y)\n  };\n}\nvar zeroDelta = {\n  translate: 0,\n  scale: 1,\n  origin: 0,\n  originPoint: 0\n};\nfunction delta() {\n  return {\n    x: __assign({}, zeroDelta),\n    y: __assign({}, zeroDelta)\n  };\n}\n\n// ../../node_modules/framer-motion/dist/es/utils/each-axis.js\nfunction eachAxis(handler) {\n  return [handler(\"x\"), handler(\"y\")];\n}\n\n// ../../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.js\nfunction applyConstraints(point, _a, elastic) {\n  var min = _a.min, max = _a.max;\n  if (min !== void 0 && point < min) {\n    point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n  } else if (max !== void 0 && point > max) {\n    point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n  }\n  return point;\n}\nfunction calcConstrainedMinPoint(point, length, progress2, constraints, elastic) {\n  var min = point - length * progress2;\n  return constraints ? applyConstraints(min, constraints, elastic) : min;\n}\nfunction calcRelativeAxisConstraints(axis, min, max) {\n  return {\n    min: min !== void 0 ? axis.min + min : void 0,\n    max: max !== void 0 ? axis.max + max - (axis.max - axis.min) : void 0\n  };\n}\nfunction calcRelativeConstraints(layoutBox, _a) {\n  var top = _a.top, left = _a.left, bottom = _a.bottom, right = _a.right;\n  return {\n    x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n    y: calcRelativeAxisConstraints(layoutBox.y, top, bottom)\n  };\n}\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n  var _a;\n  var min = constraintsAxis.min - layoutAxis.min;\n  var max = constraintsAxis.max - layoutAxis.max;\n  if (constraintsAxis.max - constraintsAxis.min < layoutAxis.max - layoutAxis.min) {\n    _a = __read([max, min], 2), min = _a[0], max = _a[1];\n  }\n  return {\n    min: layoutAxis.min + min,\n    max: layoutAxis.min + max\n  };\n}\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n  return {\n    x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n    y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y)\n  };\n}\nfunction calcPositionFromProgress(axis, constraints, progress2) {\n  var axisLength = axis.max - axis.min;\n  var min = mix(constraints.min, constraints.max - axisLength, progress2);\n  return { min, max: min + axisLength };\n}\nfunction rebaseAxisConstraints(layout, constraints) {\n  var relativeConstraints = {};\n  if (constraints.min !== void 0) {\n    relativeConstraints.min = constraints.min - layout.min;\n  }\n  if (constraints.max !== void 0) {\n    relativeConstraints.max = constraints.max - layout.min;\n  }\n  return relativeConstraints;\n}\nvar defaultElastic = 0.35;\nfunction resolveDragElastic(dragElastic) {\n  if (dragElastic === false) {\n    dragElastic = 0;\n  } else if (dragElastic === true) {\n    dragElastic = defaultElastic;\n  }\n  return {\n    x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n    y: resolveAxisElastic(dragElastic, \"top\", \"bottom\")\n  };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n  return {\n    min: resolvePointElastic(dragElastic, minLabel),\n    max: resolvePointElastic(dragElastic, maxLabel)\n  };\n}\nfunction resolvePointElastic(dragElastic, label) {\n  var _a;\n  return typeof dragElastic === \"number\" ? dragElastic : (_a = dragElastic[label]) !== null && _a !== void 0 ? _a : 0;\n}\n\n// ../../node_modules/framer-motion/dist/es/render/dom/projection/measure.js\nfunction getBoundingBox(element, transformPagePoint) {\n  var box = element.getBoundingClientRect();\n  return convertBoundingBoxToAxisBox(transformBoundingBox(box, transformPagePoint));\n}\n\n// ../../node_modules/framer-motion/dist/es/utils/geometry/delta-calc.js\nvar clampProgress = function(v) {\n  return clamp2(0, 1, v);\n};\nfunction isNear(value, target, maxDistance) {\n  if (target === void 0) {\n    target = 0;\n  }\n  if (maxDistance === void 0) {\n    maxDistance = 0.01;\n  }\n  return distance(value, target) < maxDistance;\n}\nfunction calcLength(axis) {\n  return axis.max - axis.min;\n}\nfunction calcOrigin2(source, target) {\n  var origin = 0.5;\n  var sourceLength = calcLength(source);\n  var targetLength = calcLength(target);\n  if (targetLength > sourceLength) {\n    origin = progress(target.min, target.max - sourceLength, source.min);\n  } else if (sourceLength > targetLength) {\n    origin = progress(source.min, source.max - targetLength, target.min);\n  }\n  return clampProgress(origin);\n}\nfunction updateAxisDelta(delta2, source, target, origin) {\n  if (origin === void 0) {\n    origin = 0.5;\n  }\n  delta2.origin = origin;\n  delta2.originPoint = mix(source.min, source.max, delta2.origin);\n  delta2.scale = calcLength(target) / calcLength(source);\n  if (isNear(delta2.scale, 1, 1e-4))\n    delta2.scale = 1;\n  delta2.translate = mix(target.min, target.max, delta2.origin) - delta2.originPoint;\n  if (isNear(delta2.translate))\n    delta2.translate = 0;\n}\nfunction updateBoxDelta(delta2, source, target, origin) {\n  updateAxisDelta(delta2.x, source.x, target.x, defaultOrigin(origin.originX));\n  updateAxisDelta(delta2.y, source.y, target.y, defaultOrigin(origin.originY));\n}\nfunction defaultOrigin(origin) {\n  return typeof origin === \"number\" ? origin : 0.5;\n}\nfunction calcRelativeAxis(target, relative, parent) {\n  target.min = parent.min + relative.min;\n  target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(projection, parentProjection) {\n  calcRelativeAxis(projection.target.x, projection.relativeTarget.x, parentProjection.target.x);\n  calcRelativeAxis(projection.target.y, projection.relativeTarget.y, parentProjection.target.y);\n}\n\n// ../../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.js\nvar compareByDepth = function(a2, b2) {\n  return a2.depth - b2.depth;\n};\n\n// ../../node_modules/framer-motion/dist/es/render/dom/projection/utils.js\nfunction updateTreeLayoutMeasurements(visualElement2, isRelativeDrag) {\n  withoutTreeTransform(visualElement2, function() {\n    var allChildren = collectProjectingChildren(visualElement2);\n    batchResetAndMeasure(allChildren);\n    updateLayoutMeasurement(visualElement2);\n  });\n  !isRelativeDrag && visualElement2.rebaseProjectionTarget(true, visualElement2.measureViewportBox(false));\n}\nfunction collectProjectingChildren(visualElement2) {\n  var children = [];\n  var addChild = function(child) {\n    if (child.projection.isEnabled || child.shouldResetTransform()) {\n      children.push(child);\n    }\n    child.children.forEach(addChild);\n  };\n  visualElement2.children.forEach(addChild);\n  return children.sort(compareByDepth);\n}\nfunction withoutTreeTransform(visualElement2, callback) {\n  var parent = visualElement2.parent;\n  var isEnabled = visualElement2.projection.isEnabled;\n  var shouldReset = isEnabled || visualElement2.shouldResetTransform();\n  shouldReset && visualElement2.resetTransform();\n  parent ? withoutTreeTransform(parent, callback) : callback();\n  shouldReset && visualElement2.restoreTransform();\n}\nfunction updateLayoutMeasurement(visualElement2) {\n  if (visualElement2.shouldResetTransform())\n    return;\n  var layoutState = visualElement2.getLayoutState();\n  visualElement2.notifyBeforeLayoutMeasure(layoutState.layout);\n  layoutState.isHydrated = true;\n  layoutState.layout = visualElement2.measureViewportBox();\n  layoutState.layoutCorrected = copyAxisBox(layoutState.layout);\n  visualElement2.notifyLayoutMeasure(layoutState.layout, visualElement2.prevViewportBox || layoutState.layout);\n  es_default.update(function() {\n    return visualElement2.rebaseProjectionTarget();\n  });\n}\nfunction snapshotViewportBox(visualElement2) {\n  if (visualElement2.shouldResetTransform())\n    return;\n  visualElement2.prevViewportBox = visualElement2.measureViewportBox(false);\n  visualElement2.rebaseProjectionTarget(false, visualElement2.prevViewportBox);\n}\nfunction batchResetAndMeasure(order2) {\n  order2.forEach(function(child) {\n    return child.resetTransform();\n  });\n  order2.forEach(updateLayoutMeasurement);\n}\n\n// ../../node_modules/framer-motion/dist/es/motion/features/layout/utils.js\nfunction tweenAxis(target, prev, next, p) {\n  target.min = mix(prev.min, next.min, p);\n  target.max = mix(prev.max, next.max, p);\n}\nfunction calcRelativeOffsetAxis(parent, child) {\n  return {\n    min: child.min - parent.min,\n    max: child.max - parent.min\n  };\n}\nfunction calcRelativeOffset(parent, child) {\n  return {\n    x: calcRelativeOffsetAxis(parent.x, child.x),\n    y: calcRelativeOffsetAxis(parent.y, child.y)\n  };\n}\nfunction checkIfParentHasChanged(prev, next) {\n  var prevId = prev.getLayoutId();\n  var nextId = next.getLayoutId();\n  return prevId !== nextId || nextId === void 0 && prev !== next;\n}\n\n// ../../node_modules/framer-motion/dist/es/render/utils/is-draggable.js\nfunction isDraggable(visualElement2) {\n  var _a = visualElement2.getProps(), drag2 = _a.drag, _dragX = _a._dragX;\n  return drag2 && !_dragX;\n}\n\n// ../../node_modules/framer-motion/dist/es/utils/geometry/delta-apply.js\nfunction resetAxis(axis, originAxis) {\n  axis.min = originAxis.min;\n  axis.max = originAxis.max;\n}\nfunction resetBox(box, originBox) {\n  resetAxis(box.x, originBox.x);\n  resetAxis(box.y, originBox.y);\n}\nfunction scalePoint(point, scale2, originPoint) {\n  var distanceFromOrigin = point - originPoint;\n  var scaled = scale2 * distanceFromOrigin;\n  return originPoint + scaled;\n}\nfunction applyPointDelta(point, translate, scale2, originPoint, boxScale) {\n  if (boxScale !== void 0) {\n    point = scalePoint(point, boxScale, originPoint);\n  }\n  return scalePoint(point, scale2, originPoint) + translate;\n}\nfunction applyAxisDelta(axis, translate, scale2, originPoint, boxScale) {\n  if (translate === void 0) {\n    translate = 0;\n  }\n  if (scale2 === void 0) {\n    scale2 = 1;\n  }\n  axis.min = applyPointDelta(axis.min, translate, scale2, originPoint, boxScale);\n  axis.max = applyPointDelta(axis.max, translate, scale2, originPoint, boxScale);\n}\nfunction applyBoxDelta(box, _a) {\n  var x = _a.x, y = _a.y;\n  applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n  applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nfunction applyAxisTransforms(final, axis, transforms, _a) {\n  var _b = __read(_a, 3), key6 = _b[0], scaleKey = _b[1], originKey = _b[2];\n  final.min = axis.min;\n  final.max = axis.max;\n  var axisOrigin = transforms[originKey] !== void 0 ? transforms[originKey] : 0.5;\n  var originPoint = mix(axis.min, axis.max, axisOrigin);\n  applyAxisDelta(final, transforms[key6], transforms[scaleKey], originPoint, transforms.scale);\n}\nvar xKeys = [\"x\", \"scaleX\", \"originX\"];\nvar yKeys = [\"y\", \"scaleY\", \"originY\"];\nfunction applyBoxTransforms(finalBox, box, transforms) {\n  applyAxisTransforms(finalBox.x, box.x, transforms, xKeys);\n  applyAxisTransforms(finalBox.y, box.y, transforms, yKeys);\n}\nfunction removePointDelta(point, translate, scale2, originPoint, boxScale) {\n  point -= translate;\n  point = scalePoint(point, 1 / scale2, originPoint);\n  if (boxScale !== void 0) {\n    point = scalePoint(point, 1 / boxScale, originPoint);\n  }\n  return point;\n}\nfunction removeAxisDelta(axis, translate, scale2, origin, boxScale) {\n  if (translate === void 0) {\n    translate = 0;\n  }\n  if (scale2 === void 0) {\n    scale2 = 1;\n  }\n  if (origin === void 0) {\n    origin = 0.5;\n  }\n  var originPoint = mix(axis.min, axis.max, origin) - translate;\n  axis.min = removePointDelta(axis.min, translate, scale2, originPoint, boxScale);\n  axis.max = removePointDelta(axis.max, translate, scale2, originPoint, boxScale);\n}\nfunction removeAxisTransforms(axis, transforms, _a) {\n  var _b = __read(_a, 3), key6 = _b[0], scaleKey = _b[1], originKey = _b[2];\n  removeAxisDelta(axis, transforms[key6], transforms[scaleKey], transforms[originKey], transforms.scale);\n}\nfunction removeBoxTransforms(box, transforms) {\n  removeAxisTransforms(box.x, transforms, xKeys);\n  removeAxisTransforms(box.y, transforms, yKeys);\n}\nfunction applyTreeDeltas(box, treeScale, treePath) {\n  var treeLength = treePath.length;\n  if (!treeLength)\n    return;\n  treeScale.x = treeScale.y = 1;\n  var node;\n  var delta2;\n  for (var i = 0; i < treeLength; i++) {\n    node = treePath[i];\n    delta2 = node.getLayoutState().delta;\n    treeScale.x *= delta2.x.scale;\n    treeScale.y *= delta2.y.scale;\n    applyBoxDelta(box, delta2);\n    if (isDraggable(node)) {\n      applyBoxTransforms(box, box, node.getLatestValues());\n    }\n  }\n}\n\n// ../../node_modules/framer-motion/dist/es/render/dom/projection/convert-to-relative.js\nfunction convertToRelativeProjection(visualElement2, isLayoutDrag) {\n  if (isLayoutDrag === void 0) {\n    isLayoutDrag = true;\n  }\n  var projectionParent = visualElement2.getProjectionParent();\n  if (!projectionParent)\n    return false;\n  var offset;\n  if (isLayoutDrag) {\n    offset = calcRelativeOffset(projectionParent.projection.target, visualElement2.projection.target);\n    removeBoxTransforms(offset, projectionParent.getLatestValues());\n  } else {\n    offset = calcRelativeOffset(projectionParent.getLayoutState().layout, visualElement2.getLayoutState().layout);\n  }\n  eachAxis(function(axis) {\n    return visualElement2.setProjectionTargetAxis(axis, offset[axis].min, offset[axis].max, true);\n  });\n  return true;\n}\n\n// ../../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.js\nvar elementDragControls = new WeakMap();\nvar lastPointerEvent;\nvar VisualElementDragControls = function() {\n  function VisualElementDragControls2(_a) {\n    var visualElement2 = _a.visualElement;\n    this.isDragging = false;\n    this.currentDirection = null;\n    this.constraints = false;\n    this.elastic = axisBox();\n    this.props = {};\n    this.hasMutatedConstraints = false;\n    this.cursorProgress = {\n      x: 0.5,\n      y: 0.5\n    };\n    this.originPoint = {};\n    this.openGlobalLock = null;\n    this.panSession = null;\n    this.visualElement = visualElement2;\n    this.visualElement.enableLayoutProjection();\n    elementDragControls.set(visualElement2, this);\n  }\n  VisualElementDragControls2.prototype.start = function(originEvent, _a) {\n    var _this = this;\n    var _b = _a === void 0 ? {} : _a, _c = _b.snapToCursor, snapToCursor = _c === void 0 ? false : _c, cursorProgress = _b.cursorProgress;\n    var onSessionStart = function(event) {\n      _this.stopMotion();\n      _this.updateLayoutMeasurements();\n      snapToCursor && _this.snapToCursor(originEvent);\n      _this.isLayoutDrag() && _this.visualElement.lockProjectionTarget();\n      var point = getViewportPointFromEvent(event).point;\n      eachAxis(function(axis) {\n        var _a2 = _this.visualElement.projection.target[axis], min = _a2.min, max = _a2.max;\n        _this.cursorProgress[axis] = cursorProgress ? cursorProgress[axis] : progress(min, max, point[axis]);\n        var axisValue = _this.getAxisMotionValue(axis);\n        if (axisValue) {\n          _this.originPoint[axis] = axisValue.get();\n        }\n      });\n    };\n    var onStart = function(event, info) {\n      var _a2, _b2, _c2;\n      var _d = _this.props, drag2 = _d.drag, dragPropagation = _d.dragPropagation;\n      if (drag2 && !dragPropagation) {\n        if (_this.openGlobalLock)\n          _this.openGlobalLock();\n        _this.openGlobalLock = getGlobalLock(drag2);\n        if (!_this.openGlobalLock)\n          return;\n      }\n      _this.resolveDragConstraints();\n      _this.isDragging = true;\n      _this.currentDirection = null;\n      (_b2 = (_a2 = _this.props).onDragStart) === null || _b2 === void 0 ? void 0 : _b2.call(_a2, event, info);\n      (_c2 = _this.visualElement.animationState) === null || _c2 === void 0 ? void 0 : _c2.setActive(AnimationType.Drag, true);\n    };\n    var onMove = function(event, info) {\n      var _a2, _b2, _c2, _d;\n      var _e = _this.props, dragPropagation = _e.dragPropagation, dragDirectionLock = _e.dragDirectionLock;\n      if (!dragPropagation && !_this.openGlobalLock)\n        return;\n      var offset = info.offset;\n      if (dragDirectionLock && _this.currentDirection === null) {\n        _this.currentDirection = getCurrentDirection(offset);\n        if (_this.currentDirection !== null) {\n          (_b2 = (_a2 = _this.props).onDirectionLock) === null || _b2 === void 0 ? void 0 : _b2.call(_a2, _this.currentDirection);\n        }\n        return;\n      }\n      _this.updateAxis(\"x\", event, offset);\n      _this.updateAxis(\"y\", event, offset);\n      (_d = (_c2 = _this.props).onDrag) === null || _d === void 0 ? void 0 : _d.call(_c2, event, info);\n      lastPointerEvent = event;\n    };\n    var onEnd = function(event, info) {\n      return _this.stop(event, info);\n    };\n    var transformPagePoint = this.props.transformPagePoint;\n    this.panSession = new PanSession(originEvent, {\n      onSessionStart,\n      onStart,\n      onMove,\n      onEnd\n    }, { transformPagePoint });\n  };\n  VisualElementDragControls2.prototype.updateLayoutMeasurements = function() {\n    updateTreeLayoutMeasurements(this.visualElement, Boolean(this.getAxisMotionValue(\"x\") && !this.isExternalDrag()));\n  };\n  VisualElementDragControls2.prototype.resolveDragConstraints = function() {\n    var _this = this;\n    var _a = this.props, dragConstraints = _a.dragConstraints, dragElastic = _a.dragElastic;\n    this.visualElement.updateLayoutProjection();\n    var layout = this.visualElement.getLayoutState().layoutCorrected;\n    if (dragConstraints) {\n      this.constraints = isRefObject(dragConstraints) ? this.resolveRefConstraints(layout, dragConstraints) : calcRelativeConstraints(layout, dragConstraints);\n    } else {\n      this.constraints = false;\n    }\n    this.elastic = resolveDragElastic(dragElastic);\n    if (this.constraints && !this.hasMutatedConstraints) {\n      eachAxis(function(axis) {\n        if (_this.getAxisMotionValue(axis)) {\n          _this.constraints[axis] = rebaseAxisConstraints(layout[axis], _this.constraints[axis]);\n        }\n      });\n    }\n  };\n  VisualElementDragControls2.prototype.resolveRefConstraints = function(layoutBox, constraints) {\n    var _a = this.props, onMeasureDragConstraints = _a.onMeasureDragConstraints, transformPagePoint = _a.transformPagePoint;\n    var constraintsElement = constraints.current;\n    invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n    this.constraintsBox = getBoundingBox(constraintsElement, transformPagePoint);\n    var measuredConstraints = calcViewportConstraints(layoutBox, this.constraintsBox);\n    if (onMeasureDragConstraints) {\n      var userConstraints = onMeasureDragConstraints(convertAxisBoxToBoundingBox(measuredConstraints));\n      this.hasMutatedConstraints = !!userConstraints;\n      if (userConstraints) {\n        measuredConstraints = convertBoundingBoxToAxisBox(userConstraints);\n      }\n    }\n    return measuredConstraints;\n  };\n  VisualElementDragControls2.prototype.cancelDrag = function() {\n    var _a;\n    this.isDragging = false;\n    this.panSession && this.panSession.end();\n    this.panSession = null;\n    if (!this.props.dragPropagation && this.openGlobalLock) {\n      this.openGlobalLock();\n      this.openGlobalLock = null;\n    }\n    (_a = this.visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Drag, false);\n  };\n  VisualElementDragControls2.prototype.stop = function(event, info) {\n    var _a, _b, _c;\n    this.visualElement.unlockProjectionTarget();\n    (_a = this.panSession) === null || _a === void 0 ? void 0 : _a.end();\n    this.panSession = null;\n    var isDragging = this.isDragging;\n    this.cancelDrag();\n    if (!isDragging)\n      return;\n    var velocity = info.velocity;\n    this.animateDragEnd(velocity);\n    (_c = (_b = this.props).onDragEnd) === null || _c === void 0 ? void 0 : _c.call(_b, event, info);\n  };\n  VisualElementDragControls2.prototype.snapToCursor = function(event) {\n    var _this = this;\n    eachAxis(function(axis) {\n      var drag2 = _this.props.drag;\n      if (!shouldDrag(axis, drag2, _this.currentDirection))\n        return;\n      var axisValue = _this.getAxisMotionValue(axis);\n      if (axisValue) {\n        var point = getViewportPointFromEvent(event).point;\n        var box = _this.visualElement.getLayoutState().layout;\n        var length_1 = box[axis].max - box[axis].min;\n        var center = box[axis].min + length_1 / 2;\n        var offset = point[axis] - center;\n        _this.originPoint[axis] = point[axis];\n        axisValue.set(offset);\n      } else {\n        _this.cursorProgress[axis] = 0.5;\n        _this.updateVisualElementAxis(axis, event);\n      }\n    });\n  };\n  VisualElementDragControls2.prototype.updateAxis = function(axis, event, offset) {\n    var drag2 = this.props.drag;\n    if (!shouldDrag(axis, drag2, this.currentDirection))\n      return;\n    return this.getAxisMotionValue(axis) ? this.updateAxisMotionValue(axis, offset) : this.updateVisualElementAxis(axis, event);\n  };\n  VisualElementDragControls2.prototype.updateAxisMotionValue = function(axis, offset) {\n    var axisValue = this.getAxisMotionValue(axis);\n    if (!offset || !axisValue)\n      return;\n    var nextValue = this.originPoint[axis] + offset[axis];\n    var update = this.constraints ? applyConstraints(nextValue, this.constraints[axis], this.elastic[axis]) : nextValue;\n    axisValue.set(update);\n  };\n  VisualElementDragControls2.prototype.updateVisualElementAxis = function(axis, event) {\n    var _a;\n    var axisLayout = this.visualElement.getLayoutState().layout[axis];\n    var axisLength = axisLayout.max - axisLayout.min;\n    var axisProgress = this.cursorProgress[axis];\n    var point = getViewportPointFromEvent(event).point;\n    var min = calcConstrainedMinPoint(point[axis], axisLength, axisProgress, (_a = this.constraints) === null || _a === void 0 ? void 0 : _a[axis], this.elastic[axis]);\n    this.visualElement.setProjectionTargetAxis(axis, min, min + axisLength);\n  };\n  VisualElementDragControls2.prototype.setProps = function(_a) {\n    var _b = _a.drag, drag2 = _b === void 0 ? false : _b, _c = _a.dragDirectionLock, dragDirectionLock = _c === void 0 ? false : _c, _d = _a.dragPropagation, dragPropagation = _d === void 0 ? false : _d, _e = _a.dragConstraints, dragConstraints = _e === void 0 ? false : _e, _f = _a.dragElastic, dragElastic = _f === void 0 ? defaultElastic : _f, _g = _a.dragMomentum, dragMomentum = _g === void 0 ? true : _g, remainingProps = __rest(_a, [\"drag\", \"dragDirectionLock\", \"dragPropagation\", \"dragConstraints\", \"dragElastic\", \"dragMomentum\"]);\n    this.props = __assign({\n      drag: drag2,\n      dragDirectionLock,\n      dragPropagation,\n      dragConstraints,\n      dragElastic,\n      dragMomentum\n    }, remainingProps);\n  };\n  VisualElementDragControls2.prototype.getAxisMotionValue = function(axis) {\n    var _a = this.props, layout = _a.layout, layoutId = _a.layoutId;\n    var dragKey = \"_drag\" + axis.toUpperCase();\n    if (this.props[dragKey]) {\n      return this.props[dragKey];\n    } else if (!layout && layoutId === void 0) {\n      return this.visualElement.getValue(axis, 0);\n    }\n  };\n  VisualElementDragControls2.prototype.isLayoutDrag = function() {\n    return !this.getAxisMotionValue(\"x\");\n  };\n  VisualElementDragControls2.prototype.isExternalDrag = function() {\n    var _a = this.props, _dragX = _a._dragX, _dragY = _a._dragY;\n    return _dragX || _dragY;\n  };\n  VisualElementDragControls2.prototype.animateDragEnd = function(velocity) {\n    var _this = this;\n    var _a = this.props, drag2 = _a.drag, dragMomentum = _a.dragMomentum, dragElastic = _a.dragElastic, dragTransition = _a.dragTransition;\n    var isRelative = convertToRelativeProjection(this.visualElement, this.isLayoutDrag() && !this.isExternalDrag());\n    var constraints = this.constraints || {};\n    if (isRelative && Object.keys(constraints).length && this.isLayoutDrag()) {\n      var projectionParent = this.visualElement.getProjectionParent();\n      if (projectionParent) {\n        var relativeConstraints_1 = calcRelativeOffset(projectionParent.projection.targetFinal, constraints);\n        eachAxis(function(axis) {\n          var _a2 = relativeConstraints_1[axis], min = _a2.min, max = _a2.max;\n          constraints[axis] = {\n            min: isNaN(min) ? void 0 : min,\n            max: isNaN(max) ? void 0 : max\n          };\n        });\n      }\n    }\n    var momentumAnimations = eachAxis(function(axis) {\n      var _a2;\n      if (!shouldDrag(axis, drag2, _this.currentDirection)) {\n        return;\n      }\n      var transition = (_a2 = constraints === null || constraints === void 0 ? void 0 : constraints[axis]) !== null && _a2 !== void 0 ? _a2 : {};\n      var bounceStiffness = dragElastic ? 200 : 1e6;\n      var bounceDamping = dragElastic ? 40 : 1e7;\n      var inertia2 = __assign(__assign({\n        type: \"inertia\",\n        velocity: dragMomentum ? velocity[axis] : 0,\n        bounceStiffness,\n        bounceDamping,\n        timeConstant: 750,\n        restDelta: 1,\n        restSpeed: 10\n      }, dragTransition), transition);\n      return _this.getAxisMotionValue(axis) ? _this.startAxisValueAnimation(axis, inertia2) : _this.visualElement.startLayoutAnimation(axis, inertia2, isRelative);\n    });\n    return Promise.all(momentumAnimations).then(function() {\n      var _a2, _b;\n      (_b = (_a2 = _this.props).onDragTransitionEnd) === null || _b === void 0 ? void 0 : _b.call(_a2);\n    });\n  };\n  VisualElementDragControls2.prototype.stopMotion = function() {\n    var _this = this;\n    eachAxis(function(axis) {\n      var axisValue = _this.getAxisMotionValue(axis);\n      axisValue ? axisValue.stop() : _this.visualElement.stopLayoutAnimation();\n    });\n  };\n  VisualElementDragControls2.prototype.startAxisValueAnimation = function(axis, transition) {\n    var axisValue = this.getAxisMotionValue(axis);\n    if (!axisValue)\n      return;\n    var currentValue = axisValue.get();\n    axisValue.set(currentValue);\n    axisValue.set(currentValue);\n    return startAnimation(axis, axisValue, 0, transition);\n  };\n  VisualElementDragControls2.prototype.scalePoint = function() {\n    var _this = this;\n    var _a = this.props, drag2 = _a.drag, dragConstraints = _a.dragConstraints;\n    if (!isRefObject(dragConstraints) || !this.constraintsBox)\n      return;\n    this.stopMotion();\n    var boxProgress = { x: 0, y: 0 };\n    eachAxis(function(axis) {\n      boxProgress[axis] = calcOrigin2(_this.visualElement.projection.target[axis], _this.constraintsBox[axis]);\n    });\n    this.updateLayoutMeasurements();\n    this.resolveDragConstraints();\n    eachAxis(function(axis) {\n      if (!shouldDrag(axis, drag2, null))\n        return;\n      var _a2 = calcPositionFromProgress(_this.visualElement.projection.target[axis], _this.constraintsBox[axis], boxProgress[axis]), min = _a2.min, max = _a2.max;\n      _this.visualElement.setProjectionTargetAxis(axis, min, max);\n    });\n  };\n  VisualElementDragControls2.prototype.mount = function(visualElement2) {\n    var _this = this;\n    var element = visualElement2.getInstance();\n    var stopPointerListener = addPointerEvent(element, \"pointerdown\", function(event) {\n      var _a = _this.props, drag2 = _a.drag, _b = _a.dragListener, dragListener = _b === void 0 ? true : _b;\n      drag2 && dragListener && _this.start(event);\n    });\n    var stopResizeListener = addDomEvent(window, \"resize\", function() {\n      _this.scalePoint();\n    });\n    var stopLayoutUpdateListener = visualElement2.onLayoutUpdate(function() {\n      if (_this.isDragging)\n        _this.resolveDragConstraints();\n    });\n    var prevDragCursor = visualElement2.prevDragCursor;\n    if (prevDragCursor) {\n      this.start(lastPointerEvent, { cursorProgress: prevDragCursor });\n    }\n    return function() {\n      stopPointerListener === null || stopPointerListener === void 0 ? void 0 : stopPointerListener();\n      stopResizeListener === null || stopResizeListener === void 0 ? void 0 : stopResizeListener();\n      stopLayoutUpdateListener === null || stopLayoutUpdateListener === void 0 ? void 0 : stopLayoutUpdateListener();\n      _this.cancelDrag();\n    };\n  };\n  return VisualElementDragControls2;\n}();\nfunction shouldDrag(direction, drag2, currentDirection) {\n  return (drag2 === true || drag2 === direction) && (currentDirection === null || currentDirection === direction);\n}\nfunction getCurrentDirection(offset, lockThreshold) {\n  if (lockThreshold === void 0) {\n    lockThreshold = 10;\n  }\n  var direction = null;\n  if (Math.abs(offset.y) > lockThreshold) {\n    direction = \"y\";\n  } else if (Math.abs(offset.x) > lockThreshold) {\n    direction = \"x\";\n  }\n  return direction;\n}\n\n// ../../node_modules/framer-motion/dist/es/gestures/drag/use-drag.js\nfunction useDrag(props) {\n  var groupDragControls = props.dragControls, visualElement2 = props.visualElement;\n  var transformPagePoint = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(MotionConfigContext).transformPagePoint;\n  var dragControls = useConstant(function() {\n    return new VisualElementDragControls({\n      visualElement: visualElement2\n    });\n  });\n  dragControls.setProps(__assign(__assign({}, props), { transformPagePoint }));\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function() {\n    return groupDragControls && groupDragControls.subscribe(dragControls);\n  }, [dragControls]);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function() {\n    return dragControls.mount(visualElement2);\n  }, []);\n}\n\n// ../../node_modules/framer-motion/dist/es/gestures/use-pan-gesture.js\n\nfunction usePanGesture(_a) {\n  var onPan = _a.onPan, onPanStart = _a.onPanStart, onPanEnd = _a.onPanEnd, onPanSessionStart = _a.onPanSessionStart, visualElement2 = _a.visualElement;\n  var hasPanEvents = onPan || onPanStart || onPanEnd || onPanSessionStart;\n  var panSession = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n  var transformPagePoint = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(MotionConfigContext).transformPagePoint;\n  var handlers = {\n    onSessionStart: onPanSessionStart,\n    onStart: onPanStart,\n    onMove: onPan,\n    onEnd: function(event, info) {\n      panSession.current = null;\n      onPanEnd && onPanEnd(event, info);\n    }\n  };\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function() {\n    if (panSession.current !== null) {\n      panSession.current.updateHandlers(handlers);\n    }\n  });\n  function onPointerDown(event) {\n    panSession.current = new PanSession(event, handlers, {\n      transformPagePoint\n    });\n  }\n  usePointerEvent(visualElement2, \"pointerdown\", hasPanEvents && onPointerDown);\n  useUnmountEffect(function() {\n    return panSession.current && panSession.current.end();\n  });\n}\n\n// ../../node_modules/framer-motion/dist/es/motion/features/drag.js\nvar drag = {\n  pan: makeRenderlessComponent(usePanGesture),\n  drag: makeRenderlessComponent(useDrag)\n};\n\n// ../../node_modules/framer-motion/dist/es/motion/features/layout/Animate.js\n\n\n// ../../node_modules/framer-motion/dist/es/components/AnimateSharedLayout/types.js\nvar Presence;\n(function(Presence2) {\n  Presence2[Presence2[\"Entering\"] = 0] = \"Entering\";\n  Presence2[Presence2[\"Present\"] = 1] = \"Present\";\n  Presence2[Presence2[\"Exiting\"] = 2] = \"Exiting\";\n})(Presence || (Presence = {}));\nvar VisibilityAction;\n(function(VisibilityAction2) {\n  VisibilityAction2[VisibilityAction2[\"Hide\"] = 0] = \"Hide\";\n  VisibilityAction2[VisibilityAction2[\"Show\"] = 1] = \"Show\";\n})(VisibilityAction || (VisibilityAction = {}));\n\n// ../../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.js\nfunction isCSSVariable2(value) {\n  return typeof value === \"string\" && value.startsWith(\"var(--\");\n}\nvar cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n  var match = cssVariableRegex.exec(current);\n  if (!match)\n    return [,];\n  var _a = __read(match, 3), token = _a[1], fallback = _a[2];\n  return [token, fallback];\n}\nvar maxDepth = 4;\nfunction getVariableValue(current, element, depth) {\n  if (depth === void 0) {\n    depth = 1;\n  }\n  invariant(depth <= maxDepth, 'Max CSS variable fallback depth detected in property \"' + current + '\". This may indicate a circular fallback dependency.');\n  var _a = __read(parseCSSVariable(current), 2), token = _a[0], fallback = _a[1];\n  if (!token)\n    return;\n  var resolved = window.getComputedStyle(element).getPropertyValue(token);\n  if (resolved) {\n    return resolved.trim();\n  } else if (isCSSVariable2(fallback)) {\n    return getVariableValue(fallback, element, depth + 1);\n  } else {\n    return fallback;\n  }\n}\nfunction resolveCSSVariables(visualElement2, _a, transitionEnd) {\n  var _b;\n  var target = __rest(_a, []);\n  var element = visualElement2.getInstance();\n  if (!(element instanceof HTMLElement))\n    return { target, transitionEnd };\n  if (transitionEnd) {\n    transitionEnd = __assign({}, transitionEnd);\n  }\n  visualElement2.forEachValue(function(value) {\n    var current2 = value.get();\n    if (!isCSSVariable2(current2))\n      return;\n    var resolved2 = getVariableValue(current2, element);\n    if (resolved2)\n      value.set(resolved2);\n  });\n  for (var key6 in target) {\n    var current = target[key6];\n    if (!isCSSVariable2(current))\n      continue;\n    var resolved = getVariableValue(current, element);\n    if (!resolved)\n      continue;\n    target[key6] = resolved;\n    if (transitionEnd)\n      (_b = transitionEnd[key6]) !== null && _b !== void 0 ? _b : transitionEnd[key6] = current;\n  }\n  return { target, transitionEnd };\n}\n\n// ../../node_modules/framer-motion/dist/es/render/dom/projection/default-scale-correctors.js\nfunction pixelsToPercent(pixels, axis) {\n  return pixels / (axis.max - axis.min) * 100;\n}\nfunction correctBorderRadius(latest, _layoutState, _a) {\n  var target = _a.target;\n  if (typeof latest === \"string\") {\n    if (px.test(latest)) {\n      latest = parseFloat(latest);\n    } else {\n      return latest;\n    }\n  }\n  var x = pixelsToPercent(latest, target.x);\n  var y = pixelsToPercent(latest, target.y);\n  return x + \"% \" + y + \"%\";\n}\nvar varToken = \"_$css\";\nfunction correctBoxShadow(latest, _a) {\n  var delta2 = _a.delta, treeScale = _a.treeScale;\n  var original = latest;\n  var containsCSSVariables = latest.includes(\"var(\");\n  var cssVariables = [];\n  if (containsCSSVariables) {\n    latest = latest.replace(cssVariableRegex, function(match) {\n      cssVariables.push(match);\n      return varToken;\n    });\n  }\n  var shadow = complex.parse(latest);\n  if (shadow.length > 5)\n    return original;\n  var template = complex.createTransformer(latest);\n  var offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n  var xScale = delta2.x.scale * treeScale.x;\n  var yScale = delta2.y.scale * treeScale.y;\n  shadow[0 + offset] /= xScale;\n  shadow[1 + offset] /= yScale;\n  var averageScale = mix(xScale, yScale, 0.5);\n  if (typeof shadow[2 + offset] === \"number\")\n    shadow[2 + offset] /= averageScale;\n  if (typeof shadow[3 + offset] === \"number\")\n    shadow[3 + offset] /= averageScale;\n  var output = template(shadow);\n  if (containsCSSVariables) {\n    var i_1 = 0;\n    output = output.replace(varToken, function() {\n      var cssVariable = cssVariables[i_1];\n      i_1++;\n      return cssVariable;\n    });\n  }\n  return output;\n}\nvar borderCorrectionDefinition = {\n  process: correctBorderRadius\n};\nvar defaultScaleCorrectors = {\n  borderRadius: __assign(__assign({}, borderCorrectionDefinition), { applyTo: [\n    \"borderTopLeftRadius\",\n    \"borderTopRightRadius\",\n    \"borderBottomLeftRadius\",\n    \"borderBottomRightRadius\"\n  ] }),\n  borderTopLeftRadius: borderCorrectionDefinition,\n  borderTopRightRadius: borderCorrectionDefinition,\n  borderBottomLeftRadius: borderCorrectionDefinition,\n  borderBottomRightRadius: borderCorrectionDefinition,\n  boxShadow: {\n    process: correctBoxShadow\n  }\n};\n\n// ../../node_modules/framer-motion/dist/es/motion/features/layout/Animate.js\nvar progressTarget = 1e3;\nvar Animate = function(_super) {\n  __extends(Animate2, _super);\n  function Animate2() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.frameTarget = axisBox();\n    _this.currentAnimationTarget = axisBox();\n    _this.isAnimating = {\n      x: false,\n      y: false\n    };\n    _this.stopAxisAnimation = {\n      x: void 0,\n      y: void 0\n    };\n    _this.isAnimatingTree = false;\n    _this.animate = function(target, origin, _a) {\n      if (_a === void 0) {\n        _a = {};\n      }\n      var originBox = _a.originBox, targetBox = _a.targetBox, visibilityAction = _a.visibilityAction, shouldStackAnimate = _a.shouldStackAnimate, onComplete = _a.onComplete, prevParent = _a.prevParent, config = __rest(_a, [\"originBox\", \"targetBox\", \"visibilityAction\", \"shouldStackAnimate\", \"onComplete\", \"prevParent\"]);\n      var _b = _this.props, visualElement2 = _b.visualElement, layout = _b.layout;\n      if (shouldStackAnimate === false) {\n        _this.isAnimatingTree = false;\n        return _this.safeToRemove();\n      }\n      if (_this.isAnimatingTree && shouldStackAnimate !== true) {\n        return;\n      } else if (shouldStackAnimate) {\n        _this.isAnimatingTree = true;\n      }\n      origin = originBox || origin;\n      target = targetBox || target;\n      var isRelative = false;\n      var projectionParent = visualElement2.getProjectionParent();\n      if (projectionParent) {\n        var prevParentViewportBox = projectionParent.prevViewportBox;\n        var parentLayout = projectionParent.getLayoutState().layout;\n        if (prevParent) {\n          if (targetBox) {\n            parentLayout = prevParent.getLayoutState().layout;\n          }\n          if (originBox && !checkIfParentHasChanged(prevParent, projectionParent) && prevParent.prevViewportBox) {\n            prevParentViewportBox = prevParent.prevViewportBox;\n          }\n        }\n        if (prevParentViewportBox && isProvidedCorrectDataForRelativeSharedLayout(prevParent, originBox, targetBox)) {\n          isRelative = true;\n          origin = calcRelativeOffset(prevParentViewportBox, origin);\n          target = calcRelativeOffset(parentLayout, target);\n        }\n      }\n      var boxHasMoved = hasMoved(origin, target);\n      var animations2 = eachAxis(function(axis) {\n        var _a2, _b2;\n        if (layout === \"position\") {\n          var targetLength = target[axis].max - target[axis].min;\n          origin[axis].max = origin[axis].min + targetLength;\n        }\n        if (visualElement2.projection.isTargetLocked) {\n          return;\n        } else if (visibilityAction !== void 0) {\n          visualElement2.setVisibility(visibilityAction === VisibilityAction.Show);\n        } else if (boxHasMoved) {\n          return _this.animateAxis(axis, target[axis], origin[axis], __assign(__assign({}, config), { isRelative }));\n        } else {\n          (_b2 = (_a2 = _this.stopAxisAnimation)[axis]) === null || _b2 === void 0 ? void 0 : _b2.call(_a2);\n          return visualElement2.setProjectionTargetAxis(axis, target[axis].min, target[axis].max, isRelative);\n        }\n      });\n      visualElement2.syncRender();\n      return Promise.all(animations2).then(function() {\n        _this.isAnimatingTree = false;\n        onComplete && onComplete();\n        visualElement2.notifyLayoutAnimationComplete();\n      });\n    };\n    return _this;\n  }\n  Animate2.prototype.componentDidMount = function() {\n    var _this = this;\n    var visualElement2 = this.props.visualElement;\n    visualElement2.animateMotionValue = startAnimation;\n    visualElement2.enableLayoutProjection();\n    this.unsubLayoutReady = visualElement2.onLayoutUpdate(this.animate);\n    visualElement2.layoutSafeToRemove = function() {\n      return _this.safeToRemove();\n    };\n    addScaleCorrection(defaultScaleCorrectors);\n  };\n  Animate2.prototype.componentWillUnmount = function() {\n    var _this = this;\n    this.unsubLayoutReady();\n    eachAxis(function(axis) {\n      var _a, _b;\n      return (_b = (_a = _this.stopAxisAnimation)[axis]) === null || _b === void 0 ? void 0 : _b.call(_a);\n    });\n  };\n  Animate2.prototype.animateAxis = function(axis, target, origin, _a) {\n    var _this = this;\n    var _b, _c;\n    var _d = _a === void 0 ? {} : _a, transition = _d.transition, isRelative = _d.isRelative;\n    if (this.isAnimating[axis] && axisIsEqual(target, this.currentAnimationTarget[axis])) {\n      return;\n    }\n    (_c = (_b = this.stopAxisAnimation)[axis]) === null || _c === void 0 ? void 0 : _c.call(_b);\n    this.isAnimating[axis] = true;\n    var visualElement2 = this.props.visualElement;\n    var frameTarget = this.frameTarget[axis];\n    var layoutProgress = visualElement2.getProjectionAnimationProgress()[axis];\n    layoutProgress.clearListeners();\n    layoutProgress.set(0);\n    layoutProgress.set(0);\n    var frame2 = function() {\n      var p = layoutProgress.get() / progressTarget;\n      tweenAxis(frameTarget, origin, target, p);\n      visualElement2.setProjectionTargetAxis(axis, frameTarget.min, frameTarget.max, isRelative);\n    };\n    frame2();\n    var unsubscribeProgress = layoutProgress.onChange(frame2);\n    this.stopAxisAnimation[axis] = function() {\n      _this.isAnimating[axis] = false;\n      layoutProgress.stop();\n      unsubscribeProgress();\n    };\n    this.currentAnimationTarget[axis] = target;\n    var layoutTransition = transition || visualElement2.getDefaultTransition() || defaultLayoutTransition;\n    var animation = startAnimation(axis === \"x\" ? \"layoutX\" : \"layoutY\", layoutProgress, progressTarget, layoutTransition && getValueTransition(layoutTransition, \"layout\")).then(this.stopAxisAnimation[axis]);\n    return animation;\n  };\n  Animate2.prototype.safeToRemove = function() {\n    var _a, _b;\n    (_b = (_a = this.props).safeToRemove) === null || _b === void 0 ? void 0 : _b.call(_a);\n  };\n  Animate2.prototype.render = function() {\n    return null;\n  };\n  return Animate2;\n}(react__WEBPACK_IMPORTED_MODULE_0__.Component);\nfunction AnimateLayoutContextProvider(props) {\n  var _a = __read(usePresence(), 2), safeToRemove = _a[1];\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Animate, __assign({}, props, { safeToRemove }));\n}\nfunction hasMoved(a2, b2) {\n  return !isZeroBox(a2) && !isZeroBox(b2) && (!axisIsEqual(a2.x, b2.x) || !axisIsEqual(a2.y, b2.y));\n}\nvar zeroAxis = { min: 0, max: 0 };\nfunction isZeroBox(a2) {\n  return axisIsEqual(a2.x, zeroAxis) && axisIsEqual(a2.y, zeroAxis);\n}\nfunction axisIsEqual(a2, b2) {\n  return a2.min === b2.min && a2.max === b2.max;\n}\nvar defaultLayoutTransition = {\n  duration: 0.45,\n  ease: [0.4, 0, 0.1, 1]\n};\nfunction isProvidedCorrectDataForRelativeSharedLayout(prevParent, originBox, targetBox) {\n  return prevParent || !prevParent && !(originBox || targetBox);\n}\n\n// ../../node_modules/framer-motion/dist/es/motion/features/layout/Measure.js\n\n\n// ../../node_modules/framer-motion/dist/es/context/SharedLayoutContext.js\n\n\n// ../../node_modules/framer-motion/dist/es/components/AnimateSharedLayout/utils/batcher.js\nvar defaultHandler = {\n  layoutReady: function(child) {\n    return child.notifyLayoutReady();\n  }\n};\nfunction createBatcher() {\n  var queue = new Set();\n  return {\n    add: function(child) {\n      return queue.add(child);\n    },\n    flush: function(_a) {\n      var _b = _a === void 0 ? defaultHandler : _a, layoutReady = _b.layoutReady, parent = _b.parent;\n      var order2 = Array.from(queue).sort(compareByDepth);\n      if (parent) {\n        withoutTreeTransform(parent, function() {\n          batchResetAndMeasure(order2);\n        });\n      } else {\n        batchResetAndMeasure(order2);\n      }\n      order2.forEach(layoutReady);\n      order2.forEach(function(child) {\n        if (child.isPresent)\n          child.presence = Presence.Present;\n      });\n      flushSync.preRender();\n      flushSync.render();\n      es_default.postRender(function() {\n        return order2.forEach(assignProjectionToSnapshot);\n      });\n      queue.clear();\n    }\n  };\n}\nfunction assignProjectionToSnapshot(child) {\n  child.prevViewportBox = child.projection.target;\n}\n\n// ../../node_modules/framer-motion/dist/es/context/SharedLayoutContext.js\nvar SharedLayoutContext = (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(createBatcher());\nvar FramerTreeLayoutContext = (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(createBatcher());\nfunction isSharedLayout(context) {\n  return !!context.forceUpdate;\n}\n\n// ../../node_modules/framer-motion/dist/es/motion/features/layout/Measure.js\nvar Measure = function(_super) {\n  __extends(Measure2, _super);\n  function Measure2() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Measure2.prototype.componentDidMount = function() {\n    var _a = this.props, syncLayout = _a.syncLayout, framerSyncLayout = _a.framerSyncLayout, visualElement2 = _a.visualElement;\n    isSharedLayout(syncLayout) && syncLayout.register(visualElement2);\n    isSharedLayout(framerSyncLayout) && framerSyncLayout.register(visualElement2);\n    visualElement2.onUnmount(function() {\n      if (isSharedLayout(syncLayout)) {\n        syncLayout.remove(visualElement2);\n      }\n      if (isSharedLayout(framerSyncLayout)) {\n        framerSyncLayout.remove(visualElement2);\n      }\n    });\n  };\n  Measure2.prototype.getSnapshotBeforeUpdate = function() {\n    var _a = this.props, syncLayout = _a.syncLayout, visualElement2 = _a.visualElement;\n    if (isSharedLayout(syncLayout)) {\n      syncLayout.syncUpdate();\n    } else {\n      snapshotViewportBox(visualElement2);\n      syncLayout.add(visualElement2);\n    }\n    return null;\n  };\n  Measure2.prototype.componentDidUpdate = function() {\n    var syncLayout = this.props.syncLayout;\n    if (!isSharedLayout(syncLayout))\n      syncLayout.flush();\n  };\n  Measure2.prototype.render = function() {\n    return null;\n  };\n  return Measure2;\n}((react__WEBPACK_IMPORTED_MODULE_0___default().Component));\nfunction MeasureContextProvider(props) {\n  var syncLayout = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(SharedLayoutContext);\n  var framerSyncLayout = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(FramerTreeLayoutContext);\n  return react__WEBPACK_IMPORTED_MODULE_0___default().createElement(Measure, __assign({}, props, { syncLayout, framerSyncLayout }));\n}\n\n// ../../node_modules/framer-motion/dist/es/motion/features/layout/index.js\nvar layoutAnimations = {\n  measureLayout: MeasureContextProvider,\n  layoutAnimation: AnimateLayoutContextProvider\n};\n\n// ../../node_modules/framer-motion/dist/es/render/utils/state.js\nvar createProjectionState = function() {\n  return {\n    isEnabled: false,\n    isTargetLocked: false,\n    target: axisBox(),\n    targetFinal: axisBox()\n  };\n};\nfunction createLayoutState() {\n  return {\n    isHydrated: false,\n    layout: axisBox(),\n    layoutCorrected: axisBox(),\n    treeScale: { x: 1, y: 1 },\n    delta: delta(),\n    deltaFinal: delta(),\n    deltaTransform: \"\"\n  };\n}\nvar zeroLayout = createLayoutState();\n\n// ../../node_modules/framer-motion/dist/es/render/html/utils/build-projection-transform.js\nfunction buildLayoutProjectionTransform(_a, treeScale, latestTransform) {\n  var x = _a.x, y = _a.y;\n  var xTranslate = x.translate / treeScale.x;\n  var yTranslate = y.translate / treeScale.y;\n  var transform2 = \"translate3d(\" + xTranslate + \"px, \" + yTranslate + \"px, 0) \";\n  if (latestTransform) {\n    var rotate = latestTransform.rotate, rotateX = latestTransform.rotateX, rotateY = latestTransform.rotateY;\n    if (rotate)\n      transform2 += \"rotate(\" + rotate + \") \";\n    if (rotateX)\n      transform2 += \"rotateX(\" + rotateX + \") \";\n    if (rotateY)\n      transform2 += \"rotateY(\" + rotateY + \") \";\n  }\n  transform2 += \"scale(\" + x.scale + \", \" + y.scale + \")\";\n  return !latestTransform && transform2 === identityProjection ? \"\" : transform2;\n}\nfunction buildLayoutProjectionTransformOrigin(_a) {\n  var deltaFinal = _a.deltaFinal;\n  return deltaFinal.x.origin * 100 + \"% \" + deltaFinal.y.origin * 100 + \"% 0\";\n}\nvar identityProjection = buildLayoutProjectionTransform(zeroLayout.delta, zeroLayout.treeScale, { x: 1, y: 1 });\n\n// ../../node_modules/framer-motion/dist/es/render/utils/lifecycles.js\nvar names = [\n  \"LayoutMeasure\",\n  \"BeforeLayoutMeasure\",\n  \"LayoutUpdate\",\n  \"ViewportBoxUpdate\",\n  \"Update\",\n  \"Render\",\n  \"AnimationComplete\",\n  \"LayoutAnimationComplete\",\n  \"AnimationStart\",\n  \"SetAxisTarget\",\n  \"Unmount\"\n];\nfunction createLifecycles() {\n  var managers = names.map(function() {\n    return new SubscriptionManager();\n  });\n  var propSubscriptions = {};\n  var lifecycles = {\n    clearAllListeners: function() {\n      return managers.forEach(function(manager) {\n        return manager.clear();\n      });\n    },\n    updatePropListeners: function(props) {\n      return names.forEach(function(name) {\n        var _a;\n        (_a = propSubscriptions[name]) === null || _a === void 0 ? void 0 : _a.call(propSubscriptions);\n        var on = \"on\" + name;\n        var propListener = props[on];\n        if (propListener) {\n          propSubscriptions[name] = lifecycles[on](propListener);\n        }\n      });\n    }\n  };\n  managers.forEach(function(manager, i) {\n    lifecycles[\"on\" + names[i]] = function(handler) {\n      return manager.add(handler);\n    };\n    lifecycles[\"notify\" + names[i]] = function() {\n      var args = [];\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n      return manager.notify.apply(manager, __spreadArray([], __read(args)));\n    };\n  });\n  return lifecycles;\n}\n\n// ../../node_modules/framer-motion/dist/es/render/utils/motion-values.js\nfunction updateMotionValuesFromProps(element, next, prev) {\n  var _a;\n  for (var key6 in next) {\n    var nextValue = next[key6];\n    var prevValue = prev[key6];\n    if (isMotionValue(nextValue)) {\n      element.addValue(key6, nextValue);\n    } else if (isMotionValue(prevValue)) {\n      element.addValue(key6, motionValue(nextValue));\n    } else if (prevValue !== nextValue) {\n      if (element.hasValue(key6)) {\n        var existingValue = element.getValue(key6);\n        !existingValue.hasAnimated && existingValue.set(nextValue);\n      } else {\n        element.addValue(key6, motionValue((_a = element.getStaticValue(key6)) !== null && _a !== void 0 ? _a : nextValue));\n      }\n    }\n  }\n  for (var key6 in prev) {\n    if (next[key6] === void 0)\n      element.removeValue(key6);\n  }\n  return next;\n}\n\n// ../../node_modules/framer-motion/dist/es/render/utils/projection.js\nfunction updateLayoutDeltas(_a, _b, treePath, transformOrigin) {\n  var delta2 = _a.delta, layout = _a.layout, layoutCorrected = _a.layoutCorrected, treeScale = _a.treeScale;\n  var target = _b.target;\n  resetBox(layoutCorrected, layout);\n  applyTreeDeltas(layoutCorrected, treeScale, treePath);\n  updateBoxDelta(delta2, layoutCorrected, target, transformOrigin);\n}\n\n// ../../node_modules/framer-motion/dist/es/render/utils/flat-tree.js\nvar FlatTree = function() {\n  function FlatTree2() {\n    this.children = [];\n    this.isDirty = false;\n  }\n  FlatTree2.prototype.add = function(child) {\n    addUniqueItem(this.children, child);\n    this.isDirty = true;\n  };\n  FlatTree2.prototype.remove = function(child) {\n    removeItem(this.children, child);\n    this.isDirty = true;\n  };\n  FlatTree2.prototype.forEach = function(callback) {\n    this.isDirty && this.children.sort(compareByDepth);\n    this.isDirty = false;\n    this.children.forEach(callback);\n  };\n  return FlatTree2;\n}();\n\n// ../../node_modules/framer-motion/dist/es/render/dom/projection/relative-set.js\nfunction setCurrentViewportBox(visualElement2) {\n  var projectionParent = visualElement2.getProjectionParent();\n  if (!projectionParent) {\n    visualElement2.rebaseProjectionTarget();\n    return;\n  }\n  var relativeOffset = calcRelativeOffset(projectionParent.getLayoutState().layout, visualElement2.getLayoutState().layout);\n  eachAxis(function(axis) {\n    visualElement2.setProjectionTargetAxis(axis, relativeOffset[axis].min, relativeOffset[axis].max, true);\n  });\n}\n\n// ../../node_modules/framer-motion/dist/es/render/index.js\nvar visualElement = function(_a) {\n  var _b = _a.treeType, treeType = _b === void 0 ? \"\" : _b, build = _a.build, getBaseTarget = _a.getBaseTarget, makeTargetAnimatable = _a.makeTargetAnimatable, measureViewportBox = _a.measureViewportBox, renderInstance = _a.render, readValueFromInstance = _a.readValueFromInstance, resetTransform = _a.resetTransform, restoreTransform = _a.restoreTransform, removeValueFromRenderState = _a.removeValueFromRenderState, sortNodePosition = _a.sortNodePosition, scrapeMotionValuesFromProps3 = _a.scrapeMotionValuesFromProps;\n  return function(_a2, options) {\n    var parent = _a2.parent, props = _a2.props, presenceId2 = _a2.presenceId, blockInitialAnimation = _a2.blockInitialAnimation, visualState = _a2.visualState;\n    if (options === void 0) {\n      options = {};\n    }\n    var latestValues = visualState.latestValues, renderState = visualState.renderState;\n    var instance;\n    var lifecycles = createLifecycles();\n    var projection = createProjectionState();\n    var projectionParent;\n    var leadProjection = projection;\n    var leadLatestValues = latestValues;\n    var unsubscribeFromLeadVisualElement;\n    var layoutState = createLayoutState();\n    var crossfader;\n    var hasViewportBoxUpdated = false;\n    var values = new Map();\n    var valueSubscriptions = new Map();\n    var prevMotionValues = {};\n    var projectionTargetProgress;\n    var baseTarget = __assign({}, latestValues);\n    var removeFromVariantTree;\n    function render() {\n      if (!instance)\n        return;\n      if (element.isProjectionReady()) {\n        applyBoxTransforms(leadProjection.targetFinal, leadProjection.target, leadLatestValues);\n        updateBoxDelta(layoutState.deltaFinal, layoutState.layoutCorrected, leadProjection.targetFinal, latestValues);\n      }\n      triggerBuild();\n      renderInstance(instance, renderState);\n    }\n    function triggerBuild() {\n      var valuesToRender = latestValues;\n      if (crossfader && crossfader.isActive()) {\n        var crossfadedValues = crossfader.getCrossfadeState(element);\n        if (crossfadedValues)\n          valuesToRender = crossfadedValues;\n      }\n      build(element, renderState, valuesToRender, leadProjection, layoutState, options, props);\n    }\n    function update() {\n      lifecycles.notifyUpdate(latestValues);\n    }\n    function updateLayoutProjection() {\n      var delta2 = layoutState.delta, treeScale = layoutState.treeScale;\n      var prevTreeScaleX = treeScale.x;\n      var prevTreeScaleY = treeScale.x;\n      var prevDeltaTransform = layoutState.deltaTransform;\n      updateLayoutDeltas(layoutState, leadProjection, element.path, latestValues);\n      hasViewportBoxUpdated && element.notifyViewportBoxUpdate(leadProjection.target, delta2);\n      hasViewportBoxUpdated = false;\n      var deltaTransform = buildLayoutProjectionTransform(delta2, treeScale);\n      if (deltaTransform !== prevDeltaTransform || prevTreeScaleX !== treeScale.x || prevTreeScaleY !== treeScale.y) {\n        element.scheduleRender();\n      }\n      layoutState.deltaTransform = deltaTransform;\n    }\n    function updateTreeLayoutProjection() {\n      element.layoutTree.forEach(fireUpdateLayoutProjection);\n    }\n    function bindToMotionValue(key7, value2) {\n      var removeOnChange = value2.onChange(function(latestValue) {\n        latestValues[key7] = latestValue;\n        props.onUpdate && es_default.update(update, false, true);\n      });\n      var removeOnRenderRequest = value2.onRenderRequest(element.scheduleRender);\n      valueSubscriptions.set(key7, function() {\n        removeOnChange();\n        removeOnRenderRequest();\n      });\n    }\n    var initialMotionValues = scrapeMotionValuesFromProps3(props);\n    for (var key6 in initialMotionValues) {\n      var value = initialMotionValues[key6];\n      if (latestValues[key6] !== void 0 && isMotionValue(value)) {\n        value.set(latestValues[key6], false);\n      }\n    }\n    var isControllingVariants = checkIfControllingVariants(props);\n    var isVariantNode = checkIfVariantNode(props);\n    var element = __assign(__assign({\n      treeType,\n      current: null,\n      depth: parent ? parent.depth + 1 : 0,\n      parent,\n      children: new Set(),\n      path: parent ? __spreadArray(__spreadArray([], __read(parent.path)), [parent]) : [],\n      layoutTree: parent ? parent.layoutTree : new FlatTree(),\n      presenceId: presenceId2,\n      projection,\n      variantChildren: isVariantNode ? new Set() : void 0,\n      isVisible: void 0,\n      manuallyAnimateOnMount: Boolean(parent === null || parent === void 0 ? void 0 : parent.isMounted()),\n      blockInitialAnimation,\n      isHoverEventsEnabled: true,\n      isMounted: function() {\n        return Boolean(instance);\n      },\n      mount: function(newInstance) {\n        instance = element.current = newInstance;\n        element.pointTo(element);\n        if (isVariantNode && parent && !isControllingVariants) {\n          removeFromVariantTree = parent === null || parent === void 0 ? void 0 : parent.addVariantChild(element);\n        }\n        parent === null || parent === void 0 ? void 0 : parent.children.add(element);\n      },\n      unmount: function() {\n        cancelSync.update(update);\n        cancelSync.render(render);\n        cancelSync.preRender(element.updateLayoutProjection);\n        valueSubscriptions.forEach(function(remove2) {\n          return remove2();\n        });\n        element.stopLayoutAnimation();\n        element.layoutTree.remove(element);\n        removeFromVariantTree === null || removeFromVariantTree === void 0 ? void 0 : removeFromVariantTree();\n        parent === null || parent === void 0 ? void 0 : parent.children.delete(element);\n        unsubscribeFromLeadVisualElement === null || unsubscribeFromLeadVisualElement === void 0 ? void 0 : unsubscribeFromLeadVisualElement();\n        lifecycles.clearAllListeners();\n      },\n      addVariantChild: function(child) {\n        var _a3;\n        var closestVariantNode = element.getClosestVariantNode();\n        if (closestVariantNode) {\n          (_a3 = closestVariantNode.variantChildren) === null || _a3 === void 0 ? void 0 : _a3.add(child);\n          return function() {\n            return closestVariantNode.variantChildren.delete(child);\n          };\n        }\n      },\n      sortNodePosition: function(other) {\n        if (!sortNodePosition || treeType !== other.treeType)\n          return 0;\n        return sortNodePosition(element.getInstance(), other.getInstance());\n      },\n      getClosestVariantNode: function() {\n        return isVariantNode ? element : parent === null || parent === void 0 ? void 0 : parent.getClosestVariantNode();\n      },\n      scheduleUpdateLayoutProjection: parent ? parent.scheduleUpdateLayoutProjection : function() {\n        return es_default.preRender(element.updateTreeLayoutProjection, false, true);\n      },\n      getLayoutId: function() {\n        return props.layoutId;\n      },\n      getInstance: function() {\n        return instance;\n      },\n      getStaticValue: function(key7) {\n        return latestValues[key7];\n      },\n      setStaticValue: function(key7, value2) {\n        return latestValues[key7] = value2;\n      },\n      getLatestValues: function() {\n        return latestValues;\n      },\n      setVisibility: function(visibility) {\n        if (element.isVisible === visibility)\n          return;\n        element.isVisible = visibility;\n        element.scheduleRender();\n      },\n      makeTargetAnimatable: function(target, canMutate) {\n        if (canMutate === void 0) {\n          canMutate = true;\n        }\n        return makeTargetAnimatable(element, target, props, canMutate);\n      },\n      suspendHoverEvents: function() {\n        element.isHoverEventsEnabled = false;\n        es_default.postRender(function() {\n          return setTimeout(function() {\n            return element.isHoverEventsEnabled = true;\n          }, 10);\n        });\n      },\n      addValue: function(key7, value2) {\n        if (element.hasValue(key7))\n          element.removeValue(key7);\n        values.set(key7, value2);\n        latestValues[key7] = value2.get();\n        bindToMotionValue(key7, value2);\n      },\n      removeValue: function(key7) {\n        var _a3;\n        values.delete(key7);\n        (_a3 = valueSubscriptions.get(key7)) === null || _a3 === void 0 ? void 0 : _a3();\n        valueSubscriptions.delete(key7);\n        delete latestValues[key7];\n        removeValueFromRenderState(key7, renderState);\n      },\n      hasValue: function(key7) {\n        return values.has(key7);\n      },\n      getValue: function(key7, defaultValue) {\n        var value2 = values.get(key7);\n        if (value2 === void 0 && defaultValue !== void 0) {\n          value2 = motionValue(defaultValue);\n          element.addValue(key7, value2);\n        }\n        return value2;\n      },\n      forEachValue: function(callback) {\n        return values.forEach(callback);\n      },\n      readValue: function(key7) {\n        var _a3;\n        return (_a3 = latestValues[key7]) !== null && _a3 !== void 0 ? _a3 : readValueFromInstance(instance, key7, options);\n      },\n      setBaseTarget: function(key7, value2) {\n        baseTarget[key7] = value2;\n      },\n      getBaseTarget: function(key7) {\n        if (getBaseTarget) {\n          var target = getBaseTarget(props, key7);\n          if (target !== void 0 && !isMotionValue(target))\n            return target;\n        }\n        return baseTarget[key7];\n      }\n    }, lifecycles), {\n      build: function() {\n        triggerBuild();\n        return renderState;\n      },\n      scheduleRender: function() {\n        es_default.render(render, false, true);\n      },\n      syncRender: render,\n      setProps: function(newProps) {\n        props = newProps;\n        lifecycles.updatePropListeners(newProps);\n        prevMotionValues = updateMotionValuesFromProps(element, scrapeMotionValuesFromProps3(props), prevMotionValues);\n      },\n      getProps: function() {\n        return props;\n      },\n      getVariant: function(name) {\n        var _a3;\n        return (_a3 = props.variants) === null || _a3 === void 0 ? void 0 : _a3[name];\n      },\n      getDefaultTransition: function() {\n        return props.transition;\n      },\n      getVariantContext: function(startAtParent) {\n        if (startAtParent === void 0) {\n          startAtParent = false;\n        }\n        if (startAtParent)\n          return parent === null || parent === void 0 ? void 0 : parent.getVariantContext();\n        if (!isControllingVariants) {\n          var context_1 = (parent === null || parent === void 0 ? void 0 : parent.getVariantContext()) || {};\n          if (props.initial !== void 0) {\n            context_1.initial = props.initial;\n          }\n          return context_1;\n        }\n        var context = {};\n        for (var i = 0; i < numVariantProps; i++) {\n          var name_1 = variantProps[i];\n          var prop = props[name_1];\n          if (isVariantLabel(prop) || prop === false) {\n            context[name_1] = prop;\n          }\n        }\n        return context;\n      },\n      enableLayoutProjection: function() {\n        projection.isEnabled = true;\n        element.layoutTree.add(element);\n      },\n      lockProjectionTarget: function() {\n        projection.isTargetLocked = true;\n      },\n      unlockProjectionTarget: function() {\n        element.stopLayoutAnimation();\n        projection.isTargetLocked = false;\n      },\n      getLayoutState: function() {\n        return layoutState;\n      },\n      setCrossfader: function(newCrossfader) {\n        crossfader = newCrossfader;\n      },\n      isProjectionReady: function() {\n        return projection.isEnabled && layoutState.isHydrated;\n      },\n      startLayoutAnimation: function(axis, transition, isRelative) {\n        if (isRelative === void 0) {\n          isRelative = false;\n        }\n        var progress2 = element.getProjectionAnimationProgress()[axis];\n        var _a3 = isRelative ? projection.relativeTarget[axis] : projection.target[axis], min = _a3.min, max = _a3.max;\n        var length = max - min;\n        progress2.clearListeners();\n        progress2.set(min);\n        progress2.set(min);\n        progress2.onChange(function(v) {\n          element.setProjectionTargetAxis(axis, v, v + length, isRelative);\n        });\n        return element.animateMotionValue(axis, progress2, 0, transition);\n      },\n      stopLayoutAnimation: function() {\n        eachAxis(function(axis) {\n          return element.getProjectionAnimationProgress()[axis].stop();\n        });\n      },\n      measureViewportBox: function(withTransform) {\n        if (withTransform === void 0) {\n          withTransform = true;\n        }\n        var viewportBox = measureViewportBox(instance, options);\n        if (!withTransform)\n          removeBoxTransforms(viewportBox, latestValues);\n        return viewportBox;\n      },\n      getProjectionAnimationProgress: function() {\n        projectionTargetProgress || (projectionTargetProgress = {\n          x: motionValue(0),\n          y: motionValue(0)\n        });\n        return projectionTargetProgress;\n      },\n      setProjectionTargetAxis: function(axis, min, max, isRelative) {\n        if (isRelative === void 0) {\n          isRelative = false;\n        }\n        var target;\n        if (isRelative) {\n          if (!projection.relativeTarget) {\n            projection.relativeTarget = axisBox();\n          }\n          target = projection.relativeTarget[axis];\n        } else {\n          projection.relativeTarget = void 0;\n          target = projection.target[axis];\n        }\n        target.min = min;\n        target.max = max;\n        hasViewportBoxUpdated = true;\n        lifecycles.notifySetAxisTarget();\n      },\n      rebaseProjectionTarget: function(force, box) {\n        if (box === void 0) {\n          box = layoutState.layout;\n        }\n        var _a3 = element.getProjectionAnimationProgress(), x = _a3.x, y = _a3.y;\n        var shouldRebase = !projection.relativeTarget && !projection.isTargetLocked && !x.isAnimating() && !y.isAnimating();\n        if (force || shouldRebase) {\n          eachAxis(function(axis) {\n            var _a4 = box[axis], min = _a4.min, max = _a4.max;\n            element.setProjectionTargetAxis(axis, min, max);\n          });\n        }\n      },\n      notifyLayoutReady: function(config) {\n        setCurrentViewportBox(element);\n        element.notifyLayoutUpdate(layoutState.layout, element.prevViewportBox || layoutState.layout, config);\n      },\n      resetTransform: function() {\n        return resetTransform(element, instance, props);\n      },\n      restoreTransform: function() {\n        return restoreTransform(instance, renderState);\n      },\n      updateLayoutProjection,\n      updateTreeLayoutProjection: function() {\n        element.layoutTree.forEach(fireResolveRelativeTargetBox);\n        es_default.preRender(updateTreeLayoutProjection, false, true);\n      },\n      getProjectionParent: function() {\n        if (projectionParent === void 0) {\n          var foundParent = false;\n          for (var i = element.path.length - 1; i >= 0; i--) {\n            var ancestor = element.path[i];\n            if (ancestor.projection.isEnabled) {\n              foundParent = ancestor;\n              break;\n            }\n          }\n          projectionParent = foundParent;\n        }\n        return projectionParent;\n      },\n      resolveRelativeTargetBox: function() {\n        var relativeParent = element.getProjectionParent();\n        if (!projection.relativeTarget || !relativeParent)\n          return;\n        calcRelativeBox(projection, relativeParent.projection);\n        if (isDraggable(relativeParent)) {\n          var target = projection.target;\n          applyBoxTransforms(target, target, relativeParent.getLatestValues());\n        }\n      },\n      shouldResetTransform: function() {\n        return Boolean(props._layoutResetTransform);\n      },\n      pointTo: function(newLead) {\n        leadProjection = newLead.projection;\n        leadLatestValues = newLead.getLatestValues();\n        unsubscribeFromLeadVisualElement === null || unsubscribeFromLeadVisualElement === void 0 ? void 0 : unsubscribeFromLeadVisualElement();\n        unsubscribeFromLeadVisualElement = pipe(newLead.onSetAxisTarget(element.scheduleUpdateLayoutProjection), newLead.onLayoutAnimationComplete(function() {\n          var _a3;\n          if (element.isPresent) {\n            element.presence = Presence.Present;\n          } else {\n            (_a3 = element.layoutSafeToRemove) === null || _a3 === void 0 ? void 0 : _a3.call(element);\n          }\n        }));\n      },\n      isPresent: true,\n      presence: Presence.Entering\n    });\n    return element;\n  };\n};\nfunction fireResolveRelativeTargetBox(child) {\n  child.resolveRelativeTargetBox();\n}\nfunction fireUpdateLayoutProjection(child) {\n  child.updateLayoutProjection();\n}\nvar variantProps = __spreadArray([\"initial\"], __read(variantPriorityOrder));\nvar numVariantProps = variantProps.length;\n\n// ../../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.js\nvar positionalKeys = new Set([\n  \"width\",\n  \"height\",\n  \"top\",\n  \"left\",\n  \"right\",\n  \"bottom\",\n  \"x\",\n  \"y\"\n]);\nvar isPositionalKey = function(key6) {\n  return positionalKeys.has(key6);\n};\nvar hasPositionalKey = function(target) {\n  return Object.keys(target).some(isPositionalKey);\n};\nvar setAndResetVelocity = function(value, to) {\n  value.set(to, false);\n  value.set(to);\n};\nvar isNumOrPxType = function(v) {\n  return v === number || v === px;\n};\nvar BoundingBoxDimension;\n(function(BoundingBoxDimension2) {\n  BoundingBoxDimension2[\"width\"] = \"width\";\n  BoundingBoxDimension2[\"height\"] = \"height\";\n  BoundingBoxDimension2[\"left\"] = \"left\";\n  BoundingBoxDimension2[\"right\"] = \"right\";\n  BoundingBoxDimension2[\"top\"] = \"top\";\n  BoundingBoxDimension2[\"bottom\"] = \"bottom\";\n})(BoundingBoxDimension || (BoundingBoxDimension = {}));\nvar getPosFromMatrix = function(matrix, pos) {\n  return parseFloat(matrix.split(\", \")[pos]);\n};\nvar getTranslateFromMatrix = function(pos2, pos3) {\n  return function(_bbox, _a) {\n    var transform2 = _a.transform;\n    if (transform2 === \"none\" || !transform2)\n      return 0;\n    var matrix3d = transform2.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n      return getPosFromMatrix(matrix3d[1], pos3);\n    } else {\n      var matrix = transform2.match(/^matrix\\((.+)\\)$/);\n      if (matrix) {\n        return getPosFromMatrix(matrix[1], pos2);\n      } else {\n        return 0;\n      }\n    }\n  };\n};\nvar transformKeys = new Set([\"x\", \"y\", \"z\"]);\nvar nonTranslationalTransformKeys = transformProps.filter(function(key6) {\n  return !transformKeys.has(key6);\n});\nfunction removeNonTranslationalTransform(visualElement2) {\n  var removedTransforms = [];\n  nonTranslationalTransformKeys.forEach(function(key6) {\n    var value = visualElement2.getValue(key6);\n    if (value !== void 0) {\n      removedTransforms.push([key6, value.get()]);\n      value.set(key6.startsWith(\"scale\") ? 1 : 0);\n    }\n  });\n  if (removedTransforms.length)\n    visualElement2.syncRender();\n  return removedTransforms;\n}\nvar positionalValues = {\n  width: function(_a) {\n    var x = _a.x;\n    return x.max - x.min;\n  },\n  height: function(_a) {\n    var y = _a.y;\n    return y.max - y.min;\n  },\n  top: function(_bbox, _a) {\n    var top = _a.top;\n    return parseFloat(top);\n  },\n  left: function(_bbox, _a) {\n    var left = _a.left;\n    return parseFloat(left);\n  },\n  bottom: function(_a, _b) {\n    var y = _a.y;\n    var top = _b.top;\n    return parseFloat(top) + (y.max - y.min);\n  },\n  right: function(_a, _b) {\n    var x = _a.x;\n    var left = _b.left;\n    return parseFloat(left) + (x.max - x.min);\n  },\n  x: getTranslateFromMatrix(4, 13),\n  y: getTranslateFromMatrix(5, 14)\n};\nvar convertChangedValueTypes = function(target, visualElement2, changedKeys) {\n  var originBbox = visualElement2.measureViewportBox();\n  var element = visualElement2.getInstance();\n  var elementComputedStyle = getComputedStyle(element);\n  var display = elementComputedStyle.display, top = elementComputedStyle.top, left = elementComputedStyle.left, bottom = elementComputedStyle.bottom, right = elementComputedStyle.right, transform2 = elementComputedStyle.transform;\n  var originComputedStyle = { top, left, bottom, right, transform: transform2 };\n  if (display === \"none\") {\n    visualElement2.setStaticValue(\"display\", target.display || \"block\");\n  }\n  visualElement2.syncRender();\n  var targetBbox = visualElement2.measureViewportBox();\n  changedKeys.forEach(function(key6) {\n    var value = visualElement2.getValue(key6);\n    setAndResetVelocity(value, positionalValues[key6](originBbox, originComputedStyle));\n    target[key6] = positionalValues[key6](targetBbox, elementComputedStyle);\n  });\n  return target;\n};\nvar checkAndConvertChangedValueTypes = function(visualElement2, target, origin, transitionEnd) {\n  if (origin === void 0) {\n    origin = {};\n  }\n  if (transitionEnd === void 0) {\n    transitionEnd = {};\n  }\n  target = __assign({}, target);\n  transitionEnd = __assign({}, transitionEnd);\n  var targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n  var removedTransformValues = [];\n  var hasAttemptedToRemoveTransformValues = false;\n  var changedValueTypeKeys = [];\n  targetPositionalKeys.forEach(function(key6) {\n    var value = visualElement2.getValue(key6);\n    if (!visualElement2.hasValue(key6))\n      return;\n    var from = origin[key6];\n    var to = target[key6];\n    var fromType = findDimensionValueType(from);\n    var toType;\n    if (isKeyframesTarget(to)) {\n      var numKeyframes = to.length;\n      for (var i = to[0] === null ? 1 : 0; i < numKeyframes; i++) {\n        if (!toType) {\n          toType = findDimensionValueType(to[i]);\n          invariant(toType === fromType || isNumOrPxType(fromType) && isNumOrPxType(toType), \"Keyframes must be of the same dimension as the current value\");\n        } else {\n          invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n        }\n      }\n    } else {\n      toType = findDimensionValueType(to);\n    }\n    if (fromType !== toType) {\n      if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n        var current = value.get();\n        if (typeof current === \"string\") {\n          value.set(parseFloat(current));\n        }\n        if (typeof to === \"string\") {\n          target[key6] = parseFloat(to);\n        } else if (Array.isArray(to) && toType === px) {\n          target[key6] = to.map(parseFloat);\n        }\n      } else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) && (toType === null || toType === void 0 ? void 0 : toType.transform) && (from === 0 || to === 0)) {\n        if (from === 0) {\n          value.set(toType.transform(from));\n        } else {\n          target[key6] = fromType.transform(to);\n        }\n      } else {\n        if (!hasAttemptedToRemoveTransformValues) {\n          removedTransformValues = removeNonTranslationalTransform(visualElement2);\n          hasAttemptedToRemoveTransformValues = true;\n        }\n        changedValueTypeKeys.push(key6);\n        transitionEnd[key6] = transitionEnd[key6] !== void 0 ? transitionEnd[key6] : target[key6];\n        setAndResetVelocity(value, to);\n      }\n    }\n  });\n  if (changedValueTypeKeys.length) {\n    var convertedTarget = convertChangedValueTypes(target, visualElement2, changedValueTypeKeys);\n    if (removedTransformValues.length) {\n      removedTransformValues.forEach(function(_a) {\n        var _b = __read(_a, 2), key6 = _b[0], value = _b[1];\n        visualElement2.getValue(key6).set(value);\n      });\n    }\n    visualElement2.syncRender();\n    return { target: convertedTarget, transitionEnd };\n  } else {\n    return { target, transitionEnd };\n  }\n};\nfunction unitConversion(visualElement2, target, origin, transitionEnd) {\n  return hasPositionalKey(target) ? checkAndConvertChangedValueTypes(visualElement2, target, origin, transitionEnd) : { target, transitionEnd };\n}\n\n// ../../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.js\nvar parseDomVariant = function(visualElement2, target, origin, transitionEnd) {\n  var resolved = resolveCSSVariables(visualElement2, target, transitionEnd);\n  target = resolved.target;\n  transitionEnd = resolved.transitionEnd;\n  return unitConversion(visualElement2, target, origin, transitionEnd);\n};\n\n// ../../node_modules/framer-motion/dist/es/render/html/visual-element.js\nfunction getComputedStyle2(element) {\n  return window.getComputedStyle(element);\n}\nvar htmlConfig = {\n  treeType: \"dom\",\n  readValueFromInstance: function(domElement, key6) {\n    var _a;\n    if (isTransformProp(key6)) {\n      var defaultType = getDefaultValueType(key6);\n      return (_a = defaultType === null || defaultType === void 0 ? void 0 : defaultType.default) !== null && _a !== void 0 ? _a : 0;\n    } else {\n      var computedStyle = getComputedStyle2(domElement);\n      return (isCSSVariable(key6) ? computedStyle.getPropertyValue(key6) : computedStyle[key6]) || 0;\n    }\n  },\n  sortNodePosition: function(a2, b2) {\n    return a2.compareDocumentPosition(b2) & 2 ? 1 : -1;\n  },\n  getBaseTarget: function(props, key6) {\n    var _a, _b;\n    var defaultType = getDefaultValueType(key6);\n    return (_b = (_a = props.style) === null || _a === void 0 ? void 0 : _a[key6]) !== null && _b !== void 0 ? _b : defaultType === null || defaultType === void 0 ? void 0 : defaultType.default;\n  },\n  measureViewportBox: function(element, _a) {\n    var transformPagePoint = _a.transformPagePoint;\n    return getBoundingBox(element, transformPagePoint);\n  },\n  resetTransform: function(element, domElement, props) {\n    element.suspendHoverEvents();\n    var transformTemplate2 = props.transformTemplate;\n    domElement.style.transform = transformTemplate2 ? transformTemplate2({}, \"\") : \"none\";\n    element.scheduleRender();\n  },\n  restoreTransform: function(instance, mutableState) {\n    instance.style.transform = mutableState.style.transform;\n  },\n  removeValueFromRenderState: function(key6, _a) {\n    var vars = _a.vars, style = _a.style;\n    delete vars[key6];\n    delete style[key6];\n  },\n  makeTargetAnimatable: function(element, _a, _b, isMounted) {\n    var transformValues3 = _b.transformValues;\n    if (isMounted === void 0) {\n      isMounted = true;\n    }\n    var transition = _a.transition, transitionEnd = _a.transitionEnd, target = __rest(_a, [\"transition\", \"transitionEnd\"]);\n    var origin = getOrigin(target, transition || {}, element);\n    if (transformValues3) {\n      if (transitionEnd)\n        transitionEnd = transformValues3(transitionEnd);\n      if (target)\n        target = transformValues3(target);\n      if (origin)\n        origin = transformValues3(origin);\n    }\n    if (isMounted) {\n      checkTargetForNewValues(element, target, origin);\n      var parsed = parseDomVariant(element, target, origin, transitionEnd);\n      transitionEnd = parsed.transitionEnd;\n      target = parsed.target;\n    }\n    return __assign({\n      transition,\n      transitionEnd\n    }, target);\n  },\n  scrapeMotionValuesFromProps,\n  build: function(element, renderState, latestValues, projection, layoutState, options, props) {\n    if (element.isVisible !== void 0) {\n      renderState.style.visibility = element.isVisible ? \"visible\" : \"hidden\";\n    }\n    var isProjectionTranform = projection.isEnabled && layoutState.isHydrated;\n    buildHTMLStyles(renderState, latestValues, projection, layoutState, options, props.transformTemplate, isProjectionTranform ? buildLayoutProjectionTransform : void 0, isProjectionTranform ? buildLayoutProjectionTransformOrigin : void 0);\n  },\n  render: renderHTML\n};\nvar htmlVisualElement = visualElement(htmlConfig);\n\n// ../../node_modules/framer-motion/dist/es/render/svg/visual-element.js\nvar svgVisualElement = visualElement(__assign(__assign({}, htmlConfig), {\n  getBaseTarget: function(props, key6) {\n    return props[key6];\n  },\n  readValueFromInstance: function(domElement, key6) {\n    var _a;\n    if (isTransformProp(key6)) {\n      return ((_a = getDefaultValueType(key6)) === null || _a === void 0 ? void 0 : _a.default) || 0;\n    }\n    key6 = !camelCaseAttributes.has(key6) ? camelToDash(key6) : key6;\n    return domElement.getAttribute(key6);\n  },\n  scrapeMotionValuesFromProps: scrapeMotionValuesFromProps2,\n  build: function(_element, renderState, latestValues, projection, layoutState, options, props) {\n    var isProjectionTranform = projection.isEnabled && layoutState.isHydrated;\n    buildSVGAttrs(renderState, latestValues, projection, layoutState, options, props.transformTemplate, isProjectionTranform ? buildLayoutProjectionTransform : void 0, isProjectionTranform ? buildLayoutProjectionTransformOrigin : void 0);\n  },\n  render: renderSVG\n}));\n\n// ../../node_modules/framer-motion/dist/es/render/dom/create-visual-element.js\nvar createDomVisualElement = function(Component19, options) {\n  return isSVGComponent(Component19) ? svgVisualElement(options, { enableHardwareAcceleration: false }) : htmlVisualElement(options, { enableHardwareAcceleration: true });\n};\n\n// ../../node_modules/framer-motion/dist/es/render/dom/motion.js\nvar featureBundle = __assign(__assign(__assign(__assign({}, animations), gestureAnimations), drag), layoutAnimations);\nvar motion = /* @__PURE__ */ createMotionProxy(function(Component19, config) {\n  return createDomMotionConfig(Component19, config, featureBundle, createDomVisualElement);\n});\nfunction createDomMotionComponent(key6) {\n  return createMotionComponent(createDomMotionConfig(key6, { forwardMotionProps: false }, featureBundle, createDomVisualElement));\n}\n\n// ../../node_modules/framer-motion/dist/es/render/dom/motion-minimal.js\nvar m = createMotionProxy(createDomMotionConfig);\n\n// ../../node_modules/framer-motion/dist/es/components/AnimatePresence/index.js\n\n\n\n// ../../node_modules/framer-motion/dist/es/utils/use-force-update.js\n\nfunction useForceUpdate() {\n  var unloadingRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(false);\n  var _a = __read((0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0), 2), forcedRenderCount = _a[0], setForcedRenderCount = _a[1];\n  useUnmountEffect(function() {\n    return unloadingRef.current = true;\n  });\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function() {\n    !unloadingRef.current && setForcedRenderCount(forcedRenderCount + 1);\n  }, [forcedRenderCount]);\n}\n\n// ../../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.js\n\n\nvar presenceId = 0;\nfunction getPresenceId() {\n  var id = presenceId;\n  presenceId++;\n  return id;\n}\nvar PresenceChild = function(_a) {\n  var children = _a.children, initial = _a.initial, isPresent2 = _a.isPresent, onExitComplete = _a.onExitComplete, custom = _a.custom, presenceAffectsLayout = _a.presenceAffectsLayout;\n  var presenceChildren = useConstant(newChildrenMap);\n  var id = useConstant(getPresenceId);\n  var context = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(function() {\n    return {\n      id,\n      initial,\n      isPresent: isPresent2,\n      custom,\n      onExitComplete: function(childId) {\n        presenceChildren.set(childId, true);\n        var allComplete = true;\n        presenceChildren.forEach(function(isComplete) {\n          if (!isComplete)\n            allComplete = false;\n        });\n        allComplete && (onExitComplete === null || onExitComplete === void 0 ? void 0 : onExitComplete());\n      },\n      register: function(childId) {\n        presenceChildren.set(childId, false);\n        return function() {\n          return presenceChildren.delete(childId);\n        };\n      }\n    };\n  }, presenceAffectsLayout ? void 0 : [isPresent2]);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(function() {\n    presenceChildren.forEach(function(_, key6) {\n      return presenceChildren.set(key6, false);\n    });\n  }, [isPresent2]);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function() {\n    !isPresent2 && !presenceChildren.size && (onExitComplete === null || onExitComplete === void 0 ? void 0 : onExitComplete());\n  }, [isPresent2]);\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(PresenceContext.Provider, { value: context }, children);\n};\nfunction newChildrenMap() {\n  return new Map();\n}\n\n// ../../node_modules/framer-motion/dist/es/components/AnimatePresence/index.js\nfunction getChildKey(child) {\n  return child.key || \"\";\n}\nfunction updateChildLookup(children, allChildren) {\n  var seenChildren =  true ? new Set() : 0;\n  children.forEach(function(child) {\n    var key6 = getChildKey(child);\n    if (seenChildren) {\n      if (seenChildren.has(key6)) {\n        console.warn('Children of AnimatePresence require unique keys. \"' + key6 + '\" is a duplicate.');\n      }\n      seenChildren.add(key6);\n    }\n    allChildren.set(key6, child);\n  });\n}\nfunction onlyElements(children) {\n  var filtered = [];\n  react__WEBPACK_IMPORTED_MODULE_0__.Children.forEach(children, function(child) {\n    if ((0,react__WEBPACK_IMPORTED_MODULE_0__.isValidElement)(child))\n      filtered.push(child);\n  });\n  return filtered;\n}\nvar AnimatePresence = function(_a) {\n  var children = _a.children, custom = _a.custom, _b = _a.initial, initial = _b === void 0 ? true : _b, onExitComplete = _a.onExitComplete, exitBeforeEnter = _a.exitBeforeEnter, _c = _a.presenceAffectsLayout, presenceAffectsLayout = _c === void 0 ? true : _c;\n  var forceRender = useForceUpdate();\n  var layoutContext = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(SharedLayoutContext);\n  if (isSharedLayout(layoutContext)) {\n    forceRender = layoutContext.forceUpdate;\n  }\n  var isInitialRender = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(true);\n  var filteredChildren = onlyElements(children);\n  var presentChildren = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(filteredChildren);\n  var allChildren = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(new Map()).current;\n  var exiting = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(new Set()).current;\n  updateChildLookup(filteredChildren, allChildren);\n  if (isInitialRender.current) {\n    isInitialRender.current = false;\n    return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, filteredChildren.map(function(child) {\n      return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(PresenceChild, { key: getChildKey(child), isPresent: true, initial: initial ? void 0 : false, presenceAffectsLayout }, child);\n    }));\n  }\n  var childrenToRender = __spreadArray([], __read(filteredChildren));\n  var presentKeys = presentChildren.current.map(getChildKey);\n  var targetKeys = filteredChildren.map(getChildKey);\n  var numPresent = presentKeys.length;\n  for (var i = 0; i < numPresent; i++) {\n    var key6 = presentKeys[i];\n    if (targetKeys.indexOf(key6) === -1) {\n      exiting.add(key6);\n    } else {\n      exiting.delete(key6);\n    }\n  }\n  if (exitBeforeEnter && exiting.size) {\n    childrenToRender = [];\n  }\n  exiting.forEach(function(key7) {\n    if (targetKeys.indexOf(key7) !== -1)\n      return;\n    var child = allChildren.get(key7);\n    if (!child)\n      return;\n    var insertionIndex = presentKeys.indexOf(key7);\n    var onExit = function() {\n      allChildren.delete(key7);\n      exiting.delete(key7);\n      var removeIndex = presentChildren.current.findIndex(function(presentChild) {\n        return presentChild.key === key7;\n      });\n      presentChildren.current.splice(removeIndex, 1);\n      if (!exiting.size) {\n        presentChildren.current = filteredChildren;\n        forceRender();\n        onExitComplete && onExitComplete();\n      }\n    };\n    childrenToRender.splice(insertionIndex, 0, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(PresenceChild, { key: getChildKey(child), isPresent: false, onExitComplete: onExit, custom, presenceAffectsLayout }, child));\n  });\n  childrenToRender = childrenToRender.map(function(child) {\n    var key7 = child.key;\n    return exiting.has(key7) ? child : (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(PresenceChild, { key: getChildKey(child), isPresent: true, presenceAffectsLayout }, child);\n  });\n  presentChildren.current = childrenToRender;\n  if (exitBeforeEnter && childrenToRender.length > 1) {\n    console.warn(\"You're attempting to animate multiple children within AnimatePresence, but its exitBeforeEnter prop is set to true. This will lead to odd visual behaviour.\");\n  }\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, exiting.size ? childrenToRender : childrenToRender.map(function(child) {\n    return (0,react__WEBPACK_IMPORTED_MODULE_0__.cloneElement)(child);\n  }));\n};\n\n// ../../node_modules/framer-motion/dist/es/components/AnimateSharedLayout/index.js\n\n\n// ../../node_modules/framer-motion/dist/es/animation/animate.js\nfunction animate2(from, to, transition) {\n  if (transition === void 0) {\n    transition = {};\n  }\n  var value = isMotionValue(from) ? from : motionValue(from);\n  startAnimation(\"\", value, to, transition);\n  return {\n    stop: function() {\n      return value.stop();\n    }\n  };\n}\n\n// ../../node_modules/framer-motion/dist/es/components/AnimateSharedLayout/utils/crossfader.js\nfunction createCrossfader() {\n  var progress2 = motionValue(1);\n  var options = {\n    lead: void 0,\n    follow: void 0,\n    crossfadeOpacity: false,\n    preserveFollowOpacity: false\n  };\n  var prevOptions = __assign({}, options);\n  var leadState = {};\n  var followState = {};\n  var isActive = false;\n  var finalCrossfadeFrame = null;\n  var prevUpdate = 0;\n  function startCrossfadeAnimation(target, transition) {\n    var lead = options.lead, follow = options.follow;\n    isActive = true;\n    finalCrossfadeFrame = null;\n    var hasUpdated = false;\n    var onUpdate = function() {\n      hasUpdated = true;\n      lead && lead.scheduleRender();\n      follow && follow.scheduleRender();\n    };\n    var onComplete = function() {\n      isActive = false;\n      finalCrossfadeFrame = getFrameData().timestamp;\n    };\n    transition = transition && getValueTransition(transition, \"crossfade\");\n    return animate2(progress2, target, __assign(__assign({}, transition), { onUpdate, onComplete: function() {\n      if (!hasUpdated) {\n        progress2.set(target);\n        es_default.read(onComplete);\n      } else {\n        onComplete();\n      }\n      onUpdate();\n    } }));\n  }\n  function updateCrossfade() {\n    var _a, _b;\n    var timestamp = getFrameData().timestamp;\n    var lead = options.lead, follow = options.follow;\n    if (timestamp === prevUpdate || !lead)\n      return;\n    prevUpdate = timestamp;\n    var latestLeadValues = lead.getLatestValues();\n    Object.assign(leadState, latestLeadValues);\n    var latestFollowValues = follow ? follow.getLatestValues() : options.prevValues;\n    Object.assign(followState, latestFollowValues);\n    var p = progress2.get();\n    var leadTargetOpacity = (_a = latestLeadValues.opacity) !== null && _a !== void 0 ? _a : 1;\n    var followTargetOpacity = (_b = latestFollowValues === null || latestFollowValues === void 0 ? void 0 : latestFollowValues.opacity) !== null && _b !== void 0 ? _b : 1;\n    if (options.crossfadeOpacity && follow) {\n      leadState.opacity = mix(follow.isVisible !== false ? 0 : followTargetOpacity, leadTargetOpacity, easeCrossfadeIn(p));\n      followState.opacity = options.preserveFollowOpacity ? followTargetOpacity : mix(followTargetOpacity, 0, easeCrossfadeOut(p));\n    } else if (!follow) {\n      leadState.opacity = mix(followTargetOpacity, leadTargetOpacity, p);\n    }\n    mixValues(leadState, followState, latestLeadValues, latestFollowValues || {}, Boolean(follow), p);\n  }\n  return {\n    isActive: function() {\n      return leadState && (isActive || getFrameData().timestamp === finalCrossfadeFrame);\n    },\n    fromLead: function(transition) {\n      return startCrossfadeAnimation(0, transition);\n    },\n    toLead: function(transition) {\n      var initialProgress = 0;\n      if (!options.prevValues && !options.follow) {\n        initialProgress = 1;\n      } else if (prevOptions.lead === options.follow && prevOptions.follow === options.lead) {\n        initialProgress = 1 - progress2.get();\n      }\n      progress2.set(initialProgress);\n      return startCrossfadeAnimation(1, transition);\n    },\n    reset: function() {\n      return progress2.set(1);\n    },\n    stop: function() {\n      return progress2.stop();\n    },\n    getCrossfadeState: function(element) {\n      updateCrossfade();\n      if (element === options.lead) {\n        return leadState;\n      } else if (element === options.follow) {\n        return followState;\n      }\n    },\n    setOptions: function(newOptions) {\n      prevOptions = options;\n      options = newOptions;\n      leadState = {};\n      followState = {};\n    },\n    getLatestValues: function() {\n      return leadState;\n    }\n  };\n}\nvar easeCrossfadeIn = compress(0, 0.5, circOut);\nvar easeCrossfadeOut = compress(0.5, 0.95, linear);\nfunction compress(min, max, easing) {\n  return function(p) {\n    if (p < min)\n      return 0;\n    if (p > max)\n      return 1;\n    return easing(progress(min, max, p));\n  };\n}\nvar borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nvar numBorders = borders.length;\nfunction mixValues(leadState, followState, latestLeadValues, latestFollowValues, hasFollowElement, p) {\n  for (var i = 0; i < numBorders; i++) {\n    var borderLabel = \"border\" + borders[i] + \"Radius\";\n    var followRadius = getRadius(latestFollowValues, borderLabel);\n    var leadRadius = getRadius(latestLeadValues, borderLabel);\n    if (followRadius === void 0 && leadRadius === void 0)\n      continue;\n    followRadius || (followRadius = 0);\n    leadRadius || (leadRadius = 0);\n    if (typeof followRadius === \"number\" && typeof leadRadius === \"number\") {\n      var radius = Math.max(mix(followRadius, leadRadius, p), 0);\n      leadState[borderLabel] = followState[borderLabel] = radius;\n    }\n  }\n  if (latestFollowValues.rotate || latestLeadValues.rotate) {\n    var rotate = mix(latestFollowValues.rotate || 0, latestLeadValues.rotate || 0, p);\n    leadState.rotate = followState.rotate = rotate;\n  }\n  if (!hasFollowElement && latestLeadValues.backgroundColor && latestFollowValues.backgroundColor) {\n    leadState.backgroundColor = followState.backgroundColor = mixColor(latestFollowValues.backgroundColor, latestLeadValues.backgroundColor)(p);\n  }\n}\nfunction getRadius(values, radiusName) {\n  var _a;\n  return (_a = values[radiusName]) !== null && _a !== void 0 ? _a : values.borderRadius;\n}\n\n// ../../node_modules/framer-motion/dist/es/components/AnimateSharedLayout/utils/stack.js\nfunction layoutStack() {\n  var stack = new Set();\n  var state = { leadIsExiting: false };\n  var prevState = __assign({}, state);\n  var prevValues;\n  var prevViewportBox;\n  var prevDragCursor;\n  var crossfader = createCrossfader();\n  var needsCrossfadeAnimation = false;\n  function getFollowViewportBox() {\n    return state.follow ? state.follow.prevViewportBox : prevViewportBox;\n  }\n  function getFollowLayout() {\n    var _a;\n    return (_a = state.follow) === null || _a === void 0 ? void 0 : _a.getLayoutState().layout;\n  }\n  return {\n    add: function(element) {\n      element.setCrossfader(crossfader);\n      stack.add(element);\n      if (prevDragCursor)\n        element.prevDragCursor = prevDragCursor;\n      if (!state.lead)\n        state.lead = element;\n    },\n    remove: function(element) {\n      stack.delete(element);\n    },\n    getLead: function() {\n      return state.lead;\n    },\n    updateSnapshot: function() {\n      if (!state.lead)\n        return;\n      prevValues = crossfader.isActive() ? crossfader.getLatestValues() : state.lead.getLatestValues();\n      prevViewportBox = state.lead.prevViewportBox;\n      var dragControls = elementDragControls.get(state.lead);\n      if (dragControls && dragControls.isDragging) {\n        prevDragCursor = dragControls.cursorProgress;\n      }\n    },\n    clearSnapshot: function() {\n      prevDragCursor = prevViewportBox = void 0;\n    },\n    updateLeadAndFollow: function() {\n      var _a;\n      prevState = __assign({}, state);\n      var lead;\n      var follow;\n      var order2 = Array.from(stack);\n      for (var i = order2.length; i--; i >= 0) {\n        var element = order2[i];\n        if (lead)\n          follow !== null && follow !== void 0 ? follow : follow = element;\n        lead !== null && lead !== void 0 ? lead : lead = element;\n        if (lead && follow)\n          break;\n      }\n      state.lead = lead;\n      state.follow = follow;\n      state.leadIsExiting = ((_a = state.lead) === null || _a === void 0 ? void 0 : _a.presence) === Presence.Exiting;\n      crossfader.setOptions({\n        lead,\n        follow,\n        prevValues,\n        crossfadeOpacity: (follow === null || follow === void 0 ? void 0 : follow.isPresenceRoot) || (lead === null || lead === void 0 ? void 0 : lead.isPresenceRoot)\n      });\n      if (state.lead !== prevState.follow && (prevState.lead !== state.lead || prevState.leadIsExiting !== state.leadIsExiting)) {\n        needsCrossfadeAnimation = true;\n      }\n    },\n    animate: function(child, shouldCrossfade) {\n      var _a;\n      if (shouldCrossfade === void 0) {\n        shouldCrossfade = false;\n      }\n      if (child === state.lead) {\n        if (shouldCrossfade) {\n          child.pointTo(state.lead);\n        } else {\n          child.setVisibility(true);\n        }\n        var config = {};\n        var prevParent = (_a = state.follow) === null || _a === void 0 ? void 0 : _a.getProjectionParent();\n        if (prevParent) {\n          config.prevParent = prevParent;\n        }\n        if (child.presence === Presence.Entering) {\n          config.originBox = getFollowViewportBox();\n        } else if (child.presence === Presence.Exiting) {\n          config.targetBox = getFollowLayout();\n        }\n        if (needsCrossfadeAnimation) {\n          needsCrossfadeAnimation = false;\n          var transition = child.getDefaultTransition();\n          child.presence === Presence.Entering ? crossfader.toLead(transition) : crossfader.fromLead(transition);\n        }\n        child.notifyLayoutReady(config);\n      } else {\n        if (shouldCrossfade) {\n          state.lead && child.pointTo(state.lead);\n        } else {\n          child.setVisibility(false);\n        }\n      }\n    }\n  };\n}\n\n// ../../node_modules/framer-motion/dist/es/components/AnimateSharedLayout/utils/rotate.js\nfunction resetRotate(child) {\n  var hasRotate = false;\n  var resetValues = {};\n  for (var i = 0; i < transformAxes.length; i++) {\n    var axis = transformAxes[i];\n    var key6 = \"rotate\" + axis;\n    if (!child.hasValue(key6) || child.getStaticValue(key6) === 0)\n      continue;\n    hasRotate = true;\n    resetValues[key6] = child.getStaticValue(key6);\n    child.setStaticValue(key6, 0);\n  }\n  if (!hasRotate)\n    return;\n  child.syncRender();\n  for (var key6 in resetValues) {\n    child.setStaticValue(key6, resetValues[key6]);\n  }\n  child.scheduleRender();\n}\n\n// ../../node_modules/framer-motion/dist/es/components/AnimateSharedLayout/index.js\nvar AnimateSharedLayout = function(_super) {\n  __extends(AnimateSharedLayout2, _super);\n  function AnimateSharedLayout2() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.children = new Set();\n    _this.stacks = new Map();\n    _this.hasMounted = false;\n    _this.updateScheduled = false;\n    _this.renderScheduled = false;\n    _this.syncContext = __assign(__assign({}, createBatcher()), { syncUpdate: function(force) {\n      return _this.scheduleUpdate(force);\n    }, forceUpdate: function() {\n      _this.syncContext = __assign({}, _this.syncContext);\n      _this.scheduleUpdate(true);\n    }, register: function(child) {\n      return _this.addChild(child);\n    }, remove: function(child) {\n      return _this.removeChild(child);\n    } });\n    return _this;\n  }\n  AnimateSharedLayout2.prototype.componentDidMount = function() {\n    this.hasMounted = true;\n  };\n  AnimateSharedLayout2.prototype.componentDidUpdate = function() {\n    this.startLayoutAnimation();\n  };\n  AnimateSharedLayout2.prototype.shouldComponentUpdate = function() {\n    this.renderScheduled = true;\n    return true;\n  };\n  AnimateSharedLayout2.prototype.startLayoutAnimation = function() {\n    var _this = this;\n    this.renderScheduled = this.updateScheduled = false;\n    var type = this.props.type;\n    this.children.forEach(function(child) {\n      if (!child.isPresent) {\n        child.presence = Presence.Exiting;\n      } else if (child.presence !== Presence.Entering) {\n        child.presence = child.presence === Presence.Exiting ? Presence.Entering : Presence.Present;\n      }\n    });\n    this.updateStacks();\n    var handler = {\n      layoutReady: function(child) {\n        if (child.getLayoutId() !== void 0) {\n          var stack = _this.getStack(child);\n          stack.animate(child, type === \"crossfade\");\n        } else {\n          child.notifyLayoutReady();\n        }\n      },\n      parent: this.context.visualElement\n    };\n    this.children.forEach(function(child) {\n      return _this.syncContext.add(child);\n    });\n    this.syncContext.flush(handler);\n    this.stacks.forEach(function(stack) {\n      return stack.clearSnapshot();\n    });\n  };\n  AnimateSharedLayout2.prototype.updateStacks = function() {\n    this.stacks.forEach(function(stack) {\n      return stack.updateLeadAndFollow();\n    });\n  };\n  AnimateSharedLayout2.prototype.scheduleUpdate = function(force) {\n    if (force === void 0) {\n      force = false;\n    }\n    if (!(force || !this.updateScheduled))\n      return;\n    this.updateScheduled = true;\n    this.children.forEach(function(child) {\n      resetRotate(child);\n      if (child.shouldResetTransform())\n        child.resetTransform();\n    });\n    this.children.forEach(snapshotViewportBox);\n    this.stacks.forEach(function(stack) {\n      return stack.updateSnapshot();\n    });\n    if (force || !this.renderScheduled) {\n      this.renderScheduled = true;\n      this.forceUpdate();\n    }\n  };\n  AnimateSharedLayout2.prototype.addChild = function(child) {\n    this.children.add(child);\n    this.addToStack(child);\n    child.presence = this.hasMounted ? Presence.Entering : Presence.Present;\n  };\n  AnimateSharedLayout2.prototype.removeChild = function(child) {\n    this.scheduleUpdate();\n    this.children.delete(child);\n    this.removeFromStack(child);\n  };\n  AnimateSharedLayout2.prototype.addToStack = function(child) {\n    var stack = this.getStack(child);\n    stack === null || stack === void 0 ? void 0 : stack.add(child);\n  };\n  AnimateSharedLayout2.prototype.removeFromStack = function(child) {\n    var stack = this.getStack(child);\n    stack === null || stack === void 0 ? void 0 : stack.remove(child);\n  };\n  AnimateSharedLayout2.prototype.getStack = function(child) {\n    var id = child.getLayoutId();\n    if (id === void 0)\n      return;\n    !this.stacks.has(id) && this.stacks.set(id, layoutStack());\n    return this.stacks.get(id);\n  };\n  AnimateSharedLayout2.prototype.render = function() {\n    return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(SharedLayoutContext.Provider, { value: this.syncContext }, this.props.children);\n  };\n  AnimateSharedLayout2.contextType = MotionContext;\n  return AnimateSharedLayout2;\n}(react__WEBPACK_IMPORTED_MODULE_0__.Component);\n\n// ../../node_modules/framer-motion/dist/es/components/MotionConfig/index.js\n\n\nfunction MotionConfig(_a) {\n  var children = _a.children, config = __rest(_a, [\"children\"]);\n  config = __assign(__assign({}, (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(MotionConfigContext)), config);\n  config.isStatic = useConstant(function() {\n    return config.isStatic;\n  });\n  var transitionDependency = typeof config.transition === \"object\" ? config.transition.toString() : \"\";\n  var context = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(function() {\n    return config;\n  }, [\n    transitionDependency,\n    config.transformPagePoint\n  ]);\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(MotionConfigContext.Provider, { value: context }, children);\n}\n\n// ../../node_modules/framer-motion/dist/es/components/LazyMotion/index.js\n\n\nfunction LazyMotion(_a) {\n  var children = _a.children, features = _a.features, _b = _a.strict, strict = _b === void 0 ? false : _b;\n  var _c = __read((0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!isLazyBundle(features)), 2), setIsLoaded = _c[1];\n  var loadedRenderer = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(void 0);\n  if (!isLazyBundle(features)) {\n    var renderer = features.renderer, loadedFeatures = __rest(features, [\"renderer\"]);\n    loadedRenderer.current = renderer;\n    loadFeatures(loadedFeatures);\n  }\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function() {\n    if (isLazyBundle(features)) {\n      features().then(function(_a2) {\n        var renderer2 = _a2.renderer, loadedFeatures2 = __rest(_a2, [\"renderer\"]);\n        loadFeatures(loadedFeatures2);\n        loadedRenderer.current = renderer2;\n        setIsLoaded(true);\n      });\n    }\n  }, []);\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(LazyContext.Provider, { value: { renderer: loadedRenderer.current, strict } }, children);\n}\nfunction isLazyBundle(features) {\n  return typeof features === \"function\";\n}\n\n// ../../node_modules/framer-motion/dist/es/render/dom/features-animation.js\nvar domAnimation = __assign(__assign({ renderer: createDomVisualElement }, animations), gestureAnimations);\n\n// ../../node_modules/framer-motion/dist/es/render/dom/features-max.js\nvar domMax = __assign(__assign(__assign({}, domAnimation), drag), layoutAnimations);\n\n// ../../node_modules/framer-motion/dist/es/value/use-motion-value.js\n\nfunction useMotionValue(initial) {\n  var value = useConstant(function() {\n    return motionValue(initial);\n  });\n  var isStatic = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(MotionConfigContext).isStatic;\n  if (isStatic) {\n    var _a = __read((0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(initial), 2), setLatest_1 = _a[1];\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function() {\n      return value.onChange(setLatest_1);\n    }, []);\n  }\n  return value;\n}\n\n// ../../node_modules/framer-motion/dist/es/value/use-on-change.js\n\nfunction useOnChange(value, callback) {\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function() {\n    if (isMotionValue(value))\n      return value.onChange(callback);\n  }, [callback]);\n}\nfunction useMultiOnChange(values, handler) {\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function() {\n    var subscriptions = values.map(function(value) {\n      return value.onChange(handler);\n    });\n    return function() {\n      return subscriptions.forEach(function(unsubscribe) {\n        return unsubscribe();\n      });\n    };\n  });\n}\n\n// ../../node_modules/framer-motion/dist/es/value/use-combine-values.js\nfunction useCombineMotionValues(values, combineValues) {\n  var value = useMotionValue(combineValues());\n  var updateValue = function() {\n    return value.set(combineValues());\n  };\n  updateValue();\n  useMultiOnChange(values, function() {\n    return es_default.update(updateValue, false, true);\n  });\n  return value;\n}\n\n// ../../node_modules/framer-motion/dist/es/value/use-motion-template.js\nfunction useMotionTemplate(fragments) {\n  var values = [];\n  for (var _i = 1; _i < arguments.length; _i++) {\n    values[_i - 1] = arguments[_i];\n  }\n  var numFragments = fragments.length;\n  function buildValue() {\n    var output = \"\";\n    for (var i = 0; i < numFragments; i++) {\n      output += fragments[i];\n      var value = values[i];\n      if (value)\n        output += values[i].get();\n    }\n    return output;\n  }\n  return useCombineMotionValues(values, buildValue);\n}\n\n// ../../node_modules/framer-motion/dist/es/utils/transform.js\nvar isCustomValueType = function(v) {\n  return typeof v === \"object\" && v.mix;\n};\nvar getMixer2 = function(v) {\n  return isCustomValueType(v) ? v.mix : void 0;\n};\nfunction transform() {\n  var args = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    args[_i] = arguments[_i];\n  }\n  var useImmediate = !Array.isArray(args[0]);\n  var argOffset = useImmediate ? 0 : -1;\n  var inputValue = args[0 + argOffset];\n  var inputRange = args[1 + argOffset];\n  var outputRange = args[2 + argOffset];\n  var options = args[3 + argOffset];\n  var interpolator = interpolate(inputRange, outputRange, __assign({ mixer: getMixer2(outputRange[0]) }, options));\n  return useImmediate ? interpolator(inputValue) : interpolator;\n}\n\n// ../../node_modules/framer-motion/dist/es/value/use-transform.js\nfunction useTransform(input, inputRangeOrTransformer, outputRange, options) {\n  var transformer = typeof inputRangeOrTransformer === \"function\" ? inputRangeOrTransformer : transform(inputRangeOrTransformer, outputRange, options);\n  return Array.isArray(input) ? useListTransform(input, transformer) : useListTransform([input], function(_a) {\n    var _b = __read(_a, 1), latest = _b[0];\n    return transformer(latest);\n  });\n}\nfunction useListTransform(values, transformer) {\n  var latest = useConstant(function() {\n    return [];\n  });\n  return useCombineMotionValues(values, function() {\n    latest.length = 0;\n    var numValues = values.length;\n    for (var i = 0; i < numValues; i++) {\n      latest[i] = values[i].get();\n    }\n    return transformer(latest);\n  });\n}\n\n// ../../node_modules/framer-motion/dist/es/value/use-spring.js\n\nfunction useSpring(source, config) {\n  if (config === void 0) {\n    config = {};\n  }\n  var isStatic = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(MotionConfigContext).isStatic;\n  var activeSpringAnimation = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n  var value = useMotionValue(isMotionValue(source) ? source.get() : source);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(function() {\n    return value.attach(function(v, set) {\n      if (isStatic)\n        return set(v);\n      if (activeSpringAnimation.current) {\n        activeSpringAnimation.current.stop();\n      }\n      activeSpringAnimation.current = animate(__assign(__assign({ from: value.get(), to: v, velocity: value.getVelocity() }, config), { onUpdate: set }));\n      return value.get();\n    });\n  }, Object.values(config));\n  useOnChange(source, function(v) {\n    return value.set(parseFloat(v));\n  });\n  return value;\n}\n\n// ../../node_modules/framer-motion/dist/es/value/use-velocity.js\n\nfunction useVelocity(value) {\n  var velocity = useMotionValue(value.getVelocity());\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function() {\n    return value.velocityUpdateSubscribers.add(function(newVelocity) {\n      velocity.set(newVelocity);\n    });\n  }, [value]);\n  return velocity;\n}\n\n// ../../node_modules/framer-motion/dist/es/value/scroll/utils.js\nfunction createScrollMotionValues() {\n  return {\n    scrollX: motionValue(0),\n    scrollY: motionValue(0),\n    scrollXProgress: motionValue(0),\n    scrollYProgress: motionValue(0)\n  };\n}\nfunction setProgress(offset, maxOffset, value) {\n  value.set(!offset || !maxOffset ? 0 : offset / maxOffset);\n}\nfunction createScrollUpdater(values, getOffsets) {\n  var update = function() {\n    var _a = getOffsets(), xOffset = _a.xOffset, yOffset = _a.yOffset, xMaxOffset = _a.xMaxOffset, yMaxOffset = _a.yMaxOffset;\n    values.scrollX.set(xOffset);\n    values.scrollY.set(yOffset);\n    setProgress(xOffset, xMaxOffset, values.scrollXProgress);\n    setProgress(yOffset, yMaxOffset, values.scrollYProgress);\n  };\n  update();\n  return update;\n}\n\n// ../../node_modules/framer-motion/dist/es/value/scroll/use-element-scroll.js\nvar getElementScrollOffsets = function(element) {\n  return function() {\n    return {\n      xOffset: element.scrollLeft,\n      yOffset: element.scrollTop,\n      xMaxOffset: element.scrollWidth - element.offsetWidth,\n      yMaxOffset: element.scrollHeight - element.offsetHeight\n    };\n  };\n};\nfunction useElementScroll(ref) {\n  var values = useConstant(createScrollMotionValues);\n  useIsomorphicLayoutEffect(function() {\n    var element = ref.current;\n    invariant(!!element, \"ref provided to useScroll must be passed into a HTML element.\");\n    if (!element)\n      return;\n    var updateScrollValues = createScrollUpdater(values, getElementScrollOffsets(element));\n    var scrollListener = addDomEvent(element, \"scroll\", updateScrollValues, { passive: true });\n    var resizeListener = addDomEvent(element, \"resize\", updateScrollValues);\n    return function() {\n      scrollListener && scrollListener();\n      resizeListener && resizeListener();\n    };\n  }, []);\n  return values;\n}\n\n// ../../node_modules/framer-motion/dist/es/value/scroll/use-viewport-scroll.js\nvar viewportScrollValues;\nfunction getViewportScrollOffsets() {\n  return {\n    xOffset: window.pageXOffset,\n    yOffset: window.pageYOffset,\n    xMaxOffset: document.body.clientWidth - window.innerWidth,\n    yMaxOffset: document.body.clientHeight - window.innerHeight\n  };\n}\nvar hasListeners = false;\nfunction addEventListeners() {\n  hasListeners = true;\n  if (typeof window === \"undefined\")\n    return;\n  var updateScrollValues = createScrollUpdater(viewportScrollValues, getViewportScrollOffsets);\n  addDomEvent(window, \"scroll\", updateScrollValues, { passive: true });\n  addDomEvent(window, \"resize\", updateScrollValues);\n}\nfunction useViewportScroll() {\n  if (!viewportScrollValues) {\n    viewportScrollValues = createScrollMotionValues();\n  }\n  useIsomorphicLayoutEffect(function() {\n    !hasListeners && addEventListeners();\n  }, []);\n  return viewportScrollValues;\n}\n\n// ../../node_modules/framer-motion/dist/es/utils/use-reduced-motion.js\n\nvar prefersReducedMotion;\nfunction initPrefersReducedMotion() {\n  prefersReducedMotion = motionValue(null);\n  if (typeof window === \"undefined\")\n    return;\n  if (window.matchMedia) {\n    var motionMediaQuery_1 = window.matchMedia(\"(prefers-reduced-motion)\");\n    var setReducedMotionPreferences = function() {\n      return prefersReducedMotion.set(motionMediaQuery_1.matches);\n    };\n    motionMediaQuery_1.addListener(setReducedMotionPreferences);\n    setReducedMotionPreferences();\n  } else {\n    prefersReducedMotion.set(false);\n  }\n}\nfunction useReducedMotion() {\n  !prefersReducedMotion && initPrefersReducedMotion();\n  var _a = __read((0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(prefersReducedMotion.get()), 2), shouldReduceMotion = _a[0], setShouldReduceMotion = _a[1];\n  useOnChange(prefersReducedMotion, setShouldReduceMotion);\n  return shouldReduceMotion;\n}\n\n// ../../node_modules/framer-motion/dist/es/animation/animation-controls.js\nfunction animationControls() {\n  var hasMounted = false;\n  var pendingAnimations = [];\n  var subscribers = new Set();\n  var controls = {\n    subscribe: function(visualElement2) {\n      subscribers.add(visualElement2);\n      return function() {\n        return void subscribers.delete(visualElement2);\n      };\n    },\n    start: function(definition, transitionOverride) {\n      if (hasMounted) {\n        var animations_1 = [];\n        subscribers.forEach(function(visualElement2) {\n          animations_1.push(animateVisualElement(visualElement2, definition, {\n            transitionOverride\n          }));\n        });\n        return Promise.all(animations_1);\n      } else {\n        return new Promise(function(resolve) {\n          pendingAnimations.push({\n            animation: [definition, transitionOverride],\n            resolve\n          });\n        });\n      }\n    },\n    set: function(definition) {\n      invariant(hasMounted, \"controls.set() should only be called after a component has mounted. Consider calling within a useEffect hook.\");\n      return subscribers.forEach(function(visualElement2) {\n        setValues(visualElement2, definition);\n      });\n    },\n    stop: function() {\n      subscribers.forEach(function(visualElement2) {\n        stopAnimation(visualElement2);\n      });\n    },\n    mount: function() {\n      hasMounted = true;\n      pendingAnimations.forEach(function(_a) {\n        var animation = _a.animation, resolve = _a.resolve;\n        controls.start.apply(controls, __spreadArray([], __read(animation))).then(resolve);\n      });\n      return function() {\n        hasMounted = false;\n        controls.stop();\n      };\n    }\n  };\n  return controls;\n}\n\n// ../../node_modules/framer-motion/dist/es/animation/use-animation.js\n\nfunction useAnimation() {\n  var controls = useConstant(animationControls);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(controls.mount, []);\n  return controls;\n}\n\n// ../../node_modules/framer-motion/dist/es/utils/use-cycle.js\n\nfunction useCycle() {\n  var items = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    items[_i] = arguments[_i];\n  }\n  var index = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(0);\n  var _a = __read((0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(items[index.current]), 2), item = _a[0], setItem = _a[1];\n  return [\n    item,\n    function(next) {\n      index.current = typeof next !== \"number\" ? wrap(0, items.length, index.current + 1) : next;\n      setItem(items[index.current]);\n    }\n  ];\n}\n\n// ../../node_modules/framer-motion/dist/es/gestures/drag/use-drag-controls.js\nvar DragControls = function() {\n  function DragControls2() {\n    this.componentControls = new Set();\n  }\n  DragControls2.prototype.subscribe = function(controls) {\n    var _this = this;\n    this.componentControls.add(controls);\n    return function() {\n      return _this.componentControls.delete(controls);\n    };\n  };\n  DragControls2.prototype.start = function(event, options) {\n    this.componentControls.forEach(function(controls) {\n      controls.start(event.nativeEvent || event, options);\n    });\n  };\n  DragControls2.prototype.updateConstraints = function() {\n    this.componentControls.forEach(function(controls) {\n      controls.updateLayoutMeasurements();\n      controls.resolveDragConstraints();\n    });\n  };\n  return DragControls2;\n}();\nvar createDragControls = function() {\n  return new DragControls();\n};\nfunction useDragControls() {\n  return useConstant(createDragControls);\n}\n\n// ../../node_modules/framer-motion/dist/es/animation/use-animated-state.js\n\nvar createObject = function() {\n  return {};\n};\nvar stateVisualElement = visualElement({\n  build: function() {\n  },\n  measureViewportBox: axisBox,\n  resetTransform: function() {\n  },\n  restoreTransform: function() {\n  },\n  removeValueFromRenderState: function() {\n  },\n  render: function() {\n  },\n  scrapeMotionValuesFromProps: createObject,\n  readValueFromInstance: function(_state, key6, options) {\n    return options.initialState[key6] || 0;\n  },\n  makeTargetAnimatable: function(element, _a) {\n    var transition = _a.transition, transitionEnd = _a.transitionEnd, target = __rest(_a, [\"transition\", \"transitionEnd\"]);\n    var origin = getOrigin(target, transition || {}, element);\n    checkTargetForNewValues(element, target, origin);\n    return __assign({ transition, transitionEnd }, target);\n  }\n});\nvar useVisualState = makeUseVisualState({\n  scrapeMotionValuesFromProps: createObject,\n  createRenderState: createObject\n});\nfunction useAnimatedState(initialState2) {\n  var _a = __read((0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(initialState2), 2), animationState = _a[0], setAnimationState = _a[1];\n  var visualState = useVisualState({}, false);\n  var element = useConstant(function() {\n    return stateVisualElement({ props: {}, visualState }, { initialState: initialState2 });\n  });\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function() {\n    element.mount({});\n    return element.unmount();\n  }, []);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function() {\n    element.setProps({\n      onUpdate: function(v) {\n        return setAnimationState(__assign({}, v));\n      }\n    });\n  });\n  var startAnimation3 = useConstant(function() {\n    return function(animationDefinition) {\n      return animateVisualElement(element, animationDefinition);\n    };\n  });\n  return [animationState, startAnimation3];\n}\n\n// ../../node_modules/framer-motion/dist/es/value/use-inverted-scale.js\nvar maxScale = 1e5;\nvar invertScale = function(scale2) {\n  return scale2 > 1e-3 ? 1 / scale2 : maxScale;\n};\nvar hasWarned = false;\nfunction useInvertedScale(scale2) {\n  var parentScaleX = useMotionValue(1);\n  var parentScaleY = useMotionValue(1);\n  var visualElement2 = useVisualElementContext();\n  invariant(!!(scale2 || visualElement2), \"If no scale values are provided, useInvertedScale must be used within a child of another motion component.\");\n  warning(hasWarned, \"useInvertedScale is deprecated and will be removed in 3.0. Use the layout prop instead.\");\n  hasWarned = true;\n  if (scale2) {\n    parentScaleX = scale2.scaleX || parentScaleX;\n    parentScaleY = scale2.scaleY || parentScaleY;\n  } else if (visualElement2) {\n    parentScaleX = visualElement2.getValue(\"scaleX\", 1);\n    parentScaleY = visualElement2.getValue(\"scaleY\", 1);\n  }\n  var scaleX = useTransform(parentScaleX, invertScale);\n  var scaleY = useTransform(parentScaleY, invertScale);\n  return { scaleX, scaleY };\n}\n\n// src/animation/Motion/addChildHack.ts\nMotionValue.prototype.addChild = function({ transformer = (v) => v }) {\n  const child = new MotionValue(transformer(this.get()));\n  this.onChange((v) => child.set(transformer(v)));\n  return child;\n};\n\n// src/components/Scroll/Scroll.tsx\n\n\n// src/render/types/PropertyControls.ts\nvar ControlType;\n(function(ControlType2) {\n  ControlType2[\"Boolean\"] = \"boolean\";\n  ControlType2[\"Number\"] = \"number\";\n  ControlType2[\"String\"] = \"string\";\n  ControlType2[\"FusedNumber\"] = \"fusednumber\";\n  ControlType2[\"Enum\"] = \"enum\";\n  ControlType2[\"SegmentedEnum\"] = \"segmentedenum\";\n  ControlType2[\"Color\"] = \"color\";\n  ControlType2[\"Image\"] = \"image\";\n  ControlType2[\"File\"] = \"file\";\n  ControlType2[\"ComponentInstance\"] = \"componentinstance\";\n  ControlType2[\"Array\"] = \"array\";\n  ControlType2[\"EventHandler\"] = \"eventhandler\";\n  ControlType2[\"Transition\"] = \"transition\";\n  ControlType2[\"Object\"] = \"object\";\n})(ControlType || (ControlType = {}));\n\n// src/utils/addPropertyControls.ts\nfunction addPropertyControls(component, propertyControls) {\n  Object.assign(component, { propertyControls });\n}\nfunction getPropertyControls(component) {\n  return component.propertyControls;\n}\n\n// src/components/Scroll/EmulatedScroll.tsx\n\n\n\n// src/render/presentation/Frame/FrameWithMotion.tsx\nvar import_is_prop_valid = __toModule(require_is_prop_valid_browser_cjs());\n\n\n\n// src/utils/safeWindow.ts\nvar mockWindow = {\n  addEventListener: () => {\n  },\n  removeEventListener: () => {\n  },\n  dispatchEvent: () => false,\n  onpointerdown: false,\n  onpointermove: false,\n  onpointerup: false,\n  ontouchstart: false,\n  ontouchmove: false,\n  ontouchend: false,\n  onmousedown: false,\n  onmousemove: false,\n  onmouseup: false,\n  devicePixelRatio: 1,\n  scrollX: 0,\n  scrollY: 0,\n  location: {\n    href: \"\"\n  },\n  setTimeout: () => 0,\n  clearTimeout: () => {\n  },\n  setInterval: () => 0,\n  clearInterval: () => {\n  },\n  webkitConvertPointFromPageToNode: (_, pt) => pt\n};\nvar safeWindow = typeof window === \"undefined\" ? mockWindow : window;\n\n// src/render/style/BorderComponent.tsx\n\nfunction collectBorderStyleForProps(props, style, collapseEqualBorders = true) {\n  const { borderWidth, borderStyle, borderColor } = props;\n  if (!borderWidth) {\n    return;\n  }\n  let borderTop;\n  let borderBottom;\n  let borderLeft;\n  let borderRight;\n  if (typeof borderWidth === \"number\") {\n    borderTop = borderBottom = borderLeft = borderRight = borderWidth;\n  } else {\n    borderTop = borderWidth.top || 0;\n    borderBottom = borderWidth.bottom || 0;\n    borderLeft = borderWidth.left || 0;\n    borderRight = borderWidth.right || 0;\n  }\n  if (borderTop === 0 && borderBottom === 0 && borderLeft === 0 && borderRight === 0) {\n    return;\n  }\n  if (collapseEqualBorders && borderTop === borderBottom && borderTop === borderLeft && borderTop === borderRight) {\n    style.border = `${borderTop}px ${borderStyle} ${borderColor}`;\n    return;\n  }\n  style.borderStyle = props.borderStyle;\n  style.borderColor = props.borderColor;\n  style.borderTopWidth = `${borderTop}px`;\n  style.borderBottomWidth = `${borderBottom}px`;\n  style.borderLeftWidth = `${borderLeft}px`;\n  style.borderRightWidth = `${borderRight}px`;\n}\nfunction Border(props) {\n  const layoutId = props.layoutId ? `${props.layoutId}-border` : void 0;\n  if (!props.borderWidth) {\n    return null;\n  }\n  const style = {\n    position: \"absolute\",\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    borderRadius: \"inherit\",\n    pointerEvents: \"none\"\n  };\n  if (props.border) {\n    ;\n    style.border = props.border;\n    return /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(motion.div, {\n      style\n    });\n  }\n  collectBorderStyleForProps(props, style, false);\n  return /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(motion.div, {\n    \"data-frame-border\": true,\n    style,\n    layoutId\n  });\n}\n\n// src/render/types/BackgroundImage.ts\nvar key = \"src\";\nvar BackgroundImage;\n(function(BackgroundImage2) {\n  BackgroundImage2.isImageObject = function(image) {\n    if (!image || typeof image === \"string\")\n      return false;\n    return key in image;\n  };\n})(BackgroundImage || (BackgroundImage = {}));\n\n// src/animation/Animatable/Observers.ts\nvar Observers = class {\n  constructor() {\n    this.observers = new Set();\n    this.transactions = {};\n  }\n  add(observer) {\n    this.observers.add(observer);\n    let isCalled = false;\n    return () => {\n      if (isCalled) {\n        return;\n      }\n      isCalled = true;\n      this.remove(observer);\n    };\n  }\n  remove(observer) {\n    this.observers.delete(observer);\n  }\n  notify(change, transaction) {\n    if (transaction) {\n      const accumulatedChange = this.transactions[transaction] || change;\n      accumulatedChange.value = change.value;\n      this.transactions[transaction] = accumulatedChange;\n    } else {\n      this.callObservers(change);\n    }\n  }\n  finishTransaction(transaction) {\n    const accumulatedChange = this.transactions[transaction];\n    delete this.transactions[transaction];\n    return this.callObservers(accumulatedChange, transaction);\n  }\n  callObservers(change, transaction) {\n    const finishObservers = [];\n    new Set(this.observers).forEach((observer) => {\n      if (typeof observer === \"function\") {\n        observer(change, transaction);\n      } else {\n        observer.update(change, transaction);\n        finishObservers.push(observer.finish);\n      }\n    });\n    return finishObservers;\n  }\n};\n\n// ../shared/src/assert.ts\nfunction assert(condition, ...msg2) {\n  if (condition)\n    return;\n  const e = Error(\"Assertion Error\" + (msg2.length > 0 ? \": \" + msg2.join(\" \") : \"\"));\n  if (e.stack) {\n    try {\n      const lines = e.stack.split(\"\\n\");\n      if (lines[1].includes(\"assert\")) {\n        lines.splice(1, 1);\n        e.stack = lines.join(\"\\n\");\n      } else if (lines[0].includes(\"assert\")) {\n        lines.splice(0, 1);\n        e.stack = lines.join(\"\\n\");\n      }\n    } catch {\n    }\n  }\n  throw e;\n}\n\n// ../shared/src/warnOnce.ts\nvar warningMessages = new Set();\nfunction warnOnce(keyMessage, ...rest) {\n  if (warningMessages.has(keyMessage))\n    return;\n  warningMessages.add(keyMessage);\n  console.warn(keyMessage, ...rest);\n}\n\n// ../shared/src/deprecation.ts\nfunction deprecationWarning(removedItem, removalVersion, replacement) {\n  const replacementText = replacement ? `, use ${replacement} instead` : \"\";\n  const warningText = `Deprecation warning: ${removedItem} will be removed in version ${removalVersion}${replacementText}.`;\n  warnOnce(warningText);\n}\n\n// ../shared/src/errors.ts\nvar errorReporter;\nfunction reportError({\n  error: maybeError,\n  tags,\n  extras,\n  caller\n}) {\n  assert(errorReporter, \"Set up an error callback with setErrorReporter, or configure Sentry with initializeEnvironment\");\n  const error = reportableError(maybeError, caller);\n  errorReporter({ error, tags: { ...error.tags, ...tags }, extras: { ...error.extras, ...extras } });\n  return error;\n}\nfunction reportableError(error, caller) {\n  if (error instanceof Error) {\n    return error;\n  }\n  return new UnhandledError(error, caller);\n}\nvar UnhandledError = class extends Error {\n  constructor(error, caller) {\n    const message = error ? JSON.stringify(error) : \"No error message provided\";\n    super(message);\n    this.message = message;\n    if (caller && Error.captureStackTrace) {\n      Error.captureStackTrace(this, caller);\n    } else {\n      try {\n        throw new Error();\n      } catch (e) {\n        this.stack = e.stack;\n      }\n    }\n  }\n};\n\n// ../shared/src/ServiceMap.ts\nvar cachedServiceMap;\nfunction getServiceMap() {\n  if (cachedServiceMap)\n    return cachedServiceMap;\n  cachedServiceMap = extractServiceMap();\n  return cachedServiceMap;\n}\nfunction extractServiceMap() {\n  var _a, _b, _c;\n  const location = window.location;\n  let services = (_a = window == null ? void 0 : window.bootstrap) == null ? void 0 : _a.services;\n  if (services) {\n    return services;\n  }\n  let topOrigin;\n  try {\n    const topWindow = window.top;\n    topOrigin = topWindow.location.origin;\n    services = (_c = (_b = window.top) == null ? void 0 : _b.bootstrap) == null ? void 0 : _c.services;\n    if (services) {\n      return services;\n    }\n  } catch (e) {\n  }\n  if (topOrigin && topOrigin !== location.origin) {\n    throw Error(`Unexpectedly embedded by ${topOrigin} (expected ${location.origin})`);\n  }\n  if (location.origin.endsWith(\"framer.com\") || location.origin.endsWith(\"framer.dev\")) {\n    throw Error(\"ServiceMap data was not provided in document\");\n  }\n  try {\n    const servicesJSON = new URLSearchParams(location.search).get(\"services\") || new URLSearchParams(location.hash.substring(1)).get(\"services\");\n    if (servicesJSON) {\n      services = JSON.parse(servicesJSON);\n    }\n  } catch (e) {\n  }\n  if (services && typeof services === \"object\" && services.api) {\n    return services;\n  }\n  throw Error(\"ServiceMap requested but not available\");\n}\n\n// ../shared/src/logger.ts\nfunction jsonSafeCopy(obj, depth = 0, seen = new Set()) {\n  var _a, _b;\n  if (obj === null)\n    return obj;\n  const type = typeof obj;\n  if (type === \"function\")\n    return `[Function: ${(_a = obj.name) != null ? _a : \"unknown\"}]`;\n  if (type !== \"object\")\n    return obj;\n  if (obj instanceof Error)\n    return `[${obj.toString()}]`;\n  if (seen.has(obj))\n    return \"[Circular]\";\n  if (depth > 2)\n    return \"...\";\n  seen.add(obj);\n  try {\n    if (typeof obj.toJSON === \"function\") {\n      return jsonSafeCopy(obj.toJSON(), depth + 1, seen);\n    } else if (Array.isArray(obj)) {\n      return obj.map((v) => jsonSafeCopy(v, depth + 1, seen));\n    } else if (Object.getPrototypeOf(obj) !== Object.prototype) {\n      return `[Object: ${obj.__class || ((_b = obj.constructor) == null ? void 0 : _b.name)}]`;\n    } else {\n      const result = {};\n      for (const [key6, v] of Object.entries(obj)) {\n        result[key6] = jsonSafeCopy(v, depth + 1, seen);\n      }\n      return result;\n    }\n  } catch (e) {\n    return `[Throws: ${e.message}]`;\n  } finally {\n    seen.delete(obj);\n  }\n}\nvar LogLevel;\n(function(LogLevel2) {\n  LogLevel2[LogLevel2[\"Trace\"] = 0] = \"Trace\";\n  LogLevel2[LogLevel2[\"Debug\"] = 1] = \"Debug\";\n  LogLevel2[LogLevel2[\"Info\"] = 2] = \"Info\";\n  LogLevel2[LogLevel2[\"Warn\"] = 3] = \"Warn\";\n  LogLevel2[LogLevel2[\"Error\"] = 4] = \"Error\";\n  LogLevel2[LogLevel2[\"NotLogging\"] = 5] = \"NotLogging\";\n})(LogLevel || (LogLevel = {}));\nvar levelNames = [\"trace\", \"debug\", \"info\", \"warn\", \"error\"];\nvar postfixNames = [\":trace\", \":debug\", \":info\", \":warn\", \":error\"];\nfunction applyLogLevelSpec(spec, all) {\n  for (const s of spec.split(/[ ,]/)) {\n    let match = s.trim();\n    if (match.length === 0)\n      continue;\n    let level = 1;\n    let inverted = false;\n    if (match.startsWith(\"-\")) {\n      match = match.slice(1);\n      level = 3;\n      inverted = true;\n    }\n    for (let i = 0; i <= 4; i++) {\n      const postfix = postfixNames[i];\n      if (match.endsWith(postfix)) {\n        level = i;\n        if (inverted) {\n          level += 1;\n        }\n        match = match.slice(0, match.length - postfix.length);\n        if (match.length === 0) {\n          match = \"*\";\n        }\n        break;\n      }\n    }\n    const regex = new RegExp(\"^\" + match.replace(/[*]/g, \".*\") + \"$\");\n    for (const logger of all) {\n      if (logger.id.match(regex)) {\n        logger.level = level;\n      }\n    }\n  }\n}\nvar LogEntry = class {\n  constructor(logger, level, parts) {\n    this.logger = logger;\n    this.level = level;\n    this.parts = parts;\n    this.time = Date.now();\n  }\n  toMessage() {\n    if (this.stringPrefix)\n      return this.parts;\n    const r = [\n      new Date(this.time).toISOString().substr(-14, 14),\n      levelNames[this.level] + \": [\" + this.logger.id + \"]\"\n    ];\n    let i = 0;\n    for (; i < this.parts.length; i++) {\n      const part = this.parts[i];\n      if (typeof part === \"string\") {\n        r.push(part);\n        continue;\n      }\n      break;\n    }\n    this.stringPrefix = r.join(\" \");\n    this.parts.splice(0, i, this.stringPrefix);\n    return this.parts;\n  }\n  toString() {\n    return this.toMessage().map((part) => {\n      var _a, _b;\n      const type = typeof part;\n      if (type === \"string\")\n        return part;\n      if (type === \"function\")\n        return `[Function: ${(_a = part.name) != null ? _a : \"unknown\"}]`;\n      if (part instanceof Error)\n        return (_b = part.stack) != null ? _b : part.toString();\n      const json = JSON.stringify(jsonSafeCopy(part));\n      if ((json == null ? void 0 : json.length) > 253) {\n        return json.slice(0, 250) + \"...\";\n      }\n      return json;\n    }).join(\" \");\n  }\n};\nvar logLevelSpec = \"app:info\";\nvar isNode = typeof process !== \"undefined\" && !!process.kill;\nvar isCI = isNode && !!process.env.CI;\nif (isCI) {\n  logLevelSpec = \"-:warn\";\n} else if (isNode) {\n  logLevelSpec = \"\";\n}\ntry {\n  if (typeof window !== \"undefined\" && window.localStorage) {\n    logLevelSpec = window.localStorage.logLevel || logLevelSpec;\n  }\n} catch {\n}\ntry {\n  if (typeof process !== \"undefined\") {\n    logLevelSpec = process.env.DEBUG || logLevelSpec;\n  }\n} catch {\n}\ntry {\n  if (typeof window !== \"undefined\") {\n    Object.assign(window, { setLogLevel });\n  }\n} catch {\n}\ntry {\n  if (typeof window !== \"undefined\" && window.postMessage && window.top === window) {\n    window.addEventListener(\"message\", (msg2) => {\n      if (!msg2.data || typeof msg2.data !== \"object\")\n        return;\n      const { loggerId, level, parts, printed } = msg2.data;\n      if (typeof loggerId !== \"string\")\n        return;\n      if (!Array.isArray(parts) || parts.length < 1 || typeof level !== \"number\")\n        return;\n      parts[0] = parts[0].replace(\"[\", \"*[\");\n      const logger = getLogger(loggerId);\n      const entry = new LogEntry(logger, level, parts);\n      entry.stringPrefix = parts[0];\n      replayBuffer.push(entry);\n      if (printed)\n        return;\n      if (logger.level > level)\n        return;\n      console == null ? void 0 : console.log(...entry.toMessage());\n    });\n  }\n} catch {\n}\nvar postLogEntry;\ntry {\n  if (typeof window !== \"undefined\" && window.postMessage && window.top !== window) {\n    postLogEntry = (entry) => {\n      try {\n        const parts = entry.toMessage().map((p) => jsonSafeCopy(p));\n        const logger = entry.logger;\n        const level = entry.level;\n        const printed = logger.level <= entry.level;\n        const data = { loggerId: logger.id, level, parts, printed };\n        window.top.postMessage(data, getServiceMap().app);\n      } catch {\n      }\n    };\n  }\n} catch {\n}\nvar loggers = {};\nvar replayBuffer = [];\nfunction createLogEntry(logger, level, parts) {\n  var _a;\n  const entry = new LogEntry(logger, level, parts);\n  replayBuffer.push(entry);\n  postLogEntry == null ? void 0 : postLogEntry(entry);\n  const oldest = Date.now() - 1e3 * 60 * 60;\n  while (replayBuffer.length > 1e3 || ((_a = replayBuffer[0]) == null ? void 0 : _a.time) < oldest) {\n    replayBuffer.shift();\n  }\n  return entry;\n}\nfunction getLogReplayBuffer() {\n  return replayBuffer;\n}\nfunction getLogger(id) {\n  const existing = loggers[id];\n  if (existing)\n    return existing;\n  const logger = new Logger(id);\n  loggers[id] = logger;\n  applyLogLevelSpec(logLevelSpec, [logger]);\n  return logger;\n}\nfunction setLogLevel(spec, replay = true) {\n  try {\n    if (typeof window !== \"undefined\" && window.localStorage) {\n      window.localStorage.logLevel = spec;\n    }\n  } catch {\n  }\n  const previousSpec = logLevelSpec;\n  logLevelSpec = spec;\n  const all = Object.values(loggers);\n  for (const logger of all) {\n    logger.level = 3;\n  }\n  applyLogLevelSpec(spec, all);\n  if (replay && replayBuffer.length > 0) {\n    console == null ? void 0 : console.log(\"--- LOG REPLAY ---\");\n    for (const entry of replayBuffer) {\n      if (entry.logger.level > entry.level)\n        continue;\n      if (entry.level >= 3) {\n        console == null ? void 0 : console.warn(...entry.toMessage());\n      } else {\n        console == null ? void 0 : console.log(...entry.toMessage());\n      }\n    }\n    console == null ? void 0 : console.log(\"--- END OF LOG REPLAY ---\");\n  }\n  return previousSpec;\n}\nvar Logger = class {\n  constructor(id) {\n    this.id = id;\n    this.level = 3;\n    this.didLog = {};\n    this.trace = (...parts) => {\n      if (this.level > 0)\n        return;\n      const entry = new LogEntry(this, 0, parts);\n      console == null ? void 0 : console.log(...entry.toMessage());\n    };\n    this.debug = (...parts) => {\n      const entry = createLogEntry(this, 1, parts);\n      if (this.level > 1)\n        return;\n      console == null ? void 0 : console.log(...entry.toMessage());\n    };\n    this.info = (...parts) => {\n      const entry = createLogEntry(this, 2, parts);\n      if (this.level > 2)\n        return;\n      console == null ? void 0 : console.info(...entry.toMessage());\n    };\n    this.warn = (...parts) => {\n      const entry = createLogEntry(this, 3, parts);\n      if (this.level > 3)\n        return;\n      console == null ? void 0 : console.warn(...entry.toMessage());\n    };\n    this.warnOncePerMinute = (firstPart, ...parts) => {\n      if (this.didLog[firstPart] > Date.now())\n        return;\n      this.didLog[firstPart] = Date.now() + 1e3 * 60;\n      parts.unshift(firstPart);\n      const entry = createLogEntry(this, 3, parts);\n      if (this.level > 3)\n        return;\n      console == null ? void 0 : console.warn(...entry.toMessage());\n    };\n    this.error = (...parts) => {\n      const entry = createLogEntry(this, 4, parts);\n      if (this.level > 4)\n        return;\n      console == null ? void 0 : console.error(...entry.toMessage());\n    };\n    this.errorOncePerMinute = (firstPart, ...parts) => {\n      if (this.didLog[firstPart] > Date.now())\n        return;\n      this.didLog[firstPart] = Date.now() + 1e3 * 60;\n      parts.unshift(firstPart);\n      const entry = createLogEntry(this, 4, parts);\n      if (this.level > 4)\n        return;\n      console == null ? void 0 : console.error(...entry.toMessage());\n    };\n    this.reportError = (maybeError, extras) => {\n      const logs = getLogReplayBuffer().slice(-100).map((entry) => entry.toString().slice(0, 1e3)).join(\"\\n\");\n      const reportedError = reportError({\n        caller: this.reportError,\n        error: maybeError,\n        tags: {\n          handler: \"logger\",\n          where: this.id\n        },\n        extras: { ...extras, logs }\n      });\n      extras ? this.error(reportedError, extras) : this.error(reportedError);\n    };\n    this.reportErrorOncePerMinute = (error, extras) => {\n      if (!isErrorWithMessage(error) || this.didLog[error.message] > Date.now())\n        return;\n      this.didLog[error.message] = Date.now() + 1e3 * 60;\n      this.reportError(error, extras);\n    };\n  }\n  extend(name) {\n    const id = this.id + \":\" + name;\n    return getLogger(id);\n  }\n  getBufferedMessages() {\n    return replayBuffer.filter((entry) => entry.logger === this);\n  }\n  setLevel(level) {\n    const previous = this.level;\n    this.level = level;\n    return previous;\n  }\n  isLoggingTraceMessages() {\n    return this.level >= 0;\n  }\n};\nfunction isErrorWithMessage(maybeError) {\n  return Object.prototype.hasOwnProperty.call(maybeError, \"message\");\n}\n\n// ../shared/src/moduleIdentifiers.ts\nvar ModuleType;\n(function(ModuleType2) {\n  ModuleType2[\"Canvas\"] = \"canvasComponent\";\n  ModuleType2[\"Code\"] = \"codeFile\";\n  ModuleType2[\"Screen\"] = \"screen\";\n})(ModuleType || (ModuleType = {}));\n\n// ../shared/src/TaskQueues.ts\nvar log = getLogger(\"task-queue\");\n\n// src/animation/Animatable/Animatable.ts\nfunction Animatable(value) {\n  deprecationWarning(\"Animatable()\", \"2.0.0\", \"the new animation API (https://www.framer.com/api/animation/)\");\n  return isAnimatable2(value) ? value : new AnimatableValue(value);\n}\n(function(Animatable3) {\n  function transaction(update) {\n    const transactionId = Math.random();\n    const updatedValues = new Set();\n    const updater = (animatable, value) => {\n      animatable.set(value, transactionId);\n      updatedValues.add(animatable);\n    };\n    update(updater, transactionId);\n    const finishObservers = [];\n    updatedValues.forEach((value) => {\n      finishObservers.push(...value.finishTransaction(transactionId));\n    });\n    finishObservers.forEach((finish) => {\n      finish(transactionId);\n    });\n  }\n  Animatable3.transaction = transaction;\n  function getNumber2(value, defaultValue = 0) {\n    return Animatable3.get(value, defaultValue);\n  }\n  Animatable3.getNumber = getNumber2;\n  function get(value, defaultValue) {\n    if (value === void 0 || value === null) {\n      return defaultValue;\n    }\n    if (isAnimatable2(value)) {\n      return value.get();\n    }\n    return value;\n  }\n  Animatable3.get = get;\n  function objectToValues(object) {\n    if (!object) {\n      return object;\n    }\n    const result = {};\n    for (const key6 in object) {\n      const value = object[key6];\n      if (isAnimatable2(value)) {\n        result[key6] = value.get();\n      } else {\n        result[key6] = value;\n      }\n    }\n    return result;\n  }\n  Animatable3.objectToValues = objectToValues;\n})(Animatable || (Animatable = {}));\nvar onUpdateKey = \"onUpdate\";\nvar finishTransactionKey = \"finishTransaction\";\nfunction isAnimatable2(value) {\n  return value !== null && typeof value === \"object\" && onUpdateKey in value && value[onUpdateKey] instanceof Function && finishTransactionKey in value && value[finishTransactionKey] instanceof Function;\n}\nfunction animatableInterpolation(value, currentInterpolation) {\n  return {\n    interpolate(from, to) {\n      const fromValue = from.get();\n      const toValue = to.get();\n      const result = Animatable(fromValue);\n      return (progress2) => {\n        const v = currentInterpolation.interpolate(fromValue, toValue)(progress2);\n        result.set(v);\n        return result;\n      };\n    },\n    difference(from, to) {\n      const v = from.get();\n      return currentInterpolation.difference(v, to.get());\n    }\n  };\n}\nvar AnimatableValue = class {\n  constructor(value) {\n    this.value = value;\n    this.observers = new Observers();\n  }\n  static interpolationFor(value, currentInterpolation) {\n    if (isAnimatable2(value)) {\n      return animatableInterpolation(value, currentInterpolation);\n    }\n  }\n  get() {\n    return this.value;\n  }\n  set(value, transaction) {\n    const oldValue = this.value;\n    if (isAnimatable2(value)) {\n      value = value.get();\n    }\n    this.value = value;\n    const change = {\n      value,\n      oldValue\n    };\n    this.observers.notify(change, transaction);\n  }\n  finishTransaction(transaction) {\n    return this.observers.finishTransaction(transaction);\n  }\n  onUpdate(handler) {\n    return this.observers.add(handler);\n  }\n};\n\n// src/utils/utils.ts\nfunction isFunction(value) {\n  return value instanceof Function;\n}\nfunction isString2(value) {\n  return typeof value === \"string\";\n}\nfunction isNumber(value) {\n  return typeof value === \"number\";\n}\nfunction isArray(value) {\n  return value instanceof Array;\n}\nfunction isObject(value) {\n  return typeof value === \"object\";\n}\n\n// src/render/style/backgroundImageFromProps.ts\nfunction applyForwardOverrides(background, props) {\n  const { _forwardedOverrideId, _forwardedOverrides, id } = props;\n  const forwardedOverrideId = _forwardedOverrideId != null ? _forwardedOverrideId : id;\n  const src = _forwardedOverrides && forwardedOverrideId ? _forwardedOverrides[forwardedOverrideId] : void 0;\n  if (src && typeof src === \"string\") {\n    background = { ...background, src };\n  }\n  return background;\n}\nfunction backgroundImageFromProps(props) {\n  const { background, image } = props;\n  if (image !== void 0 && background && !BackgroundImage.isImageObject(background)) {\n    return;\n  }\n  let backgroundImage = null;\n  if (isString2(image)) {\n    backgroundImage = { src: image };\n  } else {\n    backgroundImage = Animatable.get(background, null);\n  }\n  if (!BackgroundImage.isImageObject(backgroundImage)) {\n    return;\n  }\n  return applyForwardOverrides(backgroundImage, props);\n}\n\n// src/render/types/NewConstraints.tsx\n\n\n// src/render/utils/roundedNumber.ts\nfunction roundedNumber(value, decimals) {\n  const d = Math.round(Math.abs(decimals));\n  const multiplier = Math.pow(10, d);\n  return Math.round(value * multiplier) / multiplier;\n}\nfunction roundedNumberString(value, decimals) {\n  const result = value.toFixed(decimals);\n  if (decimals === 0) {\n    return result;\n  }\n  return result.replace(/\\.?0+$/, \"\");\n}\nfunction roundWithOffset(value, offset) {\n  if (offset === 0) {\n    return Math.round(value);\n  }\n  offset -= offset | 0;\n  if (offset < 0) {\n    offset = 1 - offset;\n  }\n  return Math.round(value - offset) + offset;\n}\n\n// src/render/types/Point.ts\nfunction Point(x, y) {\n  return { x, y };\n}\n(function(Point2) {\n  Point2.add = (...args) => {\n    return args.reduce((previousValue, currentValue) => {\n      return { x: previousValue.x + currentValue.x, y: previousValue.y + currentValue.y };\n    }, { x: 0, y: 0 });\n  };\n  Point2.subtract = (a2, b2) => {\n    return { x: a2.x - b2.x, y: a2.y - b2.y };\n  };\n  Point2.multiply = (a2, b2) => {\n    return { x: a2.x * b2, y: a2.y * b2 };\n  };\n  Point2.divide = (a2, b2) => {\n    return { x: a2.x / b2, y: a2.y / b2 };\n  };\n  Point2.absolute = (point) => {\n    return {\n      x: Math.abs(point.x),\n      y: Math.abs(point.y)\n    };\n  };\n  Point2.reverse = (point) => {\n    return {\n      x: point.x * -1,\n      y: point.y * -1\n    };\n  };\n  Point2.pixelAligned = (point, offset = { x: 0, y: 0 }) => {\n    return {\n      x: roundWithOffset(point.x, offset.x),\n      y: roundWithOffset(point.y, offset.y)\n    };\n  };\n  Point2.distance = (a2, b2) => {\n    const deltaX = Math.abs(a2.x - b2.x);\n    const deltaY = Math.abs(a2.y - b2.y);\n    return Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n  };\n  Point2.angle = (a2, b2) => {\n    return Math.atan2(b2.y - a2.y, b2.x - a2.x) * 180 / Math.PI - 90;\n  };\n  Point2.isEqual = (a2, b2) => {\n    return a2.x === b2.x && a2.y === b2.y;\n  };\n  Point2.rotationNormalizer = () => {\n    let lastValue;\n    return (value) => {\n      if (typeof lastValue !== \"number\") {\n        lastValue = value;\n      }\n      const diff = lastValue - value;\n      const maxDiff = Math.abs(diff) + 180;\n      const nTimes = Math.floor(maxDiff / 360);\n      if (diff < 180) {\n        value -= nTimes * 360;\n      }\n      if (diff > 180) {\n        value += nTimes * 360;\n      }\n      lastValue = value;\n      return value;\n    };\n  };\n  function center(a2, b2) {\n    return {\n      x: (a2.x + b2.x) / 2,\n      y: (a2.y + b2.y) / 2\n    };\n  }\n  Point2.center = center;\n})(Point || (Point = {}));\n\n// src/render/types/Rect.ts\nvar Rect;\n(function(Rect2) {\n  function equals(rect, other) {\n    if (rect === other)\n      return true;\n    if (!rect || !other)\n      return false;\n    return rect.x === other.x && rect.y === other.y && rect.width === other.width && rect.height === other.height;\n  }\n  Rect2.equals = equals;\n  Rect2.atOrigin = (size2) => {\n    return { ...size2, x: 0, y: 0 };\n  };\n  Rect2.fromTwoPoints = (a2, b2) => {\n    return {\n      x: Math.min(a2.x, b2.x),\n      y: Math.min(a2.y, b2.y),\n      width: Math.abs(a2.x - b2.x),\n      height: Math.abs(a2.y - b2.y)\n    };\n  };\n  Rect2.fromRect = (rect) => {\n    return {\n      x: rect.left,\n      y: rect.top,\n      width: rect.right - rect.left,\n      height: rect.bottom - rect.top\n    };\n  };\n  Rect2.multiply = (rect, n) => {\n    return {\n      x: rect.x * n,\n      y: rect.y * n,\n      width: rect.width * n,\n      height: rect.height * n\n    };\n  };\n  Rect2.divide = (rect, n) => {\n    return Rect2.multiply(rect, 1 / n);\n  };\n  Rect2.offset = (rect, delta2) => {\n    const xOffset = typeof delta2.x === \"number\" ? delta2.x : 0;\n    const yOffset = typeof delta2.y === \"number\" ? delta2.y : 0;\n    return {\n      ...rect,\n      x: rect.x + xOffset,\n      y: rect.y + yOffset\n    };\n  };\n  function inflate(rect, value) {\n    if (value === 0)\n      return rect;\n    const doubleValue = 2 * value;\n    return {\n      x: rect.x - value,\n      y: rect.y - value,\n      width: rect.width + doubleValue,\n      height: rect.height + doubleValue\n    };\n  }\n  Rect2.inflate = inflate;\n  Rect2.pixelAligned = (rect) => {\n    const x = Math.round(rect.x);\n    const y = Math.round(rect.y);\n    const rectMaxX = Math.round(rect.x + rect.width);\n    const rectMaxY = Math.round(rect.y + rect.height);\n    const width = Math.max(rectMaxX - x, 0);\n    const height = Math.max(rectMaxY - y, 0);\n    return { x, y, width, height };\n  };\n  Rect2.halfPixelAligned = (rect) => {\n    const x = Math.round(rect.x * 2) / 2;\n    const y = Math.round(rect.y * 2) / 2;\n    const rectMaxX = Math.round((rect.x + rect.width) * 2) / 2;\n    const rectMaxY = Math.round((rect.y + rect.height) * 2) / 2;\n    const width = Math.max(rectMaxX - x, 1);\n    const height = Math.max(rectMaxY - y, 1);\n    return { x, y, width, height };\n  };\n  Rect2.round = (rect, decimals = 0) => {\n    const x = roundedNumber(rect.x, decimals);\n    const y = roundedNumber(rect.y, decimals);\n    const width = roundedNumber(rect.width, decimals);\n    const height = roundedNumber(rect.height, decimals);\n    return { x, y, width, height };\n  };\n  Rect2.roundToOutside = (rect) => {\n    const x = Math.floor(rect.x);\n    const y = Math.floor(rect.y);\n    const rectMaxX = Math.ceil(rect.x + rect.width);\n    const rectMaxY = Math.ceil(rect.y + rect.height);\n    const width = Math.max(rectMaxX - x, 0);\n    const height = Math.max(rectMaxY - y, 0);\n    return { x, y, width, height };\n  };\n  Rect2.minX = (rect) => {\n    return rect.x;\n  };\n  Rect2.maxX = (rect) => {\n    return rect.x + rect.width;\n  };\n  Rect2.minY = (rect) => {\n    return rect.y;\n  };\n  Rect2.maxY = (rect) => {\n    return rect.y + rect.height;\n  };\n  Rect2.positions = (rect) => {\n    return {\n      minX: rect.x,\n      midX: rect.x + rect.width / 2,\n      maxX: Rect2.maxX(rect),\n      minY: rect.y,\n      midY: rect.y + rect.height / 2,\n      maxY: Rect2.maxY(rect)\n    };\n  };\n  Rect2.center = (rect) => {\n    return {\n      x: rect.x + rect.width / 2,\n      y: rect.y + rect.height / 2\n    };\n  };\n  Rect2.fromPoints = (ps) => {\n    const xValues = ps.map((point) => point.x);\n    const yValues = ps.map((point) => point.y);\n    const x = Math.min(...xValues);\n    const y = Math.min(...yValues);\n    const width = Math.max(...xValues) - x;\n    const height = Math.max(...yValues) - y;\n    return { x, y, width, height };\n  };\n  Rect2.merge = (...rect) => {\n    const min = {\n      x: Math.min(...rect.map(Rect2.minX)),\n      y: Math.min(...rect.map(Rect2.minY))\n    };\n    const max = {\n      x: Math.max(...rect.map(Rect2.maxX)),\n      y: Math.max(...rect.map(Rect2.maxY))\n    };\n    return Rect2.fromTwoPoints(min, max);\n  };\n  Rect2.intersection = (rect1, rect2) => {\n    const x = Math.max(rect1.x, rect2.x);\n    const x2 = Math.min(rect1.x + rect1.width, rect2.x + rect2.width);\n    const y = Math.max(rect1.y, rect2.y);\n    const y2 = Math.min(rect1.y + rect1.height, rect2.y + rect2.height);\n    return { x, y, width: x2 - x, height: y2 - y };\n  };\n  Rect2.points = (rect) => {\n    return [\n      { x: Rect2.minX(rect), y: Rect2.minY(rect) },\n      { x: Rect2.minX(rect), y: Rect2.maxY(rect) },\n      { x: Rect2.maxX(rect), y: Rect2.minY(rect) },\n      { x: Rect2.maxX(rect), y: Rect2.maxY(rect) }\n    ];\n  };\n  Rect2.transform = (rect, matrix) => {\n    const { x: x1, y: y1 } = matrix.transformPoint({ x: rect.x, y: rect.y });\n    const { x: x2, y: y2 } = matrix.transformPoint({ x: rect.x + rect.width, y: rect.y });\n    const { x: x3, y: y3 } = matrix.transformPoint({ x: rect.x + rect.width, y: rect.y + rect.height });\n    const { x: x4, y: y4 } = matrix.transformPoint({ x: rect.x, y: rect.y + rect.height });\n    const x = Math.min(x1, x2, x3, x4);\n    const width = Math.max(x1, x2, x3, x4) - x;\n    const y = Math.min(y1, y2, y3, y4);\n    const height = Math.max(y1, y2, y3, y4) - y;\n    return { x, y, width, height };\n  };\n  Rect2.containsPoint = (rect, point) => {\n    if (point.x < Rect2.minX(rect)) {\n      return false;\n    }\n    if (point.x > Rect2.maxX(rect)) {\n      return false;\n    }\n    if (point.y < Rect2.minY(rect)) {\n      return false;\n    }\n    if (point.y > Rect2.maxY(rect)) {\n      return false;\n    }\n    if (isNaN(rect.x)) {\n      return false;\n    }\n    if (isNaN(rect.y)) {\n      return false;\n    }\n    return true;\n  };\n  Rect2.containsRect = (rectA, rectB) => {\n    for (const point of Rect2.points(rectB)) {\n      if (!Rect2.containsPoint(rectA, point)) {\n        return false;\n      }\n    }\n    return true;\n  };\n  Rect2.toCSS = (rect) => {\n    return {\n      display: \"block\",\n      transform: `translate(${rect.x}px, ${rect.y}px)`,\n      width: `${rect.width}px`,\n      height: `${rect.height}px`\n    };\n  };\n  Rect2.inset = (rect, n) => {\n    return {\n      x: rect.x + n,\n      y: rect.y + n,\n      width: Math.max(0, rect.width - 2 * n),\n      height: Math.max(0, rect.height - 2 * n)\n    };\n  };\n  Rect2.intersects = (rectA, rectB) => {\n    return !(rectB.x >= Rect2.maxX(rectA) || Rect2.maxX(rectB) <= rectA.x || rectB.y >= Rect2.maxY(rectA) || Rect2.maxY(rectB) <= rectA.y);\n  };\n  Rect2.overlapHorizontally = (rectA, rectB) => {\n    const aMax = Rect2.maxX(rectA);\n    const bMax = Rect2.maxX(rectB);\n    return aMax > rectB.x && bMax > rectA.x;\n  };\n  Rect2.overlapVertically = (rectA, rectB) => {\n    const aMax = Rect2.maxY(rectA);\n    const bMax = Rect2.maxY(rectB);\n    return aMax > rectB.y && bMax > rectA.y;\n  };\n  Rect2.doesNotIntersect = (rect, rects) => {\n    return rects.find((comparingRect) => {\n      return Rect2.intersects(comparingRect, rect);\n    }) === void 0;\n  };\n  Rect2.isEqual = (rectA, rectB) => {\n    if (rectA && rectB) {\n      const { x, y, width, height } = rectA;\n      return rectB.x === x && rectB.y === y && rectB.width === width && rectB.height === height;\n    } else {\n      return rectA === rectB;\n    }\n  };\n  Rect2.cornerPoints = (rect) => {\n    const rectMinX = rect.x;\n    const rectMaxX = rect.x + rect.width;\n    const rectMinY = rect.y;\n    const rectMaxY = rect.y + rect.height;\n    const corner1 = { x: rectMinX, y: rectMinY };\n    const corner2 = { x: rectMaxX, y: rectMinY };\n    const corner3 = { x: rectMaxX, y: rectMaxY };\n    const corner4 = { x: rectMinX, y: rectMaxY };\n    return [corner1, corner2, corner3, corner4];\n  };\n  Rect2.midPoints = (rect) => {\n    const rectMinX = rect.x;\n    const rectMidX = rect.x + rect.width / 2;\n    const rectMaxX = rect.x + rect.width;\n    const rectMinY = rect.y;\n    const rectMidY = rect.y + rect.height / 2;\n    const rectMaxY = rect.y + rect.height;\n    const corner1 = { x: rectMidX, y: rectMinY };\n    const corner2 = { x: rectMaxX, y: rectMidY };\n    const corner3 = { x: rectMidX, y: rectMaxY };\n    const corner4 = { x: rectMinX, y: rectMidY };\n    return [corner1, corner2, corner3, corner4];\n  };\n  Rect2.pointDistance = (rect, point) => {\n    let x = 0;\n    let y = 0;\n    if (point.x < rect.x) {\n      x = rect.x - point.x;\n    } else if (point.x > Rect2.maxX(rect)) {\n      x = point.x - Rect2.maxX(rect);\n    }\n    if (point.y < rect.y) {\n      y = rect.y - point.y;\n    } else if (point.y > Rect2.maxY(rect)) {\n      y = point.y - Rect2.maxY(rect);\n    }\n    return Point.distance({ x, y }, { x: 0, y: 0 });\n  };\n  const fromAnyDefaults = {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  };\n  Rect2.fromAny = (rect, defaults = fromAnyDefaults) => {\n    return {\n      x: rect.x || defaults.x,\n      y: rect.y || defaults.y,\n      width: rect.width || defaults.width,\n      height: rect.height || defaults.height\n    };\n  };\n})(Rect || (Rect = {}));\n\n// src/render/utils/isFiniteNumber.ts\nfunction isFiniteNumber(value) {\n  return typeof value === \"number\" && isFinite(value);\n}\nfunction finiteNumber(value) {\n  return isFiniteNumber(value) ? value : void 0;\n}\n\n// src/utils/type-guards.ts\nfunction isEmpty(obj) {\n  return !obj || !Object.keys(obj).length && obj.constructor === Object;\n}\nfunction isReactElement(test2) {\n  return typeof test2 !== \"string\" && typeof test2 !== \"number\";\n}\nfunction isReactChild(test2) {\n  return test2 !== null && typeof test2 !== \"undefined\" && typeof test2 !== \"boolean\" && !isEmpty(test2);\n}\n\n// src/render/types/Constraints.ts\nvar constraintDefaults = {\n  left: null,\n  right: null,\n  top: null,\n  bottom: null,\n  centerX: \"50%\",\n  centerY: \"50%\",\n  aspectRatio: null,\n  parentSize: null,\n  width: 100,\n  height: 100\n};\nvar DimensionType;\n(function(DimensionType2) {\n  DimensionType2[DimensionType2[\"FixedNumber\"] = 0] = \"FixedNumber\";\n  DimensionType2[DimensionType2[\"Percentage\"] = 1] = \"Percentage\";\n  DimensionType2[DimensionType2[\"Auto\"] = 2] = \"Auto\";\n  DimensionType2[DimensionType2[\"FractionOfFreeSpace\"] = 3] = \"FractionOfFreeSpace\";\n})(DimensionType || (DimensionType = {}));\nfunction isConstraintSupportingChild(child) {\n  if (!isReactChild(child) || !isReactElement(child)) {\n    return false;\n  }\n  return true;\n}\nvar ConstraintMask;\n(function(ConstraintMask2) {\n  ConstraintMask2.quickfix = (constraints) => {\n    if (constraints.widthType === 2 || constraints.heightType === 2) {\n      constraints.aspectRatio = null;\n    }\n    if (isFiniteNumber(constraints.aspectRatio)) {\n      if (constraints.left && constraints.right || constraints.top && constraints.bottom) {\n        constraints.widthType = 0;\n        constraints.heightType = 0;\n      }\n      if (constraints.left && constraints.right && constraints.top && constraints.bottom) {\n        constraints.bottom = false;\n      }\n      if (constraints.widthType !== 0 && constraints.heightType !== 0) {\n        constraints.heightType = 0;\n      }\n    }\n    if (constraints.left && constraints.right) {\n      if (constraints.fixedSize || constraints.widthType === 2) {\n        constraints.right = false;\n      }\n      constraints.widthType = 0;\n    }\n    if (constraints.top && constraints.bottom) {\n      if (constraints.fixedSize || constraints.heightType === 2) {\n        constraints.bottom = false;\n      }\n      constraints.heightType = 0;\n    }\n    return constraints;\n  };\n})(ConstraintMask || (ConstraintMask = {}));\nfunction valueToDimensionType(value) {\n  if (typeof value === \"string\") {\n    const trimmedValue = value.trim();\n    if (trimmedValue === \"auto\")\n      return 2;\n    if (trimmedValue.endsWith(\"fr\"))\n      return 3;\n    if (trimmedValue.endsWith(\"%\"))\n      return 1;\n  }\n  return 0;\n}\nvar ConstraintValues;\n(function(ConstraintValues2) {\n  ConstraintValues2.fromProperties = (props) => {\n    const { left, right, top, bottom, width, height, centerX, centerY, aspectRatio, autoSize } = props;\n    const constraints = ConstraintMask.quickfix({\n      left: isFiniteNumber(left) || isAnimatable2(left),\n      right: isFiniteNumber(right) || isAnimatable2(right),\n      top: isFiniteNumber(top) || isAnimatable2(top),\n      bottom: isFiniteNumber(bottom) || isAnimatable2(bottom),\n      widthType: valueToDimensionType(width),\n      heightType: valueToDimensionType(height),\n      aspectRatio: aspectRatio || null,\n      fixedSize: autoSize === true\n    });\n    let widthValue = null;\n    let heightValue = null;\n    let widthType = 0;\n    let heightType = 0;\n    if (constraints.widthType !== 0 && typeof width === \"string\") {\n      const parsedWidth = parseFloat(width);\n      if (width.endsWith(\"fr\")) {\n        widthType = 3;\n        widthValue = parsedWidth;\n      } else if (width === \"auto\") {\n        widthType = 2;\n      } else {\n        widthType = 1;\n        widthValue = parsedWidth / 100;\n      }\n    } else if (width !== void 0 && typeof width !== \"string\") {\n      widthValue = Animatable.getNumber(width);\n    }\n    if (constraints.heightType !== 0 && typeof height === \"string\") {\n      const parsedHeight = parseFloat(height);\n      if (height.endsWith(\"fr\")) {\n        heightType = 3;\n        heightValue = parsedHeight;\n      } else if (height === \"auto\") {\n        heightType = 2;\n      } else {\n        heightType = 1;\n        heightValue = parseFloat(height) / 100;\n      }\n    } else if (height !== void 0 && typeof height !== \"string\") {\n      heightValue = Animatable.getNumber(height);\n    }\n    let centerAnchorX = 0.5;\n    let centerAnchorY = 0.5;\n    if (centerX) {\n      centerAnchorX = parseFloat(centerX) / 100;\n    }\n    if (centerY) {\n      centerAnchorY = parseFloat(centerY) / 100;\n    }\n    return {\n      left: constraints.left ? Animatable.getNumber(left) : null,\n      right: constraints.right ? Animatable.getNumber(right) : null,\n      top: constraints.top ? Animatable.getNumber(top) : null,\n      bottom: constraints.bottom ? Animatable.getNumber(bottom) : null,\n      widthType,\n      heightType,\n      width: widthValue,\n      height: heightValue,\n      aspectRatio: constraints.aspectRatio || null,\n      centerAnchorX,\n      centerAnchorY\n    };\n  };\n  ConstraintValues2.toMinSize = (values, parentSize, autoSize = null) => {\n    let width = null;\n    let height = null;\n    const parentWidth = parentSize ? parentSize.width : null;\n    const parentHeight = parentSize ? parentSize.height : null;\n    const hOpposingPinsOffset = pinnedOffset(values.left, values.right);\n    if (parentWidth && isFiniteNumber(hOpposingPinsOffset)) {\n      width = parentWidth - hOpposingPinsOffset;\n    } else if (autoSize && values.widthType === 2) {\n      width = autoSize.width;\n    } else if (isFiniteNumber(values.width)) {\n      switch (values.widthType) {\n        case 0:\n          width = values.width;\n          break;\n        case 3:\n          width = 0;\n          break;\n        case 1:\n          if (parentWidth) {\n            width = parentWidth * values.width;\n          }\n          break;\n      }\n    }\n    const vOpposingPinsOffset = pinnedOffset(values.top, values.bottom);\n    if (parentHeight && isFiniteNumber(vOpposingPinsOffset)) {\n      height = parentHeight - vOpposingPinsOffset;\n    } else if (autoSize && values.heightType === 2) {\n      height = autoSize.height;\n    } else if (isFiniteNumber(values.height)) {\n      switch (values.heightType) {\n        case 0:\n          height = values.height;\n          break;\n        case 3:\n          height = 0;\n          break;\n        case 1:\n          if (parentHeight) {\n            height = parentHeight * values.height;\n          }\n          break;\n      }\n    }\n    return sizeAfterApplyingDefaultsAndAspectRatio(width, height, values);\n  };\n  ConstraintValues2.toSize = (values, parentSize, autoSize, freeSpace) => {\n    let width = null;\n    let height = null;\n    const parentWidth = parentSize ? Animatable.getNumber(parentSize.width) : null;\n    const parentHeight = parentSize ? Animatable.getNumber(parentSize.height) : null;\n    const hOpposingPinsOffset = pinnedOffset(values.left, values.right);\n    if (parentWidth && isFiniteNumber(hOpposingPinsOffset)) {\n      width = parentWidth - hOpposingPinsOffset;\n    } else if (autoSize && values.widthType === 2) {\n      width = autoSize.width;\n    } else if (isFiniteNumber(values.width)) {\n      switch (values.widthType) {\n        case 0:\n          width = values.width;\n          break;\n        case 3:\n          width = freeSpace ? freeSpace.freeSpaceInParent.width / freeSpace.freeSpaceUnitDivisor.width * values.width : 0;\n          break;\n        case 1:\n          if (parentWidth) {\n            width = parentWidth * values.width;\n          }\n          break;\n      }\n    }\n    const vOpposingPinsOffset = pinnedOffset(values.top, values.bottom);\n    if (parentHeight && isFiniteNumber(vOpposingPinsOffset)) {\n      height = parentHeight - vOpposingPinsOffset;\n    } else if (autoSize && values.heightType === 2) {\n      height = autoSize.height;\n    } else if (isFiniteNumber(values.height)) {\n      switch (values.heightType) {\n        case 0:\n          height = values.height;\n          break;\n        case 3:\n          height = freeSpace ? freeSpace.freeSpaceInParent.height / freeSpace.freeSpaceUnitDivisor.height * values.height : 0;\n          break;\n        case 1:\n          if (parentHeight) {\n            height = parentHeight * values.height;\n          }\n          break;\n      }\n    }\n    return sizeAfterApplyingDefaultsAndAspectRatio(width, height, values);\n  };\n  ConstraintValues2.toRect = (values, parentSize, autoSize = null, pixelAlign = false, freeSpace = null) => {\n    let x = values.left || 0;\n    let y = values.top || 0;\n    let width = null;\n    let height = null;\n    const parentWidth = parentSize ? Animatable.getNumber(parentSize.width) : null;\n    const parentHeight = parentSize ? Animatable.getNumber(parentSize.height) : null;\n    const hOpposingPinsOffset = pinnedOffset(values.left, values.right);\n    if (parentWidth && isFiniteNumber(hOpposingPinsOffset)) {\n      width = parentWidth - hOpposingPinsOffset;\n    } else if (autoSize && values.widthType === 2) {\n      width = autoSize.width;\n    } else if (isFiniteNumber(values.width)) {\n      switch (values.widthType) {\n        case 0:\n          width = values.width;\n          break;\n        case 3:\n          width = freeSpace ? freeSpace.freeSpaceInParent.width / freeSpace.freeSpaceUnitDivisor.width * values.width : null;\n          break;\n        case 1:\n          if (parentWidth) {\n            width = parentWidth * values.width;\n          }\n          break;\n      }\n    }\n    const vOpposingPinsOffset = pinnedOffset(values.top, values.bottom);\n    if (parentHeight && isFiniteNumber(vOpposingPinsOffset)) {\n      height = parentHeight - vOpposingPinsOffset;\n    } else if (autoSize && values.heightType === 2) {\n      height = autoSize.height;\n    } else if (isFiniteNumber(values.height)) {\n      switch (values.heightType) {\n        case 0:\n          height = values.height;\n          break;\n        case 3:\n          height = freeSpace ? freeSpace.freeSpaceInParent.height / freeSpace.freeSpaceUnitDivisor.height * values.height : null;\n          break;\n        case 1:\n          if (parentHeight) {\n            height = parentHeight * values.height;\n          }\n          break;\n      }\n    }\n    const sizeWithDefaults = sizeAfterApplyingDefaultsAndAspectRatio(width, height, values);\n    width = sizeWithDefaults.width;\n    height = sizeWithDefaults.height;\n    if (values.left !== null) {\n      x = values.left;\n    } else if (parentWidth && values.right !== null) {\n      x = parentWidth - values.right - width;\n    } else if (parentWidth) {\n      x = values.centerAnchorX * parentWidth - width / 2;\n    }\n    if (values.top !== null) {\n      y = values.top;\n    } else if (parentHeight && values.bottom !== null) {\n      y = parentHeight - values.bottom - height;\n    } else if (parentHeight) {\n      y = values.centerAnchorY * parentHeight - height / 2;\n    }\n    const f = { x, y, width, height };\n    if (pixelAlign) {\n      return Rect.pixelAligned(f);\n    }\n    return f;\n  };\n})(ConstraintValues || (ConstraintValues = {}));\nvar defaultWidth = 200;\nvar defaultHeight = 200;\nfunction sizeAfterApplyingDefaultsAndAspectRatio(width, height, values) {\n  let w = isFiniteNumber(width) ? width : defaultWidth;\n  let h = isFiniteNumber(height) ? height : defaultHeight;\n  if (isFiniteNumber(values.aspectRatio) && values.aspectRatio > 0) {\n    if (isFiniteNumber(values.left) && isFiniteNumber(values.right)) {\n      h = w / values.aspectRatio;\n    } else if (isFiniteNumber(values.top) && isFiniteNumber(values.bottom)) {\n      w = h * values.aspectRatio;\n    } else if (values.widthType !== 0) {\n      h = w / values.aspectRatio;\n    } else {\n      w = h * values.aspectRatio;\n    }\n  }\n  return {\n    width: w,\n    height: h\n  };\n}\nfunction pinnedOffset(start, end) {\n  if (!isFiniteNumber(start) || !isFiniteNumber(end))\n    return null;\n  return start + end;\n}\nfunction getMergedConstraintsProps(props, constraints) {\n  const result = {};\n  if (props.constraints) {\n    result.constraints = { ...props.constraints, ...constraints };\n  } else {\n    Object.assign(result, constraints);\n  }\n  return result;\n}\n\n// src/render/types/NewConstraints.tsx\nfunction isString3(t) {\n  return typeof t === \"string\";\n}\nfunction containsInvalidStringValues(props) {\n  const { left, right, top, bottom, center } = props;\n  if ([right, bottom].some(isString3)) {\n    return true;\n  }\n  if (isString3(left) && (!center || center === \"y\")) {\n    return true;\n  }\n  if (isString3(top) && (!center || center === \"x\")) {\n    return true;\n  }\n  return false;\n}\nfunction constraintsEnabled(props) {\n  const { _constraints } = props;\n  if (!_constraints) {\n    return false;\n  }\n  if (containsInvalidStringValues(props)) {\n    return false;\n  }\n  return _constraints.enabled;\n}\nfunction sizeFromFiniteNumberProps(props) {\n  const { size: size2 } = props;\n  let { width, height } = props;\n  if (isFiniteNumber(size2)) {\n    if (width === void 0) {\n      width = size2;\n    }\n    if (height === void 0) {\n      height = size2;\n    }\n  }\n  if (isFiniteNumber(width) && isFiniteNumber(height)) {\n    return {\n      width,\n      height\n    };\n  }\n  return null;\n}\nfunction rectFromFiniteNumberProps(props) {\n  const size2 = sizeFromFiniteNumberProps(props);\n  if (size2 === null) {\n    return null;\n  }\n  const { left, top } = props;\n  if (isFiniteNumber(left) && isFiniteNumber(top)) {\n    return {\n      x: left,\n      y: top,\n      ...size2\n    };\n  }\n  return null;\n}\nfunction calculateRect(props, parentSize, pixelAlign = true) {\n  if (!constraintsEnabled(props) || parentSize === ParentSizeState.Disabled || parentSize === ParentSizeState.DisabledForCurrentLevel) {\n    return rectFromFiniteNumberProps(props);\n  }\n  const constraintValues = getConstraintValues(props);\n  return ConstraintValues.toRect(constraintValues, deprecatedParentSize(parentSize), null, pixelAlign);\n}\nfunction getConstraintValues(props) {\n  const { left, right, top, bottom, center, _constraints, size: size2 } = props;\n  let { width, height } = props;\n  if (width === void 0) {\n    width = size2;\n  }\n  if (height === void 0) {\n    height = size2;\n  }\n  const { aspectRatio, autoSize } = _constraints;\n  const constraintMask = ConstraintMask.quickfix({\n    left: isFiniteNumber(left),\n    right: isFiniteNumber(right),\n    top: isFiniteNumber(top),\n    bottom: isFiniteNumber(bottom),\n    widthType: valueToDimensionType(width),\n    heightType: valueToDimensionType(height),\n    aspectRatio: aspectRatio || null,\n    fixedSize: autoSize === true\n  });\n  let widthValue = null;\n  let heightValue = null;\n  let widthType = DimensionType.FixedNumber;\n  let heightType = DimensionType.FixedNumber;\n  if (constraintMask.widthType !== DimensionType.FixedNumber && typeof width === \"string\") {\n    const parsedWidth = parseFloat(width);\n    if (width.endsWith(\"fr\")) {\n      widthType = DimensionType.FractionOfFreeSpace;\n      widthValue = parsedWidth;\n    } else if (width === \"auto\") {\n      widthType = DimensionType.Auto;\n    } else {\n      widthType = DimensionType.Percentage;\n      widthValue = parsedWidth / 100;\n    }\n  } else if (width !== void 0 && typeof width !== \"string\") {\n    widthValue = width;\n  }\n  if (constraintMask.heightType !== DimensionType.FixedNumber && typeof height === \"string\") {\n    const parsedHeight = parseFloat(height);\n    if (height.endsWith(\"fr\")) {\n      heightType = DimensionType.FractionOfFreeSpace;\n      heightValue = parsedHeight;\n    } else if (height === \"auto\") {\n      heightType = DimensionType.Auto;\n    } else {\n      heightType = DimensionType.Percentage;\n      heightValue = parseFloat(height) / 100;\n    }\n  } else if (height !== void 0 && typeof height !== \"string\") {\n    heightValue = height;\n  }\n  let centerAnchorX = 0.5;\n  let centerAnchorY = 0.5;\n  if (center === true || center === \"x\") {\n    constraintMask.left = false;\n    if (typeof left === \"string\") {\n      centerAnchorX = parseFloat(left) / 100;\n    }\n  }\n  if (center === true || center === \"y\") {\n    constraintMask.top = false;\n    if (typeof top === \"string\") {\n      centerAnchorY = parseFloat(top) / 100;\n    }\n  }\n  return {\n    left: constraintMask.left ? left : null,\n    right: constraintMask.right ? right : null,\n    top: constraintMask.top ? top : null,\n    bottom: constraintMask.bottom ? bottom : null,\n    widthType,\n    heightType,\n    width: widthValue,\n    height: heightValue,\n    aspectRatio: constraintMask.aspectRatio || null,\n    centerAnchorX,\n    centerAnchorY\n  };\n}\nvar ParentSizeState;\n(function(ParentSizeState2) {\n  ParentSizeState2[ParentSizeState2[\"Unknown\"] = 0] = \"Unknown\";\n  ParentSizeState2[ParentSizeState2[\"Disabled\"] = 1] = \"Disabled\";\n  ParentSizeState2[ParentSizeState2[\"DisabledForCurrentLevel\"] = 2] = \"DisabledForCurrentLevel\";\n})(ParentSizeState || (ParentSizeState = {}));\nvar ConstraintsContext = (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)({ size: 0 });\nfunction deprecatedParentSize(parentSize) {\n  if (parentSize === 0 || parentSize === 1 || parentSize === 2) {\n    return null;\n  }\n  return parentSize;\n}\nfunction useParentSize() {\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(ConstraintsContext).size;\n}\nfunction isSize(o) {\n  return typeof o === \"object\";\n}\nvar ProvideParentSize = (props) => {\n  const currentParentSize = useParentSize();\n  const { parentSize, children } = props;\n  const memoKey = isSize(parentSize) ? [parentSize.width, parentSize.height] : [parentSize, -1];\n  const value = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => ({ size: parentSize }), memoKey);\n  if (currentParentSize === 1) {\n    return children ? /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, children) : null;\n  }\n  return /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(ConstraintsContext.Provider, {\n    value\n  }, children);\n};\nvar ConsumeParentSize = ConstraintsContext.Consumer;\nfunction useProvideParentSize(node, parentSize) {\n  return /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(ProvideParentSize, {\n    parentSize\n  }, node);\n}\nfunction useConstraints(props) {\n  const parentSize = useParentSize();\n  return calculateRect(props, parentSize);\n}\n\n// src/render/utils/setDocumentStyles.ts\nvar cache = new Set();\nvar styleElement;\nfunction setDocumentStyles(css) {\n  if (cache.has(css) || typeof document === \"undefined\")\n    return;\n  cache.add(css);\n  if (!styleElement) {\n    styleElement = document.createElement(\"style\");\n    styleElement.type = \"text/css\";\n    document.head && document.head.appendChild(styleElement);\n  }\n  styleElement.appendChild(document.createTextNode(css));\n}\n\n// src/render/types/RenderEnvironment.ts\nvar RenderTarget;\n(function(RenderTarget2) {\n  RenderTarget2[\"canvas\"] = \"CANVAS\";\n  RenderTarget2[\"export\"] = \"EXPORT\";\n  RenderTarget2[\"thumbnail\"] = \"THUMBNAIL\";\n  RenderTarget2[\"preview\"] = \"PREVIEW\";\n})(RenderTarget || (RenderTarget = {}));\nvar RenderEnvironment = {\n  imageBaseURL: \"\",\n  target: RenderTarget.preview,\n  zoom: 1\n};\nfunction executeInRenderEnvironment(customEnvironment, task) {\n  const previousEnvironment = Object.assign({}, RenderEnvironment);\n  Object.assign(RenderEnvironment, customEnvironment);\n  const result = task();\n  Object.assign(RenderEnvironment, previousEnvironment);\n  return result;\n}\nfunction setGlobalRenderEnvironment(environment3) {\n  Object.assign(RenderEnvironment, environment3);\n}\nfunction useRenderEnvironment(target, imageBaseURL, zoom) {\n  let willChangeElements = false;\n  if (RenderEnvironment.imageBaseURL !== imageBaseURL) {\n    RenderEnvironment.imageBaseURL = imageBaseURL;\n    willChangeElements = true;\n  }\n  if (RenderEnvironment.target !== target) {\n    RenderEnvironment.target = target;\n    willChangeElements = true;\n  }\n  if (RenderEnvironment.zoom !== zoom) {\n    RenderEnvironment.zoom = zoom;\n  }\n  return { willChangeElements };\n}\n(function(RenderTarget2) {\n  function current() {\n    return RenderEnvironment.target;\n  }\n  RenderTarget2.current = current;\n  function hasRestrictions() {\n    const target = RenderEnvironment.target;\n    if (target === RenderTarget2.canvas)\n      return true;\n    if (target === RenderTarget2.export)\n      return true;\n    return false;\n  }\n  RenderTarget2.hasRestrictions = hasRestrictions;\n})(RenderTarget || (RenderTarget = {}));\n\n// src/render/utils/injectComponentCSSRules.ts\nvar componentCSSRules = `\n\n[data-framer-component-type] {\n    position: absolute;\n}\n`;\nvar textCSSRules = `\n[data-framer-component-type=\"Text\"] {\n    cursor: inherit;\n}\n\n[data-framer-component-text-autosized] * {\n    white-space: pre;\n}\n`;\nvar stackCSSRules = `\n:not([data-framer-generated]) > [data-framer-stack-content-wrapper] > *,\n:not([data-framer-generated]) > [data-framer-stack-content-wrapper] > [data-framer-component-type],\n:not([data-framer-generated]) > [data-framer-stack-content-wrapper] > [data-framer-stack-gap] > *,\n:not([data-framer-generated]) > [data-framer-stack-content-wrapper] > [data-framer-stack-gap] > [data-framer-component-type] {\n    position: relative;\n}\n\n[data-framer-stack-gap] > * {\n    margin-top: calc(var(--stack-gap-y) / 2);\n    margin-bottom: calc(var(--stack-gap-y) / 2);\n    margin-right: calc(var(--stack-gap-x) / 2);\n    margin-left: calc(var(--stack-gap-x) / 2);\n}\n\n/* This should take the language direction into account */\n[data-framer-stack-direction-reverse=\"false\"]\n[data-framer-stack-gap]\n> *:first-child,\n[data-framer-stack-direction-reverse=\"true\"]\n[data-framer-stack-gap]\n> *:last-child {\n    margin-top: 0;\n    margin-left: 0;\n}\n\n/* This should take the language direction into account */\n[data-framer-stack-direction-reverse=\"false\"]\n[data-framer-stack-gap]\n> *:last-child,\n[data-framer-stack-direction-reverse=\"true\"]\n[data-framer-stack-gap]\n> *:first-child {\n    margin-right: 0;\n    margin-bottom: 0;\n}\n`;\nvar navigationCSSRules = `\nNavigationContainer\n[data-framer-component-type=\"NavigationContainer\"] > *,\n[data-framer-component-type=\"NavigationContainer\"] > [data-framer-component-type] {\n    position: relative;\n}\n`;\nvar scrollCSSRules = `\n[data-framer-component-type=\"Scroll\"]::-webkit-scrollbar {\n    display: none;\n}\n[data-framer-component-type=\"ScrollContentWrapper\"] > * {\n    position: relative;\n}\n`;\nvar nativeScrollCSSRules = `\n[data-framer-component-type=\"NativeScroll\"] {\n    -webkit-overflow-scrolling: touch;\n}\n\n[data-framer-component-type=\"NativeScroll\"] > * {\n    position: relative;\n}\n\n[data-framer-component-type=\"NativeScroll\"].direction-both {\n    overflow-x: scroll;\n    overflow-y: scroll;\n}\n\n[data-framer-component-type=\"NativeScroll\"].direction-vertical {\n    overflow-x: hidden;\n    overflow-y: scroll;\n}\n\n[data-framer-component-type=\"NativeScroll\"].direction-horizontal {\n    overflow-x: scroll;\n    overflow-y: hidden;\n}\n\n[data-framer-component-type=\"NativeScroll\"].direction-vertical > * {\n    width: 100% !important;\n}\n\n[data-framer-component-type=\"NativeScroll\"].direction-horizontal > * {\n    height: 100% !important;\n}\n\n[data-framer-component-type=\"NativeScroll\"].scrollbar-hidden::-webkit-scrollbar {\n    display: none;\n}\n`;\nvar pageContentWrapperWrapperCSSRules = `\n[data-framer-component-type=\"PageContentWrapper\"] > *,\n[data-framer-component-type=\"PageContentWrapper\"] > [data-framer-component-type] {\n    position: relative;\n}\n`;\nvar presenceCSS = `\n[data-is-present=\"false\"], [data-is-present=\"false\"] * {\n    pointer-events: none !important;\n}\n`;\nvar cursorCSS = `\n[data-framer-cursor=\"pointer\"] {\n    cursor: pointer;\n}\n[data-framer-cursor=\"grab\"] {\n    cursor: grab;\n}\n[data-framer-cursor=\"grab\"]:active {\n    cursor: grabbing;\n}\n`;\nvar frameCSSRules = (isPreview) => {\n  return isPreview ? ` [data-framer-component-type=\"Frame\"] * { pointer-events: auto; } ` : ``;\n};\nvar textSelectionCSSRules = (isPreview) => {\n  return isPreview ? `\n        body :not(input):not(textarea):not([contenteditable=\"true\"]) {\n            user-select: none;\n            -webkit-user-select: none;\n        }\n\n        [data-framer-component-type=\"Text\"], [data-framer-component-type=\"Text\"] * {\n        pointer-events: none !important;\n        user-select: none;\n        -webkit-user-select: none;\n    }` : ``;\n};\nvar combineCSSRules = (isPreview) => `\n${componentCSSRules}\n${textCSSRules}\n${stackCSSRules}\n${navigationCSSRules}\n${scrollCSSRules}\n${nativeScrollCSSRules}\n${pageContentWrapperWrapperCSSRules}\n${presenceCSS}\n${cursorCSS}\n${frameCSSRules(isPreview)}\n${textSelectionCSSRules(isPreview)}\n`;\nvar combinedCSSRules = combineCSSRules(false);\nvar combinedCSSRulesForPreview = combineCSSRules(true);\nvar injectComponentCSSRules = () => {\n  const styles = RenderTarget.current() === RenderTarget.preview ? combinedCSSRulesForPreview : combinedCSSRules;\n  setDocumentStyles(styles);\n};\n\n// src/render/utils/processOverrideForwarding.ts\n\nfunction processOverrideForwarding(props, children) {\n  if (!children) {\n    children = props.children;\n    if (!children)\n      return { props, children };\n  }\n  let _forwardedOverrides = props._forwardedOverrides;\n  const extractions = props._overrideForwardingDescription;\n  if (extractions) {\n    _forwardedOverrides = void 0;\n    for (const key6 in extractions) {\n      const propName = extractions[key6];\n      const value = props[propName];\n      if (value !== void 0) {\n        if (!_forwardedOverrides) {\n          _forwardedOverrides = {};\n          props = { ...props };\n        }\n        _forwardedOverrides[key6] = props[propName];\n        delete props[propName];\n      }\n    }\n  }\n  if (!_forwardedOverrides)\n    return { props, children };\n  children = react__WEBPACK_IMPORTED_MODULE_0__.Children.map(children, (child) => {\n    if (!(0,react__WEBPACK_IMPORTED_MODULE_0__.isValidElement)(child))\n      return child;\n    return (0,react__WEBPACK_IMPORTED_MODULE_0__.cloneElement)(child, { _forwardedOverrides });\n  });\n  return { props, children };\n}\n\n// src/render/types/Color/Utils.ts\nfunction modulate(value, rangeA, rangeB, limit = false) {\n  const [fromLow, fromHigh] = rangeA;\n  const [toLow, toHigh] = rangeB;\n  const result = toLow + (value - fromLow) / (fromHigh - fromLow) * (toHigh - toLow);\n  if (limit === true) {\n    if (toLow < toHigh) {\n      if (result < toLow) {\n        return toLow;\n      }\n      if (result > toHigh) {\n        return toHigh;\n      }\n    } else {\n      if (result > toLow) {\n        return toLow;\n      }\n      if (result < toHigh) {\n        return toHigh;\n      }\n    }\n  }\n  return result;\n}\nfunction isNumeric(value) {\n  return !isNaN(value) && isFinite(value);\n}\nfunction percentToFraction(val) {\n  const digits = numberFromString(val);\n  if (digits !== void 0) {\n    if (val.includes(\"%\")) {\n      return digits / 100;\n    }\n    return digits;\n  }\n  return 0;\n}\nfunction numberFromString(input) {\n  const match = input.match(/\\d?\\.?\\d+/);\n  return match ? Number(match[0]) : void 0;\n}\n\n// src/render/types/Color/converters.ts\nvar import_hsluv = __toModule(require_hsluv());\n\n// src/render/types/Color/types.ts\nvar ColorFormat;\n(function(ColorFormat2) {\n  ColorFormat2[\"RGB\"] = \"rgb\";\n  ColorFormat2[\"HSL\"] = \"hsl\";\n  ColorFormat2[\"HSV\"] = \"hsv\";\n  ColorFormat2[\"HEX\"] = \"hex\";\n  ColorFormat2[\"NAME\"] = \"name\";\n})(ColorFormat || (ColorFormat = {}));\nvar ColorMixModelType;\n(function(ColorMixModelType2) {\n  ColorMixModelType2[\"RGB\"] = \"rgb\";\n  ColorMixModelType2[\"RGBA\"] = \"rgba\";\n  ColorMixModelType2[\"HSL\"] = \"hsl\";\n  ColorMixModelType2[\"HSLA\"] = \"hsla\";\n  ColorMixModelType2[\"HUSL\"] = \"husl\";\n})(ColorMixModelType || (ColorMixModelType = {}));\n\n// src/render/types/Color/CSSNames.ts\nvar cssNames = {\n  aliceblue: \"f0f8ff\",\n  antiquewhite: \"faebd7\",\n  aqua: \"0ff\",\n  aquamarine: \"7fffd4\",\n  azure: \"f0ffff\",\n  beige: \"f5f5dc\",\n  bisque: \"ffe4c4\",\n  black: \"000\",\n  blanchedalmond: \"ffebcd\",\n  blue: \"00f\",\n  blueviolet: \"8a2be2\",\n  brown: \"a52a2a\",\n  burlywood: \"deb887\",\n  burntsienna: \"ea7e5d\",\n  cadetblue: \"5f9ea0\",\n  chartreuse: \"7fff00\",\n  chocolate: \"d2691e\",\n  coral: \"ff7f50\",\n  cornflowerblue: \"6495ed\",\n  cornsilk: \"fff8dc\",\n  crimson: \"dc143c\",\n  cyan: \"0ff\",\n  darkblue: \"00008b\",\n  darkcyan: \"008b8b\",\n  darkgoldenrod: \"b8860b\",\n  darkgray: \"a9a9a9\",\n  darkgreen: \"006400\",\n  darkgrey: \"a9a9a9\",\n  darkkhaki: \"bdb76b\",\n  darkmagenta: \"8b008b\",\n  darkolivegreen: \"556b2f\",\n  darkorange: \"ff8c00\",\n  darkorchid: \"9932cc\",\n  darkred: \"8b0000\",\n  darksalmon: \"e9967a\",\n  darkseagreen: \"8fbc8f\",\n  darkslateblue: \"483d8b\",\n  darkslategray: \"2f4f4f\",\n  darkslategrey: \"2f4f4f\",\n  darkturquoise: \"00ced1\",\n  darkviolet: \"9400d3\",\n  deeppink: \"ff1493\",\n  deepskyblue: \"00bfff\",\n  dimgray: \"696969\",\n  dimgrey: \"696969\",\n  dodgerblue: \"1e90ff\",\n  firebrick: \"b22222\",\n  floralwhite: \"fffaf0\",\n  forestgreen: \"228b22\",\n  fuchsia: \"f0f\",\n  gainsboro: \"dcdcdc\",\n  ghostwhite: \"f8f8ff\",\n  gold: \"ffd700\",\n  goldenrod: \"daa520\",\n  gray: \"808080\",\n  green: \"008000\",\n  greenyellow: \"adff2f\",\n  grey: \"808080\",\n  honeydew: \"f0fff0\",\n  hotpink: \"ff69b4\",\n  indianred: \"cd5c5c\",\n  indigo: \"4b0082\",\n  ivory: \"fffff0\",\n  khaki: \"f0e68c\",\n  lavender: \"e6e6fa\",\n  lavenderblush: \"fff0f5\",\n  lawngreen: \"7cfc00\",\n  lemonchiffon: \"fffacd\",\n  lightblue: \"add8e6\",\n  lightcoral: \"f08080\",\n  lightcyan: \"e0ffff\",\n  lightgoldenrodyellow: \"fafad2\",\n  lightgray: \"d3d3d3\",\n  lightgreen: \"90ee90\",\n  lightgrey: \"d3d3d3\",\n  lightpink: \"ffb6c1\",\n  lightsalmon: \"ffa07a\",\n  lightseagreen: \"20b2aa\",\n  lightskyblue: \"87cefa\",\n  lightslategray: \"789\",\n  lightslategrey: \"789\",\n  lightsteelblue: \"b0c4de\",\n  lightyellow: \"ffffe0\",\n  lime: \"0f0\",\n  limegreen: \"32cd32\",\n  linen: \"faf0e6\",\n  magenta: \"f0f\",\n  maroon: \"800000\",\n  mediumaquamarine: \"66cdaa\",\n  mediumblue: \"0000cd\",\n  mediumorchid: \"ba55d3\",\n  mediumpurple: \"9370db\",\n  mediumseagreen: \"3cb371\",\n  mediumslateblue: \"7b68ee\",\n  mediumspringgreen: \"00fa9a\",\n  mediumturquoise: \"48d1cc\",\n  mediumvioletred: \"c71585\",\n  midnightblue: \"191970\",\n  mintcream: \"f5fffa\",\n  mistyrose: \"ffe4e1\",\n  moccasin: \"ffe4b5\",\n  navajowhite: \"ffdead\",\n  navy: \"000080\",\n  oldlace: \"fdf5e6\",\n  olive: \"808000\",\n  olivedrab: \"6b8e23\",\n  orange: \"ffa500\",\n  orangered: \"ff4500\",\n  orchid: \"da70d6\",\n  palegoldenrod: \"eee8aa\",\n  palegreen: \"98fb98\",\n  paleturquoise: \"afeeee\",\n  palevioletred: \"db7093\",\n  papayawhip: \"ffefd5\",\n  peachpuff: \"ffdab9\",\n  peru: \"cd853f\",\n  pink: \"ffc0cb\",\n  plum: \"dda0dd\",\n  powderblue: \"b0e0e6\",\n  purple: \"800080\",\n  rebeccapurple: \"663399\",\n  red: \"f00\",\n  rosybrown: \"bc8f8f\",\n  royalblue: \"4169e1\",\n  saddlebrown: \"8b4513\",\n  salmon: \"fa8072\",\n  sandybrown: \"f4a460\",\n  seagreen: \"2e8b57\",\n  seashell: \"fff5ee\",\n  sienna: \"a0522d\",\n  silver: \"c0c0c0\",\n  skyblue: \"87ceeb\",\n  slateblue: \"6a5acd\",\n  slategray: \"708090\",\n  slategrey: \"708090\",\n  snow: \"fffafa\",\n  springgreen: \"00ff7f\",\n  steelblue: \"4682b4\",\n  tan: \"d2b48c\",\n  teal: \"008080\",\n  thistle: \"d8bfd8\",\n  tomato: \"ff6347\",\n  turquoise: \"40e0d0\",\n  violet: \"ee82ee\",\n  wheat: \"f5deb3\",\n  white: \"fff\",\n  whitesmoke: \"f5f5f5\",\n  yellow: \"ff0\",\n  yellowgreen: \"9acd32\"\n};\n\n// src/render/types/Color/converters.ts\nfunction rgbToHsluv(r, g, b2) {\n  const [h, s, l] = (0, import_hsluv.rgbToHsluv)([r / 255, g / 255, b2 / 255]);\n  return { h, s, l };\n}\nfunction rgbaFromHusl(h, s, l, a2 = 1) {\n  const rgb = (0, import_hsluv.hsluvToRgb)([h, s, l]);\n  return {\n    r: rgb[0] * 255,\n    g: rgb[1] * 255,\n    b: rgb[2] * 255,\n    a: a2\n  };\n}\nfunction hsvToStr(h, s, v, a2) {\n  const _h = Math.round(h);\n  const _s = Math.round(s * 100);\n  const _v = Math.round(v * 100);\n  return a2 === void 0 || a2 === 1 ? \"hsv(\" + _h + \", \" + _s + \"%, \" + _v + \"%)\" : \"hsva(\" + _h + \", \" + _s + \"%, \" + _v + \"%, \" + a2 + \")\";\n}\nfunction rgbToRgb(r, g, b2) {\n  return {\n    r: isNumeric(r) ? bound01(r, 255) * 255 : 0,\n    g: isNumeric(g) ? bound01(g, 255) * 255 : 0,\n    b: isNumeric(b2) ? bound01(b2, 255) * 255 : 0\n  };\n}\nfunction rgbToHex(r, g, b2, allow3Char) {\n  const hex2 = [pad2(Math.round(r).toString(16)), pad2(Math.round(g).toString(16)), pad2(Math.round(b2).toString(16))];\n  if (allow3Char && hex2[0].charAt(0) === hex2[0].charAt(1) && hex2[1].charAt(0) === hex2[1].charAt(1) && hex2[2].charAt(0) === hex2[2].charAt(1)) {\n    return hex2[0].charAt(0) + hex2[1].charAt(0) + hex2[2].charAt(0);\n  }\n  return hex2.join(\"\");\n}\nfunction rgbToHsl(r, g, b2) {\n  let l;\n  let s;\n  const _r = bound01(r, 255);\n  const _g = bound01(g, 255);\n  const _b = bound01(b2, 255);\n  const max = Math.max(_r, _g, _b);\n  const min = Math.min(_r, _g, _b);\n  let h = s = l = (max + min) / 2;\n  if (max === min) {\n    h = s = 0;\n  } else {\n    const d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    switch (max) {\n      case _r:\n        h = (_g - _b) / d + (_g < _b ? 6 : 0);\n        break;\n      case _g:\n        h = (_b - _r) / d + 2;\n        break;\n      case _b:\n        h = (_r - _g) / d + 4;\n        break;\n    }\n    h /= 6;\n  }\n  return { h: h * 360, s, l };\n}\nfunction hue2rgb(p, q, t) {\n  if (t < 0) {\n    t += 1;\n  }\n  if (t > 1) {\n    t -= 1;\n  }\n  if (t < 1 / 6) {\n    return p + (q - p) * 6 * t;\n  }\n  if (t < 1 / 2) {\n    return q;\n  }\n  if (t < 2 / 3) {\n    return p + (q - p) * (2 / 3 - t) * 6;\n  }\n  return p;\n}\nfunction hslToRgb(h, s, l) {\n  let r;\n  let g;\n  let b2;\n  h = bound01(h, 360);\n  s = bound01(s * 100, 100);\n  l = bound01(l * 100, 100);\n  if (s === 0) {\n    r = g = b2 = l;\n  } else {\n    const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n    const p = 2 * l - q;\n    r = hue2rgb(p, q, h + 1 / 3);\n    g = hue2rgb(p, q, h);\n    b2 = hue2rgb(p, q, h - 1 / 3);\n  }\n  return { r: r * 255, g: g * 255, b: b2 * 255 };\n}\nfunction rgbToHsv(r, g, b2) {\n  r = bound01(r, 255);\n  g = bound01(g, 255);\n  b2 = bound01(b2, 255);\n  const max = Math.max(r, g, b2);\n  const min = Math.min(r, g, b2);\n  const d = max - min;\n  let h;\n  const s = max === 0 ? 0 : d / max;\n  const v = max;\n  if (max === min) {\n    h = 0;\n  } else {\n    switch (max) {\n      case r:\n        h = (g - b2) / d + (g < b2 ? 6 : 0);\n        break;\n      case g:\n        h = (b2 - r) / d + 2;\n        break;\n      case b2:\n        h = (r - g) / d + 4;\n        break;\n    }\n    h /= 6;\n  }\n  return { h, s, v };\n}\nfunction hsvToRgb(h, s, v) {\n  h = bound01(h, 360) * 6;\n  s = bound01(s * 100, 100);\n  v = bound01(v * 100, 100);\n  const i = Math.floor(h), f = h - i, p = v * (1 - s), q = v * (1 - f * s), t = v * (1 - (1 - f) * s), mod = i % 6, r = [v, q, p, p, t, v][mod], g = [t, v, v, q, p, p][mod], b2 = [p, p, t, v, v, q][mod];\n  return { r: r * 255, g: g * 255, b: b2 * 255 };\n}\nfunction bound01(n, max) {\n  let _max;\n  let _n;\n  if (typeof max === \"string\")\n    _max = parseFloat(max);\n  else\n    _max = max;\n  if (typeof n === \"string\") {\n    if (isOnePointZero(n)) {\n      n = \"100%\";\n    }\n    const processPercent = isPercentage(n);\n    _n = Math.min(_max, Math.max(0, parseFloat(n)));\n    if (processPercent) {\n      _n = Math.floor(_n * _max) / 100;\n    }\n  } else {\n    _n = n;\n  }\n  if (Math.abs(_n - _max) < 1e-6) {\n    return 1;\n  }\n  return _n % _max / _max;\n}\nfunction isOnePointZero(n) {\n  return typeof n === \"string\" && n.includes(\".\") && parseFloat(n) === 1;\n}\nfunction isPercentage(n) {\n  return typeof n === \"string\" && n.includes(\"%\");\n}\nfunction pad2(char) {\n  if (char.length === 1) {\n    return \"0\" + char;\n  } else {\n    return \"\" + char;\n  }\n}\nvar matchers = function() {\n  const cssInteger = \"[-\\\\+]?\\\\d+%?\";\n  const cssNumber = \"[-\\\\+]?\\\\d*\\\\.\\\\d+%?\";\n  const cssUnit = \"(?:\" + cssNumber + \")|(?:\" + cssInteger + \")\";\n  const permissiveMatch3 = \"[\\\\s|\\\\(]+(\" + cssUnit + \")[,|\\\\s]+(\" + cssUnit + \")[,|\\\\s]+(\" + cssUnit + \")\\\\s*\\\\)?\";\n  const permissiveMatch4 = \"[\\\\s|\\\\(]+(\" + cssUnit + \")[,|\\\\s]+(\" + cssUnit + \")[,|\\\\s]+(\" + cssUnit + \")[,|\\\\s]+(\" + cssUnit + \")\\\\s*\\\\)?\";\n  return {\n    rgb: new RegExp(\"rgb\" + permissiveMatch3),\n    rgba: new RegExp(\"rgba\" + permissiveMatch4),\n    hsl: new RegExp(\"hsl\" + permissiveMatch3),\n    hsla: new RegExp(\"hsla\" + permissiveMatch4),\n    hsv: new RegExp(\"hsv\" + permissiveMatch3),\n    hsva: new RegExp(\"hsva\" + permissiveMatch4),\n    hex3: /^([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n    hex6: /^([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\n    hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n    hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/\n  };\n}();\nfunction stringToObject(inputColor) {\n  if (inputColor.includes(\"gradient(\"))\n    return false;\n  if (inputColor.includes(\"var(\"))\n    return false;\n  const trimLeft = /^[\\s,#]+/;\n  const trimRight = /\\s+$/;\n  let color2 = inputColor.replace(trimLeft, \"\").replace(trimRight, \"\").toLowerCase();\n  let named = false;\n  if (cssNames[color2]) {\n    color2 = cssNames[color2];\n    named = true;\n  }\n  if (color2 === \"transparent\") {\n    return {\n      r: 0,\n      g: 0,\n      b: 0,\n      a: 0,\n      format: ColorFormat.NAME\n    };\n  }\n  let match;\n  if (match = matchers.rgb.exec(color2)) {\n    return {\n      r: parseInt(match[1]),\n      g: parseInt(match[2]),\n      b: parseInt(match[3]),\n      a: 1,\n      format: ColorFormat.RGB\n    };\n  }\n  if (match = matchers.rgba.exec(color2)) {\n    return {\n      r: parseInt(match[1]),\n      g: parseInt(match[2]),\n      b: parseInt(match[3]),\n      a: parseFloat(match[4]),\n      format: ColorFormat.RGB\n    };\n  }\n  if (match = matchers.hsl.exec(color2)) {\n    return {\n      h: parseInt(match[1]),\n      s: percentToFraction(match[2]),\n      l: percentToFraction(match[3]),\n      a: 1,\n      format: ColorFormat.HSL\n    };\n  }\n  if (match = matchers.hsla.exec(color2)) {\n    return {\n      h: parseInt(match[1]),\n      s: percentToFraction(match[2]),\n      l: percentToFraction(match[3]),\n      a: parseFloat(match[4]),\n      format: ColorFormat.HSL\n    };\n  }\n  if (match = matchers.hsv.exec(color2)) {\n    return {\n      h: parseInt(match[1]),\n      s: percentToFraction(match[2]),\n      v: percentToFraction(match[3]),\n      a: 1,\n      format: ColorFormat.HSV\n    };\n  }\n  if (match = matchers.hsva.exec(color2)) {\n    return {\n      h: parseInt(match[1]),\n      s: percentToFraction(match[2]),\n      v: percentToFraction(match[3]),\n      a: parseFloat(match[4]),\n      format: ColorFormat.HSV\n    };\n  }\n  if (match = matchers.hex8.exec(color2)) {\n    return {\n      r: parseIntFromHex(match[1]),\n      g: parseIntFromHex(match[2]),\n      b: parseIntFromHex(match[3]),\n      a: convertHexToDecimal(match[4]),\n      format: named ? ColorFormat.NAME : ColorFormat.HEX\n    };\n  }\n  if (match = matchers.hex6.exec(color2)) {\n    return {\n      r: parseIntFromHex(match[1]),\n      g: parseIntFromHex(match[2]),\n      b: parseIntFromHex(match[3]),\n      a: 1,\n      format: named ? ColorFormat.NAME : ColorFormat.HEX\n    };\n  }\n  if (match = matchers.hex4.exec(color2)) {\n    return {\n      r: parseIntFromHex(`${match[1]}${match[1]}`),\n      g: parseIntFromHex(`${match[2]}${match[2]}`),\n      b: parseIntFromHex(`${match[3]}${match[3]}`),\n      a: convertHexToDecimal(match[4] + \"\" + match[4]),\n      format: named ? ColorFormat.NAME : ColorFormat.HEX\n    };\n  }\n  if (match = matchers.hex3.exec(color2)) {\n    return {\n      r: parseIntFromHex(`${match[1]}${match[1]}`),\n      g: parseIntFromHex(`${match[2]}${match[2]}`),\n      b: parseIntFromHex(`${match[3]}${match[3]}`),\n      a: 1,\n      format: named ? ColorFormat.NAME : ColorFormat.HEX\n    };\n  } else {\n    return false;\n  }\n}\nfunction parseIntFromHex(hex2) {\n  return parseInt(hex2, 16);\n}\nfunction convertHexToDecimal(h) {\n  return parseIntFromHex(h) / 255;\n}\n\n// src/render/types/Color/Color.ts\nvar cache2 = new Map();\nfunction Color(color2, r, g, b2) {\n  if (typeof color2 === \"string\") {\n    let c2 = cache2.get(color2);\n    if (c2)\n      return c2;\n    c2 = createColor(color2);\n    if (c2 === void 0)\n      return { ...Color(\"black\"), isValid: false };\n    cache2.set(color2, c2);\n    return c2;\n  }\n  const created = createColor(color2, r, g, b2);\n  return created !== void 0 ? created : { ...Color(\"black\"), isValid: false };\n}\nfunction createColor(color2, r, g, b2) {\n  if (color2 === \"\")\n    return void 0;\n  const colorData = getCompleteColorStrategy(color2, r, g, b2);\n  if (colorData) {\n    const newColor = {\n      r: colorData.r,\n      g: colorData.g,\n      b: colorData.b,\n      a: colorData.a,\n      h: colorData.h,\n      s: colorData.s,\n      l: colorData.l,\n      initialValue: typeof color2 === \"string\" && colorData.format !== ColorFormat.HSV ? color2 : void 0,\n      roundA: Math.round(100 * colorData.a) / 100,\n      format: colorData.format,\n      mix: Color.mix,\n      toValue: () => Color.toRgbString(newColor)\n    };\n    return newColor;\n  } else {\n    return void 0;\n  }\n}\n(function(Color2) {\n  function inspect2(color2, initialValue) {\n    if (color2.format === ColorFormat.HSL) {\n      return `<${color2.constructor.name} h:${color2.h} s:${color2.s} l:${color2.l} a:${color2.a}>`;\n    } else if (color2.format === ColorFormat.HEX || color2.format === ColorFormat.NAME) {\n      return `<${color2.constructor.name} \"${initialValue}\">`;\n    } else {\n      return `<${color2.constructor.name} r:${color2.r} g:${color2.g} b:${color2.b} a:${color2.a}>`;\n    }\n  }\n  Color2.inspect = inspect2;\n  function isColor(color2) {\n    if (typeof color2 === \"string\") {\n      return Color2.isColorString(color2);\n    } else {\n      return Color2.isColorObject(color2);\n    }\n  }\n  Color2.isColor = isColor;\n  function isColorString2(colorString) {\n    if (typeof colorString === \"string\") {\n      return stringToObject(colorString) !== false;\n    }\n    return false;\n  }\n  Color2.isColorString = isColorString2;\n  function isColorObject(color2) {\n    return color2 && typeof color2 !== \"string\" && typeof color2.r === \"number\" && typeof color2.g === \"number\" && typeof color2.b === \"number\" && typeof color2.h === \"number\" && typeof color2.s === \"number\" && typeof color2.l === \"number\" && typeof color2.a === \"number\" && typeof color2.roundA === \"number\" && typeof color2.format === \"string\";\n  }\n  Color2.isColorObject = isColorObject;\n  function toString(color2) {\n    return Color2.toRgbString(color2);\n  }\n  Color2.toString = toString;\n  function toHex(color2, allow3Char = false) {\n    return rgbToHex(color2.r, color2.g, color2.b, allow3Char);\n  }\n  Color2.toHex = toHex;\n  function toHexString(color2, allow3Char = false) {\n    return `#${Color2.toHex(color2, allow3Char)}`;\n  }\n  Color2.toHexString = toHexString;\n  function toRgbString(color2) {\n    return color2.a === 1 ? \"rgb(\" + Math.round(color2.r) + \", \" + Math.round(color2.g) + \", \" + Math.round(color2.b) + \")\" : \"rgba(\" + Math.round(color2.r) + \", \" + Math.round(color2.g) + \", \" + Math.round(color2.b) + \", \" + color2.roundA + \")\";\n  }\n  Color2.toRgbString = toRgbString;\n  function toHusl(color2) {\n    return {\n      ...rgbToHsluv(color2.r, color2.g, color2.b),\n      a: color2.roundA\n    };\n  }\n  Color2.toHusl = toHusl;\n  function toHslString(color2) {\n    const hsl = Color2.toHsl(color2);\n    const h = Math.round(hsl.h);\n    const s = Math.round(hsl.s * 100);\n    const l = Math.round(hsl.l * 100);\n    return color2.a === 1 ? \"hsl(\" + h + \", \" + s + \"%, \" + l + \"%)\" : \"hsla(\" + h + \", \" + s + \"%, \" + l + \"%, \" + color2.roundA + \")\";\n  }\n  Color2.toHslString = toHslString;\n  function toHsv(color2) {\n    const hsv = rgbToHsv(color2.r, color2.g, color2.b);\n    return { h: hsv.h * 360, s: hsv.s, v: hsv.v, a: color2.a };\n  }\n  Color2.toHsv = toHsv;\n  function toHsvString(color2) {\n    const hsv = rgbToHsv(color2.r, color2.g, color2.b);\n    const h = Math.round(hsv.h * 360);\n    const s = Math.round(hsv.s * 100);\n    const v = Math.round(hsv.v * 100);\n    return color2.a === 1 ? \"hsv(\" + h + \", \" + s + \"%, \" + v + \"%)\" : \"hsva(\" + h + \", \" + s + \"%, \" + v + \"%, \" + color2.roundA + \")\";\n  }\n  Color2.toHsvString = toHsvString;\n  function toName(color2) {\n    if (color2.a === 0) {\n      return \"transparent\";\n    }\n    if (color2.a < 1) {\n      return false;\n    }\n    const hex2 = rgbToHex(color2.r, color2.g, color2.b, true);\n    for (const key6 of Object.keys(cssNames)) {\n      const value = cssNames[key6];\n      if (value === hex2) {\n        return key6;\n      }\n    }\n    return false;\n  }\n  Color2.toName = toName;\n  function toHsl(color2) {\n    return {\n      h: Math.round(color2.h),\n      s: color2.s,\n      l: color2.l,\n      a: color2.a\n    };\n  }\n  Color2.toHsl = toHsl;\n  function toRgb(color2) {\n    return {\n      r: Math.round(color2.r),\n      g: Math.round(color2.g),\n      b: Math.round(color2.b),\n      a: color2.a\n    };\n  }\n  Color2.toRgb = toRgb;\n  function brighten(color2, amount = 10) {\n    const rgb = Color2.toRgb(color2);\n    rgb.r = Math.max(0, Math.min(255, rgb.r - Math.round(255 * -(amount / 100))));\n    rgb.g = Math.max(0, Math.min(255, rgb.g - Math.round(255 * -(amount / 100))));\n    rgb.b = Math.max(0, Math.min(255, rgb.b - Math.round(255 * -(amount / 100))));\n    return Color2(rgb);\n  }\n  Color2.brighten = brighten;\n  function lighten(color2, amount = 10) {\n    const hsl = Color2.toHsl(color2);\n    hsl.l += amount / 100;\n    hsl.l = Math.min(1, Math.max(0, hsl.l));\n    return Color2(hsl);\n  }\n  Color2.lighten = lighten;\n  function darken(color2, amount = 10) {\n    const hsl = Color2.toHsl(color2);\n    hsl.l -= amount / 100;\n    hsl.l = Math.min(1, Math.max(0, hsl.l));\n    return Color2(hsl);\n  }\n  Color2.darken = darken;\n  function saturate(color2, amount = 10) {\n    const hsl = Color2.toHsl(color2);\n    hsl.s += amount / 100;\n    hsl.s = Math.min(1, Math.max(0, hsl.s));\n    return Color2(hsl);\n  }\n  Color2.saturate = saturate;\n  function desaturate(color2, amount = 10) {\n    const hsl = Color2.toHsl(color2);\n    hsl.s -= amount / 100;\n    hsl.s = Math.min(1, Math.max(0, hsl.s));\n    return Color2(hsl);\n  }\n  Color2.desaturate = desaturate;\n  function grayscale(color2) {\n    return Color2.desaturate(color2, 100);\n  }\n  Color2.grayscale = grayscale;\n  function hueRotate(color2, angle) {\n    const hsl = Color2.toHsl(color2);\n    hsl.h += angle;\n    hsl.h = hsl.h > 360 ? hsl.h - 360 : hsl.h;\n    return Color2(hsl);\n  }\n  Color2.hueRotate = hueRotate;\n  function alpha2(color2, a2 = 1) {\n    return Color2({\n      r: color2.r,\n      g: color2.g,\n      b: color2.b,\n      a: a2\n    });\n  }\n  Color2.alpha = alpha2;\n  function transparent(color2) {\n    return Color2.alpha(color2, 0);\n  }\n  Color2.transparent = transparent;\n  function multiplyAlpha(color2, alphaValue = 1) {\n    return Color2({\n      r: color2.r,\n      g: color2.g,\n      b: color2.b,\n      a: color2.a * alphaValue\n    });\n  }\n  Color2.multiplyAlpha = multiplyAlpha;\n  function interpolate2(colorA, colorB, model = ColorMixModelType.RGB) {\n    if (!Color2.isColorObject(colorA) || !Color2.isColorObject(colorB)) {\n      throw new TypeError(\"Both arguments for Color.interpolate must be Color objects\");\n    }\n    return (progress2) => {\n      const color2 = Color2.mixAsColor(colorA, colorB, progress2, false, model);\n      return color2;\n    };\n  }\n  Color2.interpolate = interpolate2;\n  function mix2(from, toColor, { model = ColorMixModelType.RGB } = {}) {\n    const fromColor = typeof from === \"string\" ? Color2(from) : from;\n    const mixer = Color2.interpolate(fromColor, toColor, model);\n    return (p) => Color2.toRgbString(mixer(p));\n  }\n  Color2.mix = mix2;\n  function mixAsColor(colorA, colorB, fraction2 = 0.5, limit = false, model = ColorMixModelType.RGB) {\n    let result = null;\n    if (ColorMixModel.isRGB(model)) {\n      result = Color2({\n        r: modulate(fraction2, [0, 1], [colorA.r, colorB.r], limit),\n        g: modulate(fraction2, [0, 1], [colorA.g, colorB.g], limit),\n        b: modulate(fraction2, [0, 1], [colorA.b, colorB.b], limit),\n        a: modulate(fraction2, [0, 1], [colorA.a, colorB.a], limit)\n      });\n    } else {\n      let hslA, hslB;\n      if (ColorMixModel.isHSL(model)) {\n        hslA = Color2.toHsl(colorA);\n        hslB = Color2.toHsl(colorB);\n      } else {\n        hslA = Color2.toHusl(colorA);\n        hslB = Color2.toHusl(colorB);\n      }\n      if (hslA.s === 0) {\n        hslA.h = hslB.h;\n      } else if (hslB.s === 0) {\n        hslB.h = hslA.h;\n      }\n      const fromH = hslA.h;\n      const toH = hslB.h;\n      let deltaH = toH - fromH;\n      if (deltaH > 180) {\n        deltaH = toH - 360 - fromH;\n      } else if (deltaH < -180) {\n        deltaH = toH + 360 - fromH;\n      }\n      const tween = {\n        h: modulate(fraction2, [0, 1], [fromH, fromH + deltaH], limit),\n        s: modulate(fraction2, [0, 1], [hslA.s, hslB.s], limit),\n        l: modulate(fraction2, [0, 1], [hslA.l, hslB.l], limit),\n        a: modulate(fraction2, [0, 1], [colorA.a, colorB.a], limit)\n      };\n      if (ColorMixModel.isHSL(model)) {\n        result = Color2(tween);\n      } else {\n        result = Color2(rgbaFromHusl(tween.h, tween.s, tween.l, tween.a));\n      }\n    }\n    return result;\n  }\n  Color2.mixAsColor = mixAsColor;\n  function random(alphaValue = 1) {\n    function gen() {\n      return Math.floor(Math.random() * 255);\n    }\n    return Color2(\"rgba(\" + gen() + \", \" + gen() + \", \" + gen() + \", \" + alphaValue + \")\");\n  }\n  Color2.random = random;\n  function grey(amount = 0.5, alphaValue = 1) {\n    amount = Math.floor(amount * 255);\n    return Color2(\"rgba(\" + amount + \", \" + amount + \", \" + amount + \", \" + alphaValue + \")\");\n  }\n  Color2.grey = grey;\n  Color2.gray = Color2.grey;\n  function rgbToHsl2(r, g, b2) {\n    return rgbToHsl(r, g, b2);\n  }\n  Color2.rgbToHsl = rgbToHsl2;\n  Color2.isValidColorProperty = function(name, value) {\n    const isColorKey = name.toLowerCase().slice(-5) === \"color\" || name === \"fill\" || name === \"stroke\";\n    if (isColorKey && typeof value === \"string\" && Color2.isColorString(value)) {\n      return true;\n    }\n    return false;\n  };\n  function difference(colorA, colorB) {\n    const _r = (colorA.r + colorB.r) / 2;\n    const deltaR = colorA.r - colorB.r;\n    const deltaG = colorA.g - colorB.g;\n    const deltaB = colorA.b - colorB.b;\n    const deltaR2 = Math.pow(deltaR, 2);\n    const deltaG2 = Math.pow(deltaG, 2);\n    const deltaB2 = Math.pow(deltaB, 2);\n    return Math.sqrt(2 * deltaR2 + 4 * deltaG2 + 3 * deltaB2 + _r * (deltaR2 - deltaB2) / 256);\n  }\n  Color2.difference = difference;\n  function equal2(colorA, colorB, tolerance = 0.1) {\n    if (Math.abs(colorA.r - colorB.r) >= tolerance) {\n      return false;\n    }\n    if (Math.abs(colorA.g - colorB.g) >= tolerance) {\n      return false;\n    }\n    if (Math.abs(colorA.b - colorB.b) >= tolerance) {\n      return false;\n    }\n    if (Math.abs(colorA.a - colorB.a) * 256 >= tolerance) {\n      return false;\n    }\n    return true;\n  }\n  Color2.equal = equal2;\n})(Color || (Color = {}));\nvar ColorMixModel = {\n  isRGB(colorModel) {\n    return colorModel === ColorMixModelType.RGB || colorModel === ColorMixModelType.RGBA;\n  },\n  isHSL(colorModel) {\n    return colorModel === ColorMixModelType.HSL || colorModel === ColorMixModelType.HSLA;\n  }\n};\nfunction getCompleteColorStrategy(colorOrR, g, b2, a2 = 1) {\n  let completeColor;\n  if (typeof colorOrR === \"number\" && !Number.isNaN(colorOrR) && typeof g === \"number\" && !Number.isNaN(g) && typeof b2 === \"number\" && !Number.isNaN(b2)) {\n    const _r = colorOrR;\n    const _g = g;\n    const _b = b2;\n    const _a = a2;\n    completeColor = getCompleteColorFromRGB({ r: _r, g: _g, b: _b, a: _a });\n  } else if (typeof colorOrR === \"string\") {\n    completeColor = getCompleteColorFromString(colorOrR);\n  } else if (typeof colorOrR === \"object\") {\n    if (colorOrR.hasOwnProperty(\"r\") && colorOrR.hasOwnProperty(\"g\") && colorOrR.hasOwnProperty(\"b\")) {\n      completeColor = getCompleteColorFromRGB(colorOrR);\n    } else {\n      completeColor = getCompleteColorFromHSL(colorOrR);\n    }\n  }\n  return completeColor;\n}\nfunction getCompleteColorFromString(color2) {\n  const result = stringToObject(color2);\n  if (result) {\n    if (result.format === ColorFormat.HSL) {\n      return getCompleteColorFromHSL(result);\n    } else if (result.format === ColorFormat.HSV) {\n      return getCompleteColorFromHSV(result);\n    } else {\n      return getCompleteColorFromRGB(result);\n    }\n  }\n}\nfunction getCompleteColorFromHSV(color2) {\n  const rgb = hsvToRgb(color2.h, color2.s, color2.v);\n  const hsl = rgbToHsl(rgb.r, rgb.g, rgb.b);\n  return {\n    ...hsl,\n    ...rgb,\n    format: ColorFormat.RGB,\n    a: color2.a !== void 0 ? correctAlpha(color2.a) : 1\n  };\n}\nfunction getCompleteColorFromRGB(color2) {\n  const rgb = rgbToRgb(color2.r, color2.g, color2.b);\n  const hsl = rgbToHsl(rgb.r, rgb.g, rgb.b);\n  return {\n    ...hsl,\n    ...rgb,\n    format: ColorFormat.RGB,\n    a: color2.a !== void 0 ? correctAlpha(color2.a) : 1\n  };\n}\nfunction getCompleteColorFromHSL(color2) {\n  let h;\n  let s;\n  let l;\n  let rgb = { r: 0, g: 0, b: 0 };\n  let hsl = { h: 0, s: 0, l: 0 };\n  h = isNumeric(color2.h) ? color2.h : 0;\n  h = (h + 360) % 360;\n  s = isNumeric(color2.s) ? color2.s : 1;\n  if (typeof color2.s === \"string\") {\n    s = numberFromString(color2.s);\n  }\n  l = isNumeric(color2.l) ? color2.l : 0.5;\n  if (typeof color2.l === \"string\") {\n    l = numberFromString(color2.l);\n  }\n  rgb = hslToRgb(h, s, l);\n  hsl = {\n    h,\n    s,\n    l\n  };\n  return {\n    ...rgb,\n    ...hsl,\n    a: color2.a === void 0 ? 1 : color2.a,\n    format: ColorFormat.HSL\n  };\n}\nfunction correctAlpha(alphaValue) {\n  alphaValue = parseFloat(alphaValue);\n  if (alphaValue < 0) {\n    alphaValue = 0;\n  }\n  if (isNaN(alphaValue) || alphaValue > 1) {\n    alphaValue = 1;\n  }\n  return alphaValue;\n}\n\n// src/render/types/Color/ConvertColor.ts\nvar ConvertColor;\n(function(ConvertColor2) {\n  function hueRotate(color2, angle) {\n    return Color.toHslString(Color.hueRotate(Color(color2), angle));\n  }\n  ConvertColor2.hueRotate = hueRotate;\n  function setAlpha(color2, alpha2) {\n    return Color.toRgbString(Color.alpha(Color(color2), alpha2));\n  }\n  ConvertColor2.setAlpha = setAlpha;\n  function getAlpha(color2) {\n    const obj = stringToObject(color2);\n    return obj ? obj.a : 1;\n  }\n  ConvertColor2.getAlpha = getAlpha;\n  function multiplyAlpha(color2, alpha2) {\n    return Color.toRgbString(Color.multiplyAlpha(Color(color2), alpha2));\n  }\n  ConvertColor2.multiplyAlpha = multiplyAlpha;\n  function toHex(color2) {\n    return Color.toHexString(Color(color2)).toUpperCase();\n  }\n  ConvertColor2.toHex = toHex;\n  function toRgb(color2) {\n    return Color.toRgb(Color(color2));\n  }\n  ConvertColor2.toRgb = toRgb;\n  function toRgbString(color2) {\n    return Color.toRgbString(Color(color2));\n  }\n  ConvertColor2.toRgbString = toRgbString;\n  function toHSV(color2) {\n    return Color.toHsv(Color(color2));\n  }\n  ConvertColor2.toHSV = toHSV;\n  function toHSL(color2) {\n    return Color.toHsl(Color(color2));\n  }\n  ConvertColor2.toHSL = toHSL;\n  function toHslString(color2) {\n    return Color.toHslString(Color(color2));\n  }\n  ConvertColor2.toHslString = toHslString;\n  function toHsvString(color2) {\n    return Color.toHsvString(Color(color2));\n  }\n  ConvertColor2.toHsvString = toHsvString;\n  function hsvToHSLString(hsv) {\n    return Color.toHslString(Color(hsvToStr(hsv.h, hsv.s, hsv.v, hsv.a)));\n  }\n  ConvertColor2.hsvToHSLString = hsvToHSLString;\n  function hsvToString(hsv) {\n    return hsvToStr(hsv.h, hsv.s, hsv.v);\n  }\n  ConvertColor2.hsvToString = hsvToString;\n  function rgbaToString(color2) {\n    return Color.toRgbString(Color(color2));\n  }\n  ConvertColor2.rgbaToString = rgbaToString;\n  function hslToString(hsl) {\n    return Color.toRgbString(Color(hsl));\n  }\n  ConvertColor2.hslToString = hslToString;\n  function toColorPickerSquare(h) {\n    return Color.toRgbString(Color({ h, s: 1, l: 0.5, a: 1 }));\n  }\n  ConvertColor2.toColorPickerSquare = toColorPickerSquare;\n  function isValid(color2) {\n    return Color(color2).isValid !== false;\n  }\n  ConvertColor2.isValid = isValid;\n  function equals(a2, b2) {\n    if (typeof a2 === \"string\") {\n      a2 = Color(a2);\n    }\n    if (typeof b2 === \"string\") {\n      b2 = Color(b2);\n    }\n    return Color.equal(a2, b2);\n  }\n  ConvertColor2.equals = equals;\n  function toHexOrRgbaString(input) {\n    const color2 = Color(input);\n    return color2.a !== 1 ? Color.toRgbString(color2) : Color.toHexString(color2);\n  }\n  ConvertColor2.toHexOrRgbaString = toHexOrRgbaString;\n})(ConvertColor || (ConvertColor = {}));\n\n// src/render/utils/transformCustomValues.ts\nvar isCustomValue2 = (v) => {\n  return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nvar isColorProp = (key6) => key6 === \"background\" || key6.endsWith(\"color\") || key6.endsWith(\"Color\");\nvar resolveSingleCustomValue = (key6, v) => {\n  if (v && typeof v === \"object\") {\n    invariant(isCustomValue2(v), \"Motion styles must be numbers, strings, or an instance with a `toValue` and `mix` methods.\");\n    return v.toValue();\n  } else if (isColorProp(key6) && typeof v === \"string\" && Color.isColor(v)) {\n    return Color(v).toValue();\n  }\n  return v;\n};\nvar resolveCustomValues = (key6, v) => {\n  if (Array.isArray(v)) {\n    const numValues = v.length;\n    const resolved = [];\n    for (let i = 0; i < numValues; i++) {\n      resolved.push(resolveSingleCustomValue(key6, v[i]));\n    }\n    return resolved;\n  } else {\n    return resolveSingleCustomValue(key6, v);\n  }\n};\nvar customValueHandlers = {\n  size: {\n    set: (inputValues, outputValues, value) => {\n      if (inputValues.height === void 0) {\n        outputValues.height = value;\n      }\n      if (inputValues.width === void 0) {\n        outputValues.width = value;\n      }\n    },\n    type: px\n  },\n  radius: {\n    set: (inputValues, outputValues, value) => {\n      outputValues.borderRadius = value;\n    },\n    type: px\n  },\n  shadow: {\n    set: (inputValues, outputValues, value) => {\n      outputValues.boxShadow = value;\n    },\n    type: complex\n  }\n};\nvar transformValues = (values) => {\n  const transformedValues = {};\n  for (const key6 in values) {\n    const resolved = resolveCustomValues(key6, values[key6]);\n    const valueHandler = customValueHandlers[key6];\n    if (valueHandler) {\n      const isDefaultType = valueHandler.type && typeof values[key6] === \"number\";\n      const value = isDefaultType ? valueHandler.type.transform(values[key6]) : values[key6];\n      valueHandler.set(values, transformedValues, value);\n    } else {\n      transformedValues[key6] = resolved;\n    }\n  }\n  return transformedValues;\n};\n\n// src/render/presentation/Layer.tsx\n\n\n// src/render/utils/isEqual.ts\nvar isArray2 = Array.isArray;\nvar keyList = Object.keys;\nvar hasProp = Object.prototype.hasOwnProperty;\nfunction equal(a2, b2, deep) {\n  if (a2 === b2)\n    return true;\n  if (a2 && b2 && typeof a2 === \"object\" && typeof b2 === \"object\") {\n    const arrA = isArray2(a2);\n    const arrB = isArray2(b2);\n    let i, length, key6;\n    if (arrA && arrB) {\n      length = a2.length;\n      if (length !== b2.length)\n        return false;\n      for (i = length; i-- !== 0; ) {\n        if (!deep && a2[i] !== b2[i])\n          return false;\n        if (deep && !equal(a2[i], b2[i], true))\n          return false;\n      }\n      return true;\n    }\n    if (arrA !== arrB)\n      return false;\n    const dateA = a2 instanceof Date;\n    const dateB = b2 instanceof Date;\n    if (dateA !== dateB)\n      return false;\n    if (dateA && dateB)\n      return a2.getTime() === b2.getTime();\n    const regexpA = a2 instanceof RegExp;\n    const regexpB = b2 instanceof RegExp;\n    if (regexpA !== regexpB)\n      return false;\n    if (regexpA && regexpB)\n      return a2.toString() === b2.toString();\n    if (typeof a2.equals === \"function\" && typeof b2.equals === \"function\") {\n      return a2.equals(b2);\n    }\n    const keys2 = keyList(a2);\n    length = keys2.length;\n    if (length !== keyList(b2).length)\n      return false;\n    for (i = length; i-- !== 0; ) {\n      if (!hasProp.call(b2, keys2[i]))\n        return false;\n    }\n    for (i = length; i-- !== 0; ) {\n      key6 = keys2[i];\n      if (key6 === \"_owner\" && a2.$$typeof) {\n        continue;\n      }\n      if (!deep && a2[key6] !== b2[key6])\n        return false;\n      if (deep && !equal(a2[key6], b2[key6], true))\n        return false;\n    }\n    return true;\n  }\n  return a2 !== a2 && b2 !== b2;\n}\nfunction isEqual(a2, b2, deep = true) {\n  try {\n    return equal(a2, b2, deep);\n  } catch (error) {\n    if (error.message && error.message.match(/stack|recursion/i) || error.number === -2146828260) {\n      console.warn(\"Warning: isEqual does not handle circular references.\", error.name, error.message);\n      return false;\n    }\n    throw error;\n  }\n}\n\n// src/render/utils/useWebkitFixes.ts\n\nfunction resetSetStyle(element, key6, toValue, microtask = true) {\n  if (!element) {\n    return;\n  }\n  const value = toValue ? toValue : element.style[key6];\n  const reset = () => {\n    element.style[key6] = value;\n  };\n  element.style[key6] = null;\n  if (microtask) {\n    void Promise.resolve().then(reset);\n  } else {\n    setTimeout(reset, 0);\n  }\n}\n\n// src/render/utils/optionalReactDOM.ts\nfunction optionalReactDOM() {\n  if (typeof safeWindow !== \"undefined\" && safeWindow[\"ReactDOM\"]) {\n    return safeWindow[\"ReactDOM\"];\n  }\n  return void 0;\n}\n\n// src/render/utils/elementForComponent.ts\nfunction elementForComponent(component) {\n  const ReactDOM = optionalReactDOM();\n  if (!ReactDOM) {\n    return null;\n  }\n  const element = ReactDOM.findDOMNode(component);\n  return element;\n}\n\n// src/utils/environment.ts\nvar environment_exports = {};\n__export(environment_exports, {\n  deviceFont: () => deviceFont,\n  deviceOS: () => deviceOS,\n  devicePixelRatio: () => devicePixelRatio2,\n  deviceType: () => deviceType,\n  environment: () => environment,\n  isAndroid: () => isAndroid,\n  isBrowser: () => isBrowser2,\n  isChrome: () => isChrome,\n  isDataUrl: () => isDataUrl,\n  isDesktop: () => isDesktop,\n  isEdge: () => isEdge,\n  isFileUrl: () => isFileUrl,\n  isFirefox: () => isFirefox,\n  isFramerX: () => isFramerX,\n  isIOS: () => isIOS,\n  isJP2Supported: () => isJP2Supported,\n  isLocalAssetUrl: () => isLocalAssetUrl,\n  isLocalServerUrl: () => isLocalServerUrl,\n  isLocalUrl: () => isLocalUrl,\n  isMacOS: () => isMacOS,\n  isMobile: () => isMobile,\n  isPhone: () => isPhone,\n  isRelativeUrl: () => isRelativeUrl,\n  isSafari: () => isSafari,\n  isTablet: () => isTablet,\n  isTest: () => isTest,\n  isTouch: () => isTouch,\n  isWebKit: () => isWebKit,\n  isWebPSupported: () => isWebPSupported,\n  isWindows: () => isWindows,\n  webkitVersion: () => webkitVersion\n});\nvar isBrowser2 = () => typeof document === \"object\";\nvar isWebKit = () => navigator.userAgent.includes(\"AppleWebKit/\") && !isChrome() && !isEdge();\nvar webkitVersion = () => {\n  let version2 = -1;\n  const regexp = /AppleWebKit\\/([\\d.]+)/;\n  const result = regexp.exec(navigator.userAgent);\n  if (result) {\n    version2 = parseFloat(result[1]);\n  }\n  return version2;\n};\nvar isChrome = () => /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor) && !isEdge();\nvar isSafari = () => /Safari/.test(navigator.userAgent) && /Apple Computer/.test(navigator.vendor);\nvar isFirefox = () => /Firefox\\/\\d+\\.\\d+$/.test(navigator.userAgent);\nvar isFramerX = () => /FramerX/.test(navigator.userAgent);\nvar isEdge = () => /Edg\\//.test(navigator.userAgent);\nvar isAndroid = () => /(android)/i.test(navigator.userAgent);\nvar isIOS = () => /(iPhone|iPod|iPad)/i.test(navigator.platform);\nvar isMacOS = () => /Mac/.test(navigator.platform);\nvar isWindows = () => /Win/.test(navigator.platform);\nvar isTouch = () => safeWindow.ontouchstart === null && safeWindow.ontouchmove === null && safeWindow.ontouchend === null;\nvar isDesktop = () => deviceType() === \"desktop\";\nvar isPhone = () => deviceType() === \"phone\";\nvar isTablet = () => deviceType() === \"tablet\";\nvar isMobile = () => isPhone() || isTablet();\nvar isFileUrl = (url) => url.startsWith(\"file://\");\nvar isDataUrl = (url) => url.startsWith(\"data:\");\nvar isTest = () => false;\nvar isRelativeUrl = (url) => !/^([a-zA-Z]{1,8}:\\/\\/).*$/.test(url);\nvar isLocalServerUrl = (url) => /[a-zA-Z]{1,8}:\\/\\/127\\.0\\.0\\.1/.test(url) || /[a-zA-Z]{1,8}:\\/\\/localhost/.test(url);\nvar isLocalUrl = (url) => {\n  if (isFileUrl(url))\n    return true;\n  if (isLocalServerUrl(url))\n    return true;\n  return false;\n};\nvar isLocalAssetUrl = (url, baseUrl) => {\n  if (baseUrl === null)\n    baseUrl = safeWindow.location.href;\n  if (isDataUrl(url))\n    return false;\n  if (isLocalUrl(url))\n    return true;\n  if (isRelativeUrl(url) && isLocalUrl(baseUrl))\n    return true;\n  return false;\n};\nvar devicePixelRatio2 = () => safeWindow.devicePixelRatio;\nvar isJP2Supported = function() {\n  if (isFirefox())\n    return false;\n  return isWebKit();\n};\nvar isWebPSupported = () => isChrome();\nvar deviceType = () => {\n  if (/(tablet)|(iPad)|(Nexus 9)/i.test(navigator.userAgent))\n    return \"tablet\";\n  if (/(mobi)/i.test(navigator.userAgent))\n    return \"phone\";\n  return \"desktop\";\n};\nvar deviceOS = () => {\n  if (isMacOS())\n    return \"macos\";\n  if (isIOS())\n    return \"ios\";\n  if (isAndroid())\n    return \"android\";\n  if (isWindows())\n    return \"windows\";\n};\nvar deviceFont = (os) => {\n  if (!os) {\n    os = deviceOS();\n  }\n  const fonts = {\n    apple: \"-apple-system, BlinkMacSystemFont, SF Pro Text, SF UI Text, Helvetica Neue\",\n    google: \"Roboto, Helvetica Neue\",\n    microsoft: \"Segoe UI, Helvetica Neue\"\n  };\n  if (os === \"macos\")\n    return fonts.apple;\n  if (os === \"ios\")\n    return fonts.apple;\n  if (os === \"android\")\n    return fonts.google;\n  if (os === \"windows\")\n    return fonts.microsoft;\n  return fonts.apple;\n};\nvar environment = {\n  isWebKit,\n  webkitVersion,\n  isChrome,\n  isSafari,\n  isFirefox,\n  isFramerX,\n  isEdge,\n  isAndroid,\n  isIOS,\n  isMacOS,\n  isWindows,\n  isTouch,\n  isDesktop,\n  isPhone,\n  isTablet,\n  isMobile,\n  isFileUrl,\n  isDataUrl,\n  isRelativeUrl,\n  isLocalServerUrl,\n  isLocalUrl,\n  isLocalAssetUrl,\n  devicePixelRatio: devicePixelRatio2,\n  isJP2Supported,\n  isWebPSupported,\n  deviceType,\n  deviceOS,\n  deviceFont\n};\n\n// src/render/utils/setLayerBacked.ts\nvar smallValue = \"0.000001px\";\nvar translateZ = ` translateZ(${smallValue})`;\nvar useTranslateZHack = isFramerX() || isSafari() || isTest();\nfunction forceLayerBackingWithMotionStyle(motionStyle) {\n  motionStyle.willChange = \"transform\";\n  const onCanvas = RenderTarget.current() === RenderTarget.canvas;\n  if (useTranslateZHack && onCanvas) {\n    motionStyle.translateZ = smallValue;\n  }\n}\nfunction forceLayerBackingWithCSSProperties(cssProperties) {\n  cssProperties.willChange = \"transform\";\n  setTranslateZHack(cssProperties, true);\n}\nfunction setTranslateZHack(style, enabled) {\n  const onCanvas = RenderTarget.current() === RenderTarget.canvas;\n  if (!useTranslateZHack || !onCanvas) {\n    return;\n  }\n  const transform2 = style.transform || \"\";\n  if (enabled) {\n    const hasTranslateZ = transform2.includes(translateZ);\n    if (!hasTranslateZ) {\n      style.transform = transform2 + translateZ;\n    }\n  } else {\n    style.transform = transform2.replace(translateZ, \"\");\n  }\n}\n\n// src/render/presentation/Layer.tsx\nvar Layer = class extends react__WEBPACK_IMPORTED_MODULE_0__.Component {\n  static applyWillChange(props, style, usingMotionStyle) {\n    if (props.willChangeTransform) {\n      if (usingMotionStyle) {\n        forceLayerBackingWithMotionStyle(style);\n      } else {\n        forceLayerBackingWithCSSProperties(style);\n      }\n    }\n  }\n  shouldComponentUpdate(nextProps, nextState) {\n    return nextProps._needsMeasure || this.state !== nextState || !isEqual(this.props, nextProps);\n  }\n  componentDidUpdate(prevProps) {\n    const element = elementForComponent(this);\n    if (this.props[\"clip\"] && this.props[\"radius\"] === 0 && prevProps[\"radius\"] !== 0) {\n      resetSetStyle(element, \"overflow\", \"hidden\", false);\n    }\n  }\n};\nLayer.defaultProps = {};\n\n// src/render/utils/extractStyleFromProps.ts\nfunction extractStyleFromProps(props, name, styleRef, into) {\n  if (into === void 0) {\n    into = name;\n  }\n  if (props[name] !== void 0) {\n    styleRef[into] = props[name];\n    return;\n  }\n}\n\n// src/utils/string.ts\nvar hash = (value) => {\n  let hasher = 0, i, chr;\n  if (value.length === 0)\n    return hasher;\n  for (i = 0; i < value.length; i++) {\n    chr = value.charCodeAt(i);\n    hasher = (hasher << 5) - hasher + chr;\n    hasher |= 0;\n  }\n  return hasher;\n};\n\n// src/utils/memoize.ts\nfunction manageCache(cache4, maxEntries) {\n  const size2 = cache4.size;\n  if (size2 < maxEntries)\n    return;\n  let i = Math.round(Math.random());\n  for (const key6 of cache4.keys()) {\n    if ((++i & 1) === 1)\n      continue;\n    cache4.delete(key6);\n  }\n}\nfunction memoize(maxEntries, cache4, key6, create) {\n  const r = cache4.get(key6);\n  if (r)\n    return r;\n  manageCache(cache4, maxEntries);\n  const g = create(key6);\n  cache4.set(key6, g);\n  return g;\n}\n\n// src/render/utils/gradientColorStops.ts\nvar CSSVariableRegExp = /var\\(.+\\)/;\nvar colorCache = new Map();\nfunction cachedMultiplyAlpha(s, a2) {\n  const key6 = [s, a2];\n  if (CSSVariableRegExp.test(s)) {\n    return s;\n  }\n  return memoize(1e3, colorCache, key6, () => ConvertColor.multiplyAlpha(s, a2));\n}\nfunction gradientColorStops(gradient, alpha2 = 1) {\n  let stops;\n  if (\"stops\" in gradient) {\n    stops = gradient.stops;\n  } else {\n    stops = [\n      { value: gradient.start, position: 0 },\n      { value: gradient.end, position: 1 }\n    ];\n  }\n  if (alpha2 === 1) {\n    return stops;\n  } else {\n    return stops.map((stop) => ({ ...stop, value: cachedMultiplyAlpha(stop.value, alpha2) }));\n  }\n}\nfunction gradientColorStopsHash(gradient, alpha2) {\n  let result = 0;\n  gradientColorStops(gradient, alpha2).forEach((stop) => {\n    result ^= hash(stop.value) ^ stop.position;\n  });\n  return result;\n}\n\n// src/render/types/SimpleGradient.ts\nvar simpleGradientKeys = [\"start\", \"end\"];\nfunction isSimpleGradient(value) {\n  return value && simpleGradientKeys.every((key6) => key6 in value);\n}\n\n// src/render/types/MultiStopGradient.ts\nvar multiStopGradientKeys = [\"stops\"];\nfunction isMultiStopGradient(value) {\n  return value && multiStopGradientKeys.every((key6) => key6 in value);\n}\n\n// src/render/types/LinearGradient.ts\nvar linearGradientKeys = [\"angle\", \"alpha\"];\nvar LinearGradient;\n(function(LinearGradient2) {\n  function isLinearGradient(value) {\n    return value && linearGradientKeys.every((key6) => key6 in value) && (isSimpleGradient(value) || isMultiStopGradient(value));\n  }\n  LinearGradient2.isLinearGradient = isLinearGradient;\n  function hash2(linearGradient) {\n    return linearGradient.angle ^ gradientColorStopsHash(linearGradient, linearGradient.alpha);\n  }\n  LinearGradient2.hash = hash2;\n  function toCSS(linearGradient, overrideAngle) {\n    const stops = gradientColorStops(linearGradient, linearGradient.alpha);\n    const angle = overrideAngle !== void 0 ? overrideAngle : linearGradient.angle;\n    const cssStops = stops.map((stop) => `${stop.value} ${stop.position * 100}%`);\n    return `linear-gradient(${angle}deg, ${cssStops.join(\", \")})`;\n  }\n  LinearGradient2.toCSS = toCSS;\n})(LinearGradient || (LinearGradient = {}));\n\n// src/render/types/RadialGradient.ts\nvar radialGradientKeys = [\n  \"widthFactor\",\n  \"heightFactor\",\n  \"centerAnchorX\",\n  \"centerAnchorY\",\n  \"alpha\"\n];\nvar RadialGradient;\n(function(RadialGradient2) {\n  function isRadialGradient(value) {\n    return value && radialGradientKeys.every((key6) => key6 in value) && (isSimpleGradient(value) || isMultiStopGradient(value));\n  }\n  RadialGradient2.isRadialGradient = isRadialGradient;\n  function hash2(radialGradient) {\n    return radialGradient.centerAnchorX ^ radialGradient.centerAnchorY ^ radialGradient.widthFactor ^ radialGradient.heightFactor ^ gradientColorStopsHash(radialGradient, radialGradient.alpha);\n  }\n  RadialGradient2.hash = hash2;\n  function toCSS(radialGradient) {\n    const { alpha: alpha2, widthFactor, heightFactor, centerAnchorX, centerAnchorY } = radialGradient;\n    const stops = gradientColorStops(radialGradient, alpha2);\n    const cssStops = stops.map((stop) => `${stop.value} ${stop.position * 100}%`);\n    return `radial-gradient(${widthFactor * 100}% ${heightFactor * 100}% at ${centerAnchorX * 100}% ${centerAnchorY * 100}%, ${cssStops.join(\", \")})`;\n  }\n  RadialGradient2.toCSS = toCSS;\n})(RadialGradient || (RadialGradient = {}));\n\n// src/render/utils/isMotionValue.ts\nvar isMotionValue2 = (v) => v instanceof MotionValue;\n\n// src/render/traits/Background.ts\nfunction collectBackgroundFromProps({ background, backgroundColor }, style) {\n  if (backgroundColor) {\n    if (typeof backgroundColor === \"string\" || isMotionValue2(backgroundColor)) {\n      style.backgroundColor = backgroundColor;\n    } else if (Color.isColorObject(background)) {\n      style.backgroundColor = background.initialValue || Color.toRgbString(background);\n    }\n  } else if (background) {\n    background = Animatable.get(background, null);\n    if (typeof background === \"string\" || isMotionValue2(background)) {\n      style.background = background;\n    } else if (LinearGradient.isLinearGradient(background)) {\n      style.background = LinearGradient.toCSS(background);\n    } else if (RadialGradient.isRadialGradient(background)) {\n      style.background = RadialGradient.toCSS(background);\n    } else if (Color.isColorObject(background)) {\n      style.backgroundColor = background.initialValue || Color.toRgbString(background);\n    }\n  }\n}\n\n// src/render/presentation/Frame/getStyleForFrameProps.ts\nfunction hasLeftAndRight(style) {\n  if (!style)\n    return false;\n  return style.left !== void 0 && style.right !== void 0;\n}\nfunction hasTopAndBottom(style) {\n  if (!style)\n    return false;\n  return style.top !== void 0 && style.bottom !== void 0;\n}\nfunction getStyleForFrameProps(props) {\n  if (!props) {\n    return {};\n  }\n  const style = {};\n  if (props.preserve3d === true) {\n    style.transformStyle = \"preserve-3d\";\n  } else if (props.preserve3d === false) {\n    style.transformStyle = \"flat\";\n  }\n  if (props.backfaceVisible === true) {\n    style.backfaceVisibility = \"visible\";\n  } else if (props.backfaceVisible === false) {\n    style.backfaceVisibility = \"hidden\";\n  }\n  if (style.backfaceVisibility) {\n    style.WebkitBackfaceVisibility = style.backfaceVisibility;\n  }\n  if (props.perspective !== void 0) {\n    style.perspective = style.WebkitPerspective = props.perspective;\n  }\n  if (!props.__fromCanvasComponent) {\n    if (props.center === true) {\n      style.left = \"50%\";\n      style.top = \"50%\";\n    } else {\n      if (props.center === \"x\") {\n        style.left = \"50%\";\n      } else if (props.center === \"y\") {\n        style.top = \"50%\";\n      }\n    }\n  }\n  extractStyleFromProps(props, \"size\", style);\n  extractStyleFromProps(props, \"width\", style);\n  extractStyleFromProps(props, \"height\", style);\n  extractStyleFromProps(props, \"minWidth\", style);\n  extractStyleFromProps(props, \"minHeight\", style);\n  extractStyleFromProps(props, \"top\", style);\n  extractStyleFromProps(props, \"right\", style);\n  extractStyleFromProps(props, \"bottom\", style);\n  extractStyleFromProps(props, \"left\", style);\n  extractStyleFromProps(props, \"position\", style);\n  extractStyleFromProps(props, \"overflow\", style);\n  extractStyleFromProps(props, \"opacity\", style);\n  if (!props._border || !props._border.borderWidth)\n    extractStyleFromProps(props, \"border\", style);\n  extractStyleFromProps(props, \"borderRadius\", style);\n  extractStyleFromProps(props, \"radius\", style, \"borderRadius\");\n  extractStyleFromProps(props, \"color\", style);\n  extractStyleFromProps(props, \"shadow\", style, \"boxShadow\");\n  extractStyleFromProps(props, \"x\", style);\n  extractStyleFromProps(props, \"y\", style);\n  extractStyleFromProps(props, \"z\", style);\n  extractStyleFromProps(props, \"rotate\", style);\n  extractStyleFromProps(props, \"rotateX\", style);\n  extractStyleFromProps(props, \"rotateY\", style);\n  extractStyleFromProps(props, \"rotateZ\", style);\n  extractStyleFromProps(props, \"scale\", style);\n  extractStyleFromProps(props, \"scaleX\", style);\n  extractStyleFromProps(props, \"scaleY\", style);\n  extractStyleFromProps(props, \"skew\", style);\n  extractStyleFromProps(props, \"skewX\", style);\n  extractStyleFromProps(props, \"skewY\", style);\n  extractStyleFromProps(props, \"originX\", style);\n  extractStyleFromProps(props, \"originY\", style);\n  extractStyleFromProps(props, \"originZ\", style);\n  collectBackgroundFromProps(props, style);\n  return style;\n}\n\n// src/render/utils/useLayoutId.ts\n\n\n// src/components/AnimateLayout/LayoutIdContext.tsx\n\n\nvar LayoutIdContext = (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)({\n  getLayoutId: (args) => null,\n  persistLayoutIdCache: () => {\n  },\n  top: false,\n  enabled: true\n});\nfunction LayoutIdProvider({ children }) {\n  const context = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(LayoutIdContext);\n  if (context.top)\n    return /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, children);\n  const cache4 = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)({\n    byId: {},\n    byName: {},\n    byLastId: {},\n    byPossibleId: {},\n    byLastName: {},\n    byLayoutId: {},\n    count: {\n      byId: {},\n      byName: {}\n    }\n  });\n  const screen = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)({\n    byId: {},\n    byName: {},\n    byLastId: {},\n    byPossibleId: {},\n    byLastName: {},\n    byLayoutId: {}\n  });\n  const usedIds = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(new Set()).current;\n  const getLayoutId = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(({ id, name, duplicatedFrom }) => {\n    if (!id)\n      return null;\n    const cacheKey = name ? \"byName\" : \"byId\";\n    const previousId = cache4.current[cacheKey][id];\n    if (previousId)\n      return previousId;\n    const nodeIdentifier = name || id;\n    if (!duplicatedFrom && !usedIds.has(nodeIdentifier) && (!cache4.current.byLayoutId[nodeIdentifier] || cache4.current.byLayoutId[nodeIdentifier] === nodeIdentifier)) {\n      if (cache4.current.count[cacheKey][nodeIdentifier] === void 0) {\n        cache4.current.count[cacheKey][nodeIdentifier] = 0;\n        cache4.current.byLayoutId[nodeIdentifier] = nodeIdentifier;\n        screen.current[cacheKey][id] = nodeIdentifier;\n      }\n      usedIds.add(nodeIdentifier);\n      return nodeIdentifier;\n    }\n    let possibleMatch = void 0;\n    if (duplicatedFrom == null ? void 0 : duplicatedFrom.length) {\n      for (let index = duplicatedFrom.length - 1; index >= 0; index--) {\n        const duplicatedId = duplicatedFrom[index];\n        const match = cache4.current[cacheKey][duplicatedId];\n        const byLastIdMatch = cache4.current.byLastId[duplicatedId];\n        if (byLastIdMatch && !possibleMatch) {\n          const matchedLayoutId = cache4.current.byLayoutId[byLastIdMatch];\n          const shouldUseNamedLastIdMatch = !matchedLayoutId || matchedLayoutId === name;\n          if (byLastIdMatch && !usedIds.has(byLastIdMatch) && (name ? shouldUseNamedLastIdMatch : true)) {\n            possibleMatch = [byLastIdMatch, duplicatedId];\n          }\n        }\n        const previousLayoutId = cache4.current.byLayoutId[match];\n        const shouldUseNamedMatch = !previousLayoutId || previousLayoutId === name;\n        if (match && !usedIds.has(match) && (name ? shouldUseNamedMatch : true)) {\n          screen.current[cacheKey][id] = match;\n          screen.current.byLastId[duplicatedId] = match;\n          usedIds.add(match);\n          return match;\n        }\n      }\n    }\n    const last = cache4.current.byLastId[id];\n    if (last && !usedIds.has(last)) {\n      usedIds.add(last);\n      screen.current.byId[id] = last;\n      return last;\n    }\n    if (possibleMatch) {\n      const [match, duplicatedId] = possibleMatch;\n      screen.current[cacheKey][id] = match;\n      screen.current.byLastId[duplicatedId] = match;\n      usedIds.add(match);\n      return match;\n    }\n    const possible = cache4.current.byPossibleId[id];\n    if (possible && !usedIds.has(possible)) {\n      usedIds.add(possible);\n      screen.current.byId[id] = possible;\n      return possible;\n    }\n    const rootDuplicatedId = duplicatedFrom == null ? void 0 : duplicatedFrom[0];\n    const identifier = name || rootDuplicatedId || id;\n    const value = cache4.current.count[cacheKey][identifier] + 1 || 0;\n    const { layoutId, value: nextValue } = nextLayoutId(identifier, value, usedIds);\n    cache4.current.count[cacheKey][identifier] = nextValue;\n    screen.current[cacheKey][id] = layoutId;\n    if (duplicatedFrom == null ? void 0 : duplicatedFrom.length) {\n      if (!name) {\n        screen.current.byLastId[duplicatedFrom[duplicatedFrom.length - 1]] = layoutId;\n        if (duplicatedFrom.length > 1) {\n          for (let index = 0; index < duplicatedFrom.length - 1; index++) {\n            const possibleId = duplicatedFrom[index];\n            if (!screen.current.byPossibleId[possibleId]) {\n              screen.current.byPossibleId[possibleId] = layoutId;\n            }\n          }\n        }\n      }\n    }\n    screen.current.byLayoutId[layoutId] = nodeIdentifier;\n    usedIds.add(layoutId);\n    return layoutId;\n  }, []);\n  const persistLayoutIdCache = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {\n    cache4.current = {\n      byId: {\n        ...cache4.current.byId,\n        ...screen.current.byId\n      },\n      byLastId: {\n        ...cache4.current.byLastId,\n        ...screen.current.byLastId\n      },\n      byPossibleId: {\n        ...cache4.current.byPossibleId,\n        ...screen.current.byPossibleId\n      },\n      byName: {\n        ...cache4.current.byName,\n        ...screen.current.byName\n      },\n      byLastName: { ...cache4.current.byLastName, ...screen.current.byLastName },\n      byLayoutId: { ...cache4.current.byLayoutId, ...screen.current.byLayoutId },\n      count: {\n        ...cache4.current.count,\n        byName: {}\n      }\n    };\n    screen.current = {\n      byId: {},\n      byName: {},\n      byLastId: {},\n      byPossibleId: {},\n      byLastName: {},\n      byLayoutId: {}\n    };\n    usedIds.clear();\n  }, []);\n  const contextValue = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)({\n    getLayoutId,\n    persistLayoutIdCache,\n    top: true,\n    enabled: true\n  }).current;\n  return /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(LayoutIdContext.Provider, {\n    value: contextValue\n  }, children);\n}\nfunction nextLayoutId(identifier, initialValue, usedIds) {\n  let value = initialValue;\n  let layoutId = value ? `${identifier}-${value}` : identifier;\n  while (usedIds.has(layoutId)) {\n    value++;\n    layoutId = `${identifier}-${value}`;\n  }\n  return { layoutId, value };\n}\nfunction AutomaticLayoutIds({ enabled = true, ...props }) {\n  const context = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(LayoutIdContext);\n  const contextValue = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n    return {\n      ...context,\n      enabled\n    };\n  }, [enabled]);\n  return /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(LayoutIdContext.Provider, {\n    ...props,\n    value: contextValue\n  });\n}\n\n// src/render/utils/useLayoutId.ts\nfunction useLayoutId2(props, { specificLayoutId, postfix } = {}) {\n  const { name, layoutIdKey, duplicatedFrom, __fromCodeComponentNode = false } = props;\n  const { getLayoutId, enabled } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(LayoutIdContext);\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n    if (!enabled)\n      return props.layoutId;\n    const existingLayoutId = specificLayoutId || props.layoutId;\n    if (!existingLayoutId) {\n      if (!layoutIdKey || __fromCodeComponentNode)\n        return void 0;\n    }\n    const layoutIdCandidate = existingLayoutId || getLayoutId({ id: layoutIdKey, name, duplicatedFrom });\n    if (!layoutIdCandidate)\n      return void 0;\n    return postfix ? `${layoutIdCandidate}-${postfix}` : layoutIdCandidate;\n  }, [enabled]);\n}\n\n// src/render/utils/transformTemplate.ts\nfunction transformTemplate(center) {\n  return (_, generated) => {\n    if (center === true) {\n      return `translate(-50%, -50%) ${generated}`;\n    } else {\n      if (center === \"x\") {\n        return `translateX(-50%) ${generated}`;\n      } else if (center === \"y\") {\n        return `translateY(-50%) ${generated}`;\n      }\n    }\n    return generated || \"none\";\n  };\n}\n\n// src/render/utils/useMeasureLayout.ts\n\n\n// src/utils/runtimeInjection.ts\nvar mockWithWarning = (message) => {\n  return () => {\n    warnOnce(message);\n  };\n};\nvar implementation = {\n  useImageSource(image) {\n    return image.src;\n  },\n  useImageElement(image, rect, nodeId) {\n    const element = new Image();\n    element.src = runtime.useImageSource(image, rect, nodeId);\n    return element;\n  }\n};\nvar isRuntimeInjected = false;\nvar runtimeProxy = {\n  get(target, key6, reciever) {\n    if (Reflect.has(target, key6)) {\n      return Reflect.get(target, key6, reciever);\n    }\n    if (isRuntimeInjected) {\n      return mockWithWarning(`${String(key6)} is not available in this version of Framer.`);\n    } else {\n      return mockWithWarning(`${String(key6)} is only available inside of Framer. https://www.framer.com/`);\n    }\n  }\n};\nvar runtime = new Proxy(implementation, runtimeProxy);\nfunction _injectRuntime(injectedRuntime) {\n  Object.assign(implementation, injectedRuntime);\n  isRuntimeInjected = true;\n}\n\n// src/render/utils/nodeIdFromString.ts\nfunction nodeIdFromString(str) {\n  return str.replace(/^id_/, \"\").replace(/\\\\/g, \"\");\n}\n\n// src/render/presentation/ComponentContainerContext.tsx\n\nvar ComponentContainerContext = (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(false);\n\n// src/components/hoc/withMeasuredSize.tsx\n\n\n// src/modules/useForceUpdate.ts\n\nfunction useForceUpdate2() {\n  const [_, setForcedRenderCount] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0);\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => setForcedRenderCount((v) => v + 1), []);\n}\n\n// ../../node_modules/@juggle/resize-observer/lib/utils/resizeObservers.js\nvar resizeObservers = [];\n\n// ../../node_modules/@juggle/resize-observer/lib/algorithms/hasActiveObservations.js\nvar hasActiveObservations = function() {\n  return resizeObservers.some(function(ro) {\n    return ro.activeTargets.length > 0;\n  });\n};\n\n// ../../node_modules/@juggle/resize-observer/lib/algorithms/hasSkippedObservations.js\nvar hasSkippedObservations = function() {\n  return resizeObservers.some(function(ro) {\n    return ro.skippedTargets.length > 0;\n  });\n};\n\n// ../../node_modules/@juggle/resize-observer/lib/algorithms/deliverResizeLoopError.js\nvar msg = \"ResizeObserver loop completed with undelivered notifications.\";\nvar deliverResizeLoopError = function() {\n  var event;\n  if (typeof ErrorEvent === \"function\") {\n    event = new ErrorEvent(\"error\", {\n      message: msg\n    });\n  } else {\n    event = document.createEvent(\"Event\");\n    event.initEvent(\"error\", false, false);\n    event.message = msg;\n  }\n  window.dispatchEvent(event);\n};\n\n// ../../node_modules/@juggle/resize-observer/lib/ResizeObserverBoxOptions.js\nvar ResizeObserverBoxOptions;\n(function(ResizeObserverBoxOptions2) {\n  ResizeObserverBoxOptions2[\"BORDER_BOX\"] = \"border-box\";\n  ResizeObserverBoxOptions2[\"CONTENT_BOX\"] = \"content-box\";\n  ResizeObserverBoxOptions2[\"DEVICE_PIXEL_CONTENT_BOX\"] = \"device-pixel-content-box\";\n})(ResizeObserverBoxOptions || (ResizeObserverBoxOptions = {}));\n\n// ../../node_modules/@juggle/resize-observer/lib/utils/freeze.js\nvar freeze = function(obj) {\n  return Object.freeze(obj);\n};\n\n// ../../node_modules/@juggle/resize-observer/lib/ResizeObserverSize.js\nvar ResizeObserverSize = function() {\n  function ResizeObserverSize2(inlineSize, blockSize) {\n    this.inlineSize = inlineSize;\n    this.blockSize = blockSize;\n    freeze(this);\n  }\n  return ResizeObserverSize2;\n}();\n\n// ../../node_modules/@juggle/resize-observer/lib/DOMRectReadOnly.js\nvar DOMRectReadOnly = function() {\n  function DOMRectReadOnly2(x, y, width, height) {\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n    this.top = this.y;\n    this.left = this.x;\n    this.bottom = this.top + this.height;\n    this.right = this.left + this.width;\n    return freeze(this);\n  }\n  DOMRectReadOnly2.prototype.toJSON = function() {\n    var _a = this, x = _a.x, y = _a.y, top = _a.top, right = _a.right, bottom = _a.bottom, left = _a.left, width = _a.width, height = _a.height;\n    return { x, y, top, right, bottom, left, width, height };\n  };\n  DOMRectReadOnly2.fromRect = function(rectangle) {\n    return new DOMRectReadOnly2(rectangle.x, rectangle.y, rectangle.width, rectangle.height);\n  };\n  return DOMRectReadOnly2;\n}();\n\n// ../../node_modules/@juggle/resize-observer/lib/utils/element.js\nvar isSVG = function(target) {\n  return target instanceof SVGElement && \"getBBox\" in target;\n};\nvar isHidden = function(target) {\n  if (isSVG(target)) {\n    var _a = target.getBBox(), width = _a.width, height = _a.height;\n    return !width && !height;\n  }\n  var _b = target, offsetWidth = _b.offsetWidth, offsetHeight = _b.offsetHeight;\n  return !(offsetWidth || offsetHeight || target.getClientRects().length);\n};\nvar isElement = function(obj) {\n  var _a, _b;\n  if (obj instanceof Element) {\n    return true;\n  }\n  var scope = (_b = (_a = obj) === null || _a === void 0 ? void 0 : _a.ownerDocument) === null || _b === void 0 ? void 0 : _b.defaultView;\n  return !!(scope && obj instanceof scope.Element);\n};\nvar isReplacedElement = function(target) {\n  switch (target.tagName) {\n    case \"INPUT\":\n      if (target.type !== \"image\") {\n        break;\n      }\n    case \"VIDEO\":\n    case \"AUDIO\":\n    case \"EMBED\":\n    case \"OBJECT\":\n    case \"CANVAS\":\n    case \"IFRAME\":\n    case \"IMG\":\n      return true;\n  }\n  return false;\n};\n\n// ../../node_modules/@juggle/resize-observer/lib/utils/global.js\nvar global2 = typeof window !== \"undefined\" ? window : {};\n\n// ../../node_modules/@juggle/resize-observer/lib/algorithms/calculateBoxSize.js\nvar cache3 = new WeakMap();\nvar scrollRegexp = /auto|scroll/;\nvar verticalRegexp = /^tb|vertical/;\nvar IE = /msie|trident/i.test(global2.navigator && global2.navigator.userAgent);\nvar parseDimension = function(pixel) {\n  return parseFloat(pixel || \"0\");\n};\nvar size = function(inlineSize, blockSize, switchSizes) {\n  if (inlineSize === void 0) {\n    inlineSize = 0;\n  }\n  if (blockSize === void 0) {\n    blockSize = 0;\n  }\n  if (switchSizes === void 0) {\n    switchSizes = false;\n  }\n  return new ResizeObserverSize((switchSizes ? blockSize : inlineSize) || 0, (switchSizes ? inlineSize : blockSize) || 0);\n};\nvar zeroBoxes = freeze({\n  devicePixelContentBoxSize: size(),\n  borderBoxSize: size(),\n  contentBoxSize: size(),\n  contentRect: new DOMRectReadOnly(0, 0, 0, 0)\n});\nvar calculateBoxSizes = function(target, forceRecalculation) {\n  if (forceRecalculation === void 0) {\n    forceRecalculation = false;\n  }\n  if (cache3.has(target) && !forceRecalculation) {\n    return cache3.get(target);\n  }\n  if (isHidden(target)) {\n    cache3.set(target, zeroBoxes);\n    return zeroBoxes;\n  }\n  var cs = getComputedStyle(target);\n  var svg = isSVG(target) && target.ownerSVGElement && target.getBBox();\n  var removePadding = !IE && cs.boxSizing === \"border-box\";\n  var switchSizes = verticalRegexp.test(cs.writingMode || \"\");\n  var canScrollVertically = !svg && scrollRegexp.test(cs.overflowY || \"\");\n  var canScrollHorizontally = !svg && scrollRegexp.test(cs.overflowX || \"\");\n  var paddingTop = svg ? 0 : parseDimension(cs.paddingTop);\n  var paddingRight = svg ? 0 : parseDimension(cs.paddingRight);\n  var paddingBottom = svg ? 0 : parseDimension(cs.paddingBottom);\n  var paddingLeft = svg ? 0 : parseDimension(cs.paddingLeft);\n  var borderTop = svg ? 0 : parseDimension(cs.borderTopWidth);\n  var borderRight = svg ? 0 : parseDimension(cs.borderRightWidth);\n  var borderBottom = svg ? 0 : parseDimension(cs.borderBottomWidth);\n  var borderLeft = svg ? 0 : parseDimension(cs.borderLeftWidth);\n  var horizontalPadding = paddingLeft + paddingRight;\n  var verticalPadding = paddingTop + paddingBottom;\n  var horizontalBorderArea = borderLeft + borderRight;\n  var verticalBorderArea = borderTop + borderBottom;\n  var horizontalScrollbarThickness = !canScrollHorizontally ? 0 : target.offsetHeight - verticalBorderArea - target.clientHeight;\n  var verticalScrollbarThickness = !canScrollVertically ? 0 : target.offsetWidth - horizontalBorderArea - target.clientWidth;\n  var widthReduction = removePadding ? horizontalPadding + horizontalBorderArea : 0;\n  var heightReduction = removePadding ? verticalPadding + verticalBorderArea : 0;\n  var contentWidth = svg ? svg.width : parseDimension(cs.width) - widthReduction - verticalScrollbarThickness;\n  var contentHeight = svg ? svg.height : parseDimension(cs.height) - heightReduction - horizontalScrollbarThickness;\n  var borderBoxWidth = contentWidth + horizontalPadding + verticalScrollbarThickness + horizontalBorderArea;\n  var borderBoxHeight = contentHeight + verticalPadding + horizontalScrollbarThickness + verticalBorderArea;\n  var boxes = freeze({\n    devicePixelContentBoxSize: size(Math.round(contentWidth * devicePixelRatio), Math.round(contentHeight * devicePixelRatio), switchSizes),\n    borderBoxSize: size(borderBoxWidth, borderBoxHeight, switchSizes),\n    contentBoxSize: size(contentWidth, contentHeight, switchSizes),\n    contentRect: new DOMRectReadOnly(paddingLeft, paddingTop, contentWidth, contentHeight)\n  });\n  cache3.set(target, boxes);\n  return boxes;\n};\nvar calculateBoxSize = function(target, observedBox, forceRecalculation) {\n  var _a = calculateBoxSizes(target, forceRecalculation), borderBoxSize = _a.borderBoxSize, contentBoxSize = _a.contentBoxSize, devicePixelContentBoxSize = _a.devicePixelContentBoxSize;\n  switch (observedBox) {\n    case ResizeObserverBoxOptions.DEVICE_PIXEL_CONTENT_BOX:\n      return devicePixelContentBoxSize;\n    case ResizeObserverBoxOptions.BORDER_BOX:\n      return borderBoxSize;\n    default:\n      return contentBoxSize;\n  }\n};\n\n// ../../node_modules/@juggle/resize-observer/lib/ResizeObserverEntry.js\nvar ResizeObserverEntry = function() {\n  function ResizeObserverEntry2(target) {\n    var boxes = calculateBoxSizes(target);\n    this.target = target;\n    this.contentRect = boxes.contentRect;\n    this.borderBoxSize = freeze([boxes.borderBoxSize]);\n    this.contentBoxSize = freeze([boxes.contentBoxSize]);\n    this.devicePixelContentBoxSize = freeze([boxes.devicePixelContentBoxSize]);\n  }\n  return ResizeObserverEntry2;\n}();\n\n// ../../node_modules/@juggle/resize-observer/lib/algorithms/calculateDepthForNode.js\nvar calculateDepthForNode = function(node) {\n  if (isHidden(node)) {\n    return Infinity;\n  }\n  var depth = 0;\n  var parent = node.parentNode;\n  while (parent) {\n    depth += 1;\n    parent = parent.parentNode;\n  }\n  return depth;\n};\n\n// ../../node_modules/@juggle/resize-observer/lib/algorithms/broadcastActiveObservations.js\nvar broadcastActiveObservations = function() {\n  var shallowestDepth = Infinity;\n  var callbacks2 = [];\n  resizeObservers.forEach(function processObserver(ro) {\n    if (ro.activeTargets.length === 0) {\n      return;\n    }\n    var entries = [];\n    ro.activeTargets.forEach(function processTarget(ot) {\n      var entry = new ResizeObserverEntry(ot.target);\n      var targetDepth = calculateDepthForNode(ot.target);\n      entries.push(entry);\n      ot.lastReportedSize = calculateBoxSize(ot.target, ot.observedBox);\n      if (targetDepth < shallowestDepth) {\n        shallowestDepth = targetDepth;\n      }\n    });\n    callbacks2.push(function resizeObserverCallback() {\n      ro.callback.call(ro.observer, entries, ro.observer);\n    });\n    ro.activeTargets.splice(0, ro.activeTargets.length);\n  });\n  for (var _i = 0, callbacks_1 = callbacks2; _i < callbacks_1.length; _i++) {\n    var callback = callbacks_1[_i];\n    callback();\n  }\n  return shallowestDepth;\n};\n\n// ../../node_modules/@juggle/resize-observer/lib/algorithms/gatherActiveObservationsAtDepth.js\nvar gatherActiveObservationsAtDepth = function(depth) {\n  resizeObservers.forEach(function processObserver(ro) {\n    ro.activeTargets.splice(0, ro.activeTargets.length);\n    ro.skippedTargets.splice(0, ro.skippedTargets.length);\n    ro.observationTargets.forEach(function processTarget(ot) {\n      if (ot.isActive()) {\n        if (calculateDepthForNode(ot.target) > depth) {\n          ro.activeTargets.push(ot);\n        } else {\n          ro.skippedTargets.push(ot);\n        }\n      }\n    });\n  });\n};\n\n// ../../node_modules/@juggle/resize-observer/lib/utils/process.js\nvar process2 = function() {\n  var depth = 0;\n  gatherActiveObservationsAtDepth(depth);\n  while (hasActiveObservations()) {\n    depth = broadcastActiveObservations();\n    gatherActiveObservationsAtDepth(depth);\n  }\n  if (hasSkippedObservations()) {\n    deliverResizeLoopError();\n  }\n  return depth > 0;\n};\n\n// ../../node_modules/@juggle/resize-observer/lib/utils/queueMicroTask.js\nvar trigger;\nvar callbacks = [];\nvar notify = function() {\n  return callbacks.splice(0).forEach(function(cb2) {\n    return cb2();\n  });\n};\nvar queueMicroTask = function(callback) {\n  if (!trigger) {\n    var toggle_1 = 0;\n    var el_1 = document.createTextNode(\"\");\n    var config = { characterData: true };\n    new MutationObserver(function() {\n      return notify();\n    }).observe(el_1, config);\n    trigger = function() {\n      el_1.textContent = \"\" + (toggle_1 ? toggle_1-- : toggle_1++);\n    };\n  }\n  callbacks.push(callback);\n  trigger();\n};\n\n// ../../node_modules/@juggle/resize-observer/lib/utils/queueResizeObserver.js\nvar queueResizeObserver = function(cb2) {\n  queueMicroTask(function ResizeObserver2() {\n    requestAnimationFrame(cb2);\n  });\n};\n\n// ../../node_modules/@juggle/resize-observer/lib/utils/scheduler.js\nvar watching = 0;\nvar isWatching = function() {\n  return !!watching;\n};\nvar CATCH_PERIOD = 250;\nvar observerConfig = { attributes: true, characterData: true, childList: true, subtree: true };\nvar events = [\n  \"resize\",\n  \"load\",\n  \"transitionend\",\n  \"animationend\",\n  \"animationstart\",\n  \"animationiteration\",\n  \"keyup\",\n  \"keydown\",\n  \"mouseup\",\n  \"mousedown\",\n  \"mouseover\",\n  \"mouseout\",\n  \"blur\",\n  \"focus\"\n];\nvar time = function(timeout) {\n  if (timeout === void 0) {\n    timeout = 0;\n  }\n  return Date.now() + timeout;\n};\nvar scheduled = false;\nvar Scheduler = function() {\n  function Scheduler2() {\n    var _this = this;\n    this.stopped = true;\n    this.listener = function() {\n      return _this.schedule();\n    };\n  }\n  Scheduler2.prototype.run = function(timeout) {\n    var _this = this;\n    if (timeout === void 0) {\n      timeout = CATCH_PERIOD;\n    }\n    if (scheduled) {\n      return;\n    }\n    scheduled = true;\n    var until = time(timeout);\n    queueResizeObserver(function() {\n      var elementsHaveResized = false;\n      try {\n        elementsHaveResized = process2();\n      } finally {\n        scheduled = false;\n        timeout = until - time();\n        if (!isWatching()) {\n          return;\n        }\n        if (elementsHaveResized) {\n          _this.run(1e3);\n        } else if (timeout > 0) {\n          _this.run(timeout);\n        } else {\n          _this.start();\n        }\n      }\n    });\n  };\n  Scheduler2.prototype.schedule = function() {\n    this.stop();\n    this.run();\n  };\n  Scheduler2.prototype.observe = function() {\n    var _this = this;\n    var cb2 = function() {\n      return _this.observer && _this.observer.observe(document.body, observerConfig);\n    };\n    document.body ? cb2() : global2.addEventListener(\"DOMContentLoaded\", cb2);\n  };\n  Scheduler2.prototype.start = function() {\n    var _this = this;\n    if (this.stopped) {\n      this.stopped = false;\n      this.observer = new MutationObserver(this.listener);\n      this.observe();\n      events.forEach(function(name) {\n        return global2.addEventListener(name, _this.listener, true);\n      });\n    }\n  };\n  Scheduler2.prototype.stop = function() {\n    var _this = this;\n    if (!this.stopped) {\n      this.observer && this.observer.disconnect();\n      events.forEach(function(name) {\n        return global2.removeEventListener(name, _this.listener, true);\n      });\n      this.stopped = true;\n    }\n  };\n  return Scheduler2;\n}();\nvar scheduler = new Scheduler();\nvar updateCount = function(n) {\n  !watching && n > 0 && scheduler.start();\n  watching += n;\n  !watching && scheduler.stop();\n};\n\n// ../../node_modules/@juggle/resize-observer/lib/ResizeObservation.js\nvar skipNotifyOnElement = function(target) {\n  return !isSVG(target) && !isReplacedElement(target) && getComputedStyle(target).display === \"inline\";\n};\nvar ResizeObservation = function() {\n  function ResizeObservation2(target, observedBox) {\n    this.target = target;\n    this.observedBox = observedBox || ResizeObserverBoxOptions.CONTENT_BOX;\n    this.lastReportedSize = {\n      inlineSize: 0,\n      blockSize: 0\n    };\n  }\n  ResizeObservation2.prototype.isActive = function() {\n    var size2 = calculateBoxSize(this.target, this.observedBox, true);\n    if (skipNotifyOnElement(this.target)) {\n      this.lastReportedSize = size2;\n    }\n    if (this.lastReportedSize.inlineSize !== size2.inlineSize || this.lastReportedSize.blockSize !== size2.blockSize) {\n      return true;\n    }\n    return false;\n  };\n  return ResizeObservation2;\n}();\n\n// ../../node_modules/@juggle/resize-observer/lib/ResizeObserverDetail.js\nvar ResizeObserverDetail = function() {\n  function ResizeObserverDetail2(resizeObserver, callback) {\n    this.activeTargets = [];\n    this.skippedTargets = [];\n    this.observationTargets = [];\n    this.observer = resizeObserver;\n    this.callback = callback;\n  }\n  return ResizeObserverDetail2;\n}();\n\n// ../../node_modules/@juggle/resize-observer/lib/ResizeObserverController.js\nvar observerMap = new WeakMap();\nvar getObservationIndex = function(observationTargets, target) {\n  for (var i = 0; i < observationTargets.length; i += 1) {\n    if (observationTargets[i].target === target) {\n      return i;\n    }\n  }\n  return -1;\n};\nvar ResizeObserverController = function() {\n  function ResizeObserverController2() {\n  }\n  ResizeObserverController2.connect = function(resizeObserver, callback) {\n    var detail = new ResizeObserverDetail(resizeObserver, callback);\n    observerMap.set(resizeObserver, detail);\n  };\n  ResizeObserverController2.observe = function(resizeObserver, target, options) {\n    var detail = observerMap.get(resizeObserver);\n    var firstObservation = detail.observationTargets.length === 0;\n    if (getObservationIndex(detail.observationTargets, target) < 0) {\n      firstObservation && resizeObservers.push(detail);\n      detail.observationTargets.push(new ResizeObservation(target, options && options.box));\n      updateCount(1);\n      scheduler.schedule();\n    }\n  };\n  ResizeObserverController2.unobserve = function(resizeObserver, target) {\n    var detail = observerMap.get(resizeObserver);\n    var index = getObservationIndex(detail.observationTargets, target);\n    var lastObservation = detail.observationTargets.length === 1;\n    if (index >= 0) {\n      lastObservation && resizeObservers.splice(resizeObservers.indexOf(detail), 1);\n      detail.observationTargets.splice(index, 1);\n      updateCount(-1);\n    }\n  };\n  ResizeObserverController2.disconnect = function(resizeObserver) {\n    var _this = this;\n    var detail = observerMap.get(resizeObserver);\n    detail.observationTargets.slice().forEach(function(ot) {\n      return _this.unobserve(resizeObserver, ot.target);\n    });\n    detail.activeTargets.splice(0, detail.activeTargets.length);\n  };\n  return ResizeObserverController2;\n}();\n\n// ../../node_modules/@juggle/resize-observer/lib/ResizeObserver.js\nvar ResizeObserver = function() {\n  function ResizeObserver2(callback) {\n    if (arguments.length === 0) {\n      throw new TypeError(\"Failed to construct 'ResizeObserver': 1 argument required, but only 0 present.\");\n    }\n    if (typeof callback !== \"function\") {\n      throw new TypeError(\"Failed to construct 'ResizeObserver': The callback provided as parameter 1 is not a function.\");\n    }\n    ResizeObserverController.connect(this, callback);\n  }\n  ResizeObserver2.prototype.observe = function(target, options) {\n    if (arguments.length === 0) {\n      throw new TypeError(\"Failed to execute 'observe' on 'ResizeObserver': 1 argument required, but only 0 present.\");\n    }\n    if (!isElement(target)) {\n      throw new TypeError(\"Failed to execute 'observe' on 'ResizeObserver': parameter 1 is not of type 'Element\");\n    }\n    ResizeObserverController.observe(this, target, options);\n  };\n  ResizeObserver2.prototype.unobserve = function(target) {\n    if (arguments.length === 0) {\n      throw new TypeError(\"Failed to execute 'unobserve' on 'ResizeObserver': 1 argument required, but only 0 present.\");\n    }\n    if (!isElement(target)) {\n      throw new TypeError(\"Failed to execute 'unobserve' on 'ResizeObserver': parameter 1 is not of type 'Element\");\n    }\n    ResizeObserverController.unobserve(this, target);\n  };\n  ResizeObserver2.prototype.disconnect = function() {\n    ResizeObserverController.disconnect(this);\n  };\n  ResizeObserver2.toString = function() {\n    return \"function ResizeObserver () { [polyfill code] }\";\n  };\n  return ResizeObserver2;\n}();\n\n// src/components/hoc/withMeasuredSize.tsx\nvar DEFAULT_SIZE = 200;\nvar _sharedResizeObserver, _callbacks;\nvar SharedObserver = class {\n  constructor() {\n    __privateAdd(this, _sharedResizeObserver, void 0);\n    __privateAdd(this, _callbacks, new WeakMap());\n    var _a;\n    const ResizeObserver2 = (_a = window.ResizeObserver) != null ? _a : ResizeObserver;\n    __privateSet(this, _sharedResizeObserver, new ResizeObserver2(this.updateResizedElements.bind(this)));\n  }\n  updateResizedElements(entries) {\n    for (const entry of entries) {\n      const callbackForElement = __privateGet(this, _callbacks).get(entry.target);\n      if (callbackForElement)\n        callbackForElement(entry.contentRect);\n    }\n  }\n  observeElementWithCallback(element, callback) {\n    __privateGet(this, _sharedResizeObserver).observe(element);\n    __privateGet(this, _callbacks).set(element, callback);\n  }\n  unobserve(element) {\n    __privateGet(this, _sharedResizeObserver).unobserve(element);\n    __privateGet(this, _callbacks).delete(element);\n  }\n};\n_sharedResizeObserver = new WeakMap();\n_callbacks = new WeakMap();\nvar sharedResizeObserver = new SharedObserver();\nfunction useMeasuredSize(ref) {\n  const forceUpdate = useForceUpdate2();\n  const size2 = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n  function updateSize(newSize) {\n    if (newSize.width === 0 && newSize.height === 0)\n      return;\n    if (!size2.current || newSize.height !== size2.current.height || newSize.width !== size2.current.width) {\n      size2.current = { width: newSize.width, height: newSize.height };\n      forceUpdate();\n    }\n  }\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect)(() => {\n    if (!ref.current)\n      return;\n    const { offsetWidth, offsetHeight } = ref.current;\n    updateSize({\n      width: offsetWidth,\n      height: offsetHeight\n    });\n    sharedResizeObserver.observeElementWithCallback(ref.current, updateSize);\n    return () => {\n      if (!ref.current)\n        return;\n      sharedResizeObserver.unobserve(ref.current);\n    };\n  }, []);\n  return size2.current;\n}\nvar SIZE_COMPATIBILITY_WRAPPER_ATTRIBUTE = \"data-framer-size-compatibility-wrapper\";\nvar withMeasuredSize = (Component19) => (props) => {\n  var _a, _b, _c, _d;\n  const ref = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n  const size2 = useMeasuredSize(ref);\n  const dataProps = { [SIZE_COMPATIBILITY_WRAPPER_ATTRIBUTE]: true };\n  const shouldRender = Boolean(size2);\n  const fallbackWidth = (_a = props.width) != null ? _a : DEFAULT_SIZE;\n  const fallbackHeight = (_b = props.height) != null ? _b : DEFAULT_SIZE;\n  return /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"div\", {\n    style: { width: \"100%\", height: \"100%\", pointerEvents: \"none\" },\n    ref,\n    ...dataProps\n  }, shouldRender && /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Component19, {\n    ...props,\n    width: (_c = size2 == null ? void 0 : size2.width) != null ? _c : fallbackWidth,\n    height: (_d = size2 == null ? void 0 : size2.height) != null ? _d : fallbackHeight\n  }));\n};\n\n// src/render/utils/getMeasurableCodeComponentChildren.ts\nfunction getMeasurableCodeComponentChildren(element) {\n  const childrenCollection = element.firstElementChild && element.firstElementChild.hasAttribute(SIZE_COMPATIBILITY_WRAPPER_ATTRIBUTE) ? element.firstElementChild.children : element.children;\n  return [...childrenCollection].filter(isMeasurable).map(unwrapInlinedDisplayContents);\n}\nfunction isMeasurable(element) {\n  if (element instanceof HTMLBaseElement || element instanceof HTMLHeadElement || element instanceof HTMLLinkElement || element instanceof HTMLMetaElement || element instanceof HTMLScriptElement || element instanceof HTMLStyleElement || element instanceof HTMLTitleElement) {\n    return false;\n  }\n  return element instanceof HTMLElement || element instanceof SVGElement;\n}\nfunction unwrapInlinedDisplayContents(element) {\n  if (!(element instanceof HTMLElement))\n    return element;\n  if (element.children.length === 0)\n    return element;\n  if (element.style.display !== \"contents\")\n    return element;\n  const firstMeasurableChild = [...element.children].find(isMeasurable);\n  if (firstMeasurableChild) {\n    return unwrapInlinedDisplayContents(firstMeasurableChild);\n  }\n  return element;\n}\n\n// src/render/utils/useMeasureLayout.ts\nfunction useMeasureLayout(props, ref, getChildren = () => [], options = {}) {\n  const { id, visible, _needsMeasure } = props;\n  const { skipHook = false } = options;\n  const inCodeComponent = Boolean((0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(ComponentContainerContext));\n  const onCanvas = RenderTarget.current() === RenderTarget.canvas;\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect)(() => {\n    if (!onCanvas || inCodeComponent || skipHook) {\n      return;\n    }\n    if (!(ref.current && id && visible && _needsMeasure)) {\n      return;\n    }\n    runtime.queueMeasureRequest(nodeIdFromString(id), ref.current, getChildren(ref.current));\n  });\n}\nfunction measureClosestComponentContainer(element) {\n  const container = element.closest(\"[data-framer-component-container]\");\n  if (!container)\n    return;\n  runtime.queueMeasureRequest(nodeIdFromString(container.id), container, getMeasurableCodeComponentChildren(container));\n}\n\n// src/render/utils/layoutHintDataPropsForCenter.ts\nvar isChrome2 = isChrome();\nfunction layoutHintDataPropsForCenter(center) {\n  const props = {};\n  if (!isChrome2 || RenderTarget.current() !== RenderTarget.canvas) {\n    return props;\n  }\n  if (center === true || center === \"x\") {\n    props[\"data-framer-layout-hint-center-x\"] = true;\n  }\n  if (center === true || center === \"y\") {\n    props[\"data-framer-layout-hint-center-y\"] = true;\n  }\n  return props;\n}\n\n// src/render/style/BackgroundImageComponent.tsx\n\n\n// src/render/utils/imageRendering.ts\nfunction minZoomForPixelatedImageRendering(image, containerSize, devicePixelRatio3 = 1) {\n  var _a, _b, _c, _d;\n  let { width: frameWidth, height: frameHeight } = containerSize;\n  const imageWidth = (_b = (_a = image.pixelWidth) != null ? _a : image.intrinsicWidth) != null ? _b : 0;\n  const imageHeight = (_d = (_c = image.pixelHeight) != null ? _c : image.intrinsicHeight) != null ? _d : 0;\n  if (frameWidth < 1 || frameHeight < 1 || imageWidth < 1 || imageHeight < 1) {\n    return void 0;\n  }\n  frameWidth *= devicePixelRatio3;\n  frameHeight *= devicePixelRatio3;\n  const frameAspectRatio = frameWidth / frameHeight;\n  const imageAspectRatio = imageWidth / imageHeight;\n  switch (image.fit) {\n    case \"fill\":\n      if (imageAspectRatio > frameAspectRatio) {\n        return imageHeight / frameHeight;\n      } else {\n        return imageWidth / frameWidth;\n      }\n    case \"fit\":\n    case \"stretch\":\n      return Math.max(imageWidth / frameWidth, imageHeight / frameHeight);\n  }\n}\nfunction imageRenderingForZoom(zoom, minPixelatedZoom) {\n  if (minPixelatedZoom && Math.max(1, zoom) > minPixelatedZoom) {\n    return \"pixelated\";\n  }\n  return \"auto\";\n}\n\n// src/render/style/BackgroundImageComponent.tsx\nvar wrapperStyle = {\n  position: \"absolute\",\n  pointerEvents: \"none\",\n  userSelect: \"none\",\n  borderRadius: \"inherit\",\n  top: 0,\n  right: 0,\n  bottom: 0,\n  left: 0\n};\nfunction cssObjectFit(imageFit) {\n  switch (imageFit) {\n    case \"fit\":\n      return \"contain\";\n    case \"stretch\":\n      return \"fill\";\n    default:\n      return \"cover\";\n  }\n}\nfunction cssImageRendering(image, containerSize) {\n  if (!containerSize)\n    return \"auto\";\n  const devicePixelRatio3 = RenderTarget.current() === RenderTarget.canvas ? safeWindow.devicePixelRatio : 1;\n  const minPixelatedZoom = minZoomForPixelatedImageRendering(image, containerSize, devicePixelRatio3);\n  if (RenderTarget.current() === RenderTarget.canvas) {\n    return imageRenderingForZoom(1, minPixelatedZoom);\n  } else {\n    return imageRenderingForZoom(RenderEnvironment.zoom, minPixelatedZoom);\n  }\n}\nfunction getImageStyle(image, containerSize) {\n  return {\n    pointerEvents: \"none\",\n    userSelect: \"none\",\n    display: \"block\",\n    width: \"100%\",\n    height: \"100%\",\n    borderRadius: \"inherit\",\n    objectPosition: \"center\",\n    objectFit: cssObjectFit(image.fit),\n    imageRendering: cssImageRendering(image, containerSize)\n  };\n}\nfunction BackgroundImageComponent({ image, containerSize, nodeId, layoutId }) {\n  const wrapperRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n  const isStaticRendering = !isBrowser2() || RenderTarget.current() === RenderTarget.export;\n  if (layoutId) {\n    layoutId = layoutId + \"-background\";\n  }\n  const source = runtime.useImageSource(image, containerSize, nodeId);\n  const imageStyle = getImageStyle(image, containerSize);\n  if (!isStaticRendering) {\n    const imageElement = runtime.useImageElement(image, containerSize, nodeId);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect)(() => {\n      const wrapper = wrapperRef.current;\n      if (wrapper === null)\n        return;\n      wrapper.appendChild(imageElement);\n      return () => {\n        wrapper.removeChild(imageElement);\n      };\n    }, [imageElement]);\n    Object.assign(imageElement.style, imageStyle);\n  }\n  return /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(motion.div, {\n    ref: wrapperRef,\n    style: wrapperStyle,\n    layoutId\n  }, isStaticRendering ? /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"img\", {\n    src: source,\n    style: imageStyle\n  }) : null);\n}\n\n// src/render/presentation/Frame/FrameWithMotion.tsx\nfunction hasEvents(props) {\n  for (const key6 in props) {\n    if (key6 === \"drag\" || key6.startsWith(\"while\") || typeof props[key6] === \"function\" && key6.startsWith(\"on\") && !key6.includes(\"Animation\")) {\n      return true;\n    }\n  }\n  return false;\n}\nvar pointerEvents = [\n  \"onAuxClick\",\n  \"onClick\",\n  \"onDoubleClick\",\n  \"onMouse\",\n  \"onMouseDown\",\n  \"onMouseUp\",\n  \"onTapDown\",\n  \"onTap\",\n  \"onTapUp\",\n  \"onPointer\",\n  \"onPointerDown\",\n  \"onPointerUp\",\n  \"onTouch\",\n  \"onTouchDown\",\n  \"onTouchUp\"\n];\nvar pointerEventsSet = new Set([\n  ...pointerEvents,\n  ...pointerEvents.map((event) => `${event}Capture`)\n]);\nfunction getCursorFromEvents(props) {\n  if (props.drag) {\n    return \"grab\";\n  }\n  for (const key6 in props) {\n    if (pointerEventsSet.has(key6)) {\n      return \"pointer\";\n    }\n  }\n  return void 0;\n}\nfunction unwrapFrameProps(frameProps) {\n  const {\n    left,\n    top,\n    bottom,\n    right,\n    width,\n    height,\n    minWidth,\n    minHeight,\n    center,\n    _constraints,\n    size: size2,\n    widthType,\n    heightType\n  } = frameProps;\n  const constraintProps = {\n    top: resolveMotionValue(top),\n    left: resolveMotionValue(left),\n    bottom: resolveMotionValue(bottom),\n    right: resolveMotionValue(right),\n    width: resolveMotionValue(width),\n    height: resolveMotionValue(height),\n    minWidth: resolveMotionValue(minWidth),\n    minHeight: resolveMotionValue(minHeight),\n    size: resolveMotionValue(size2),\n    center,\n    _constraints,\n    widthType,\n    heightType\n  };\n  return constraintProps;\n}\nvar defaultFrameRect = { x: 0, y: 0, width: 200, height: 200 };\nfunction useStyleAndRect(props) {\n  injectComponentCSSRules();\n  const inCodeComponent = Boolean((0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(ComponentContainerContext));\n  const { style, _initialStyle, __fromCanvasComponent, size: size2 } = props;\n  const unwrappedProps = unwrapFrameProps(props);\n  const constraintsRect = useConstraints(unwrappedProps);\n  const defaultStyle = {\n    display: \"block\",\n    flexShrink: 0,\n    userSelect: \"none\"\n  };\n  if (!props.__fromCanvasComponent) {\n    defaultStyle.backgroundColor = props.background === void 0 ? \"rgba(0, 170, 255, 0.3)\" : void 0;\n  }\n  if (!hasEvents(props)) {\n    defaultStyle.pointerEvents = \"none\";\n  }\n  const addTextCentering = react__WEBPACK_IMPORTED_MODULE_0__.Children.count(props.children) > 0 && react__WEBPACK_IMPORTED_MODULE_0__.Children.toArray(props.children).every((child) => {\n    return typeof child === \"string\" || typeof child === \"number\";\n  });\n  const centerTextStyle = addTextCentering && {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    textAlign: \"center\"\n  };\n  const propsStyle = getStyleForFrameProps(props);\n  if (size2 === void 0 && !__fromCanvasComponent) {\n    if (!hasLeftAndRight(propsStyle)) {\n      defaultStyle.width = defaultFrameRect.width;\n    }\n    if (!hasTopAndBottom(propsStyle)) {\n      defaultStyle.height = defaultFrameRect.height;\n    }\n  }\n  if (unwrappedProps.minWidth !== void 0) {\n    defaultStyle.minWidth = unwrappedProps.minWidth;\n  }\n  if (unwrappedProps.minHeight !== void 0) {\n    defaultStyle.minHeight = unwrappedProps.minHeight;\n  }\n  let constraintsStyle = {};\n  if (constraintsEnabled(unwrappedProps)) {\n    if (constraintsRect && !isAutoSized(props)) {\n      constraintsStyle = {\n        left: constraintsRect.x,\n        top: constraintsRect.y,\n        width: constraintsRect.width,\n        height: constraintsRect.height,\n        right: void 0,\n        bottom: void 0\n      };\n    }\n  }\n  Object.assign(defaultStyle, centerTextStyle, _initialStyle, propsStyle, constraintsStyle, style);\n  Layer.applyWillChange(props, defaultStyle, true);\n  let resultStyle = defaultStyle;\n  if (!defaultStyle.transform) {\n    resultStyle = { x: 0, y: 0, ...defaultStyle };\n  }\n  if (props.positionSticky) {\n    const onCanvas = RenderTarget.current() === RenderTarget.canvas;\n    if (!onCanvas || inCodeComponent) {\n      resultStyle.position = \"sticky\";\n      resultStyle.willChange = \"transform\";\n      resultStyle.zIndex = 1;\n      resultStyle.top = props.positionStickyTop;\n      resultStyle.right = props.positionStickyRight;\n      resultStyle.bottom = props.positionStickyBottom;\n      resultStyle.left = props.positionStickyLeft;\n    }\n  }\n  return [resultStyle, constraintsRect];\n}\nvar filteredProps = new Set([\n  \"width\",\n  \"height\",\n  \"opacity\",\n  \"overflow\",\n  \"radius\",\n  \"background\",\n  \"color\",\n  \"x\",\n  \"y\",\n  \"z\",\n  \"rotate\",\n  \"rotateX\",\n  \"rotateY\",\n  \"rotateZ\",\n  \"scale\",\n  \"scaleX\",\n  \"scaleY\",\n  \"skew\",\n  \"skewX\",\n  \"skewY\",\n  \"originX\",\n  \"originY\",\n  \"originZ\"\n]);\nfunction getMotionProps(props) {\n  const motionProps = {};\n  for (const key6 in props) {\n    const isValid = isValidMotionProp(key6) || (0, import_is_prop_valid.default)(key6);\n    if (isValid && !filteredProps.has(key6)) {\n      motionProps[key6] = props[key6];\n    } else if (key6 === \"positionTransition\" || key6 === \"layoutTransition\") {\n      motionProps[\"layout\"] = true;\n      if (typeof props[key6] !== \"boolean\" && !props.transition) {\n        motionProps[\"transition\"] = props[key6];\n      }\n    }\n  }\n  return motionProps;\n}\nfunction hasDataFramerName(props) {\n  return \"data-framer-name\" in props;\n}\nvar FrameWithMotion = (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(function FrameWithMotion2(props, ref) {\n  if (safeWindow[\"perf\"])\n    safeWindow[\"perf\"].nodeRender();\n  const { visible = true } = props;\n  if (!visible)\n    return null;\n  return /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(VisibleFrame, {\n    ...props,\n    ref\n  });\n});\nvar VisibleFrame = (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(function VisibleFrame2(props, forwardedRef) {\n  const { _border, name, center, border } = props;\n  const { props: propsWithOverrides, children } = processOverrideForwarding(props);\n  const motionProps = getMotionProps(propsWithOverrides);\n  const layoutId = useLayoutId2(props);\n  const cursor = getCursorFromEvents(props);\n  const fallbackRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n  const ref = forwardedRef != null ? forwardedRef : fallbackRef;\n  const dataProps = {\n    \"data-framer-component-type\": \"Frame\",\n    \"data-framer-cursor\": cursor,\n    \"data-framer-highlight\": cursor === \"pointer\" ? true : void 0,\n    \"data-layoutid\": layoutId\n  };\n  if (!hasDataFramerName(props) && name) {\n    dataProps[\"data-framer-name\"] = name;\n  }\n  const [currentStyle, rect] = useStyleAndRect(propsWithOverrides);\n  const unwrappedProps = unwrapFrameProps(propsWithOverrides);\n  const autoSized = isAutoSized(unwrappedProps);\n  if (center && !(rect && !autoSized && constraintsEnabled(unwrappedProps))) {\n    motionProps.transformTemplate = transformTemplate(center);\n    Object.assign(dataProps, layoutHintDataPropsForCenter(center));\n  } else {\n    motionProps.transformTemplate = transformTemplate(false);\n  }\n  useMeasureLayout(props, ref);\n  const backgroundImage = backgroundImageFromProps(props);\n  const inCodeComponent = Boolean((0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(ComponentContainerContext));\n  const parentSize = resolveParentSize(propsWithOverrides, unwrappedProps, rect, inCodeComponent);\n  const wrappedContent = useProvideParentSize(/* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, backgroundImage ? /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(BackgroundImageComponent, {\n    image: backgroundImage,\n    containerSize: rect != null ? rect : void 0,\n    nodeId: props.id && nodeIdFromString(props.id),\n    layoutId\n  }) : null, children, /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Border, {\n    ..._border,\n    border,\n    layoutId\n  })), parentSize);\n  return /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(motion.div, {\n    ...dataProps,\n    ...motionProps,\n    layoutId,\n    style: currentStyle,\n    ref,\n    transformValues\n  }, wrappedContent);\n});\nfunction resolveParentSize(props, unwrappedProps, rect, inCodeComponent) {\n  if (inCodeComponent) {\n    return rect ? { width: rect.width, height: rect.height } : ParentSizeState.Disabled;\n  }\n  const { _usesDOMRect } = props;\n  const {\n    widthType = DimensionType.FixedNumber,\n    heightType = DimensionType.FixedNumber,\n    width,\n    height\n  } = unwrappedProps;\n  if (rect && !_usesDOMRect) {\n    return rect;\n  }\n  if (widthType === DimensionType.FixedNumber && heightType === DimensionType.FixedNumber && typeof width === \"number\" && typeof height === \"number\") {\n    return { width, height };\n  }\n  if (_usesDOMRect) {\n    return ParentSizeState.DisabledForCurrentLevel;\n  }\n  return ParentSizeState.Unknown;\n}\nfunction isAutoSized({\n  width,\n  height\n}) {\n  return width === \"auto\" || width === \"min-content\" || height === \"auto\" || height === \"min-content\";\n}\n\n// src/components/EmptyState.tsx\n\n\n// src/render/presentation/Frame/index.tsx\n\n\n\n// src/components/hoc/WithEvents.tsx\n\n\n// src/utils/events.ts\nfunction pointForEvent(event, customTarget = null) {\n  let target;\n  if (customTarget instanceof HTMLElement) {\n    target = customTarget;\n  }\n  if (!target && event.target instanceof HTMLElement) {\n    target = event.target;\n  }\n  if (!target) {\n    return { x: event.pageX, y: event.pageY };\n  }\n  if (safeWindow.webkitConvertPointFromPageToNode) {\n    let webkitPoint = new WebKitPoint(event.pageX, event.pageY);\n    webkitPoint = safeWindow.webkitConvertPointFromPageToNode(target, webkitPoint);\n    return { x: webkitPoint.x, y: webkitPoint.y };\n  }\n  const rect = target.getBoundingClientRect();\n  const width = parseFloat(target.style.width);\n  const height = parseFloat(target.style.height);\n  const scale2 = {\n    x: width ? width / rect.width : 1,\n    y: height ? height / rect.height : 1\n  };\n  const point = {\n    x: scale2.x * (event.pageX - rect.left - target.clientLeft + target.scrollLeft),\n    y: scale2.y * (event.pageY - rect.top - target.clientTop + target.scrollTop)\n  };\n  return point;\n}\n\n// src/core/Time.ts\nvar _raf = (f) => {\n  setTimeout(f, 1 / 60);\n};\nvar __raf = safeWindow[\"requestAnimationFrame\"] || _raf;\nvar raf = (f) => __raf(f);\n\n// src/core/EventEmitter.ts\nvar import_eventemitter3 = __toModule(require_eventemitter3());\nvar EventEmitter = class {\n  constructor() {\n    this._emitter = new import_eventemitter3.EventEmitter();\n  }\n  eventNames() {\n    return this._emitter.eventNames();\n  }\n  eventListeners() {\n    const listeners = {};\n    for (const eventName of this._emitter.eventNames()) {\n      listeners[eventName] = this._emitter.listeners(eventName);\n    }\n    return listeners;\n  }\n  on(eventName, fn) {\n    this.addEventListener(eventName, fn, false, false, this);\n  }\n  off(eventName, fn) {\n    this.removeEventListeners(eventName, fn);\n  }\n  once(eventName, fn) {\n    this.addEventListener(eventName, fn, true, false, this);\n  }\n  unique(eventName, fn) {\n    this.addEventListener(eventName, fn, false, true, this);\n  }\n  addEventListener(eventName, fn, once, unique, context) {\n    if (unique) {\n      for (const name of this._emitter.eventNames()) {\n        if (fn === this._emitter.listeners(name)) {\n          return;\n        }\n      }\n    }\n    if (once === true) {\n      this._emitter.once(eventName, fn, context);\n    } else {\n      this._emitter.addListener(eventName, fn, context);\n    }\n  }\n  removeEventListeners(eventName, fn) {\n    if (eventName) {\n      this._emitter.removeListener(eventName, fn);\n    } else {\n      this.removeAllEventListeners();\n    }\n  }\n  removeAllEventListeners() {\n    this._emitter.removeAllListeners();\n  }\n  countEventListeners(eventName, handler) {\n    if (eventName) {\n      return this._emitter.listeners(eventName).length;\n    } else {\n      let count = 0;\n      for (const name of this._emitter.eventNames()) {\n        count += this._emitter.listeners(name).length;\n      }\n      return count;\n    }\n  }\n  emit(eventName, ...args) {\n    this._emitter.emit(eventName, ...args);\n  }\n};\n\n// src/core/Loop.ts\nvar LoopTimeStep = 1 / 60;\nvar Loop = class extends EventEmitter {\n  constructor(start = false) {\n    super();\n    this._started = false;\n    this._frame = 0;\n    this._frameTasks = [];\n    this.tick = () => {\n      if (!this._started)\n        return;\n      raf(this.tick);\n      this.emit(\"update\", this._frame, LoopTimeStep);\n      this.emit(\"render\", this._frame, LoopTimeStep);\n      this._processFrameTasks();\n      this._frame++;\n    };\n    if (start) {\n      this.start();\n    }\n  }\n  addFrameTask(task) {\n    this._frameTasks.push(task);\n  }\n  _processFrameTasks() {\n    const postEventTasks = this._frameTasks;\n    const length = postEventTasks.length;\n    if (length === 0)\n      return;\n    for (let i = 0; i < length; i++) {\n      postEventTasks[i]();\n    }\n    postEventTasks.length = 0;\n  }\n  static set TimeStep(value) {\n    LoopTimeStep = value;\n  }\n  static get TimeStep() {\n    return LoopTimeStep;\n  }\n  start() {\n    if (this._started)\n      return this;\n    this._frame = 0;\n    this._started = true;\n    raf(this.tick);\n    return this;\n  }\n  stop() {\n    this._started = false;\n    return this;\n  }\n  get frame() {\n    return this._frame;\n  }\n  get time() {\n    return this._frame * LoopTimeStep;\n  }\n};\nvar MainLoop = new Loop();\n\n// src/utils/math.ts\nvar clamp3 = (value, a2, b2) => {\n  const min = Math.min(a2, b2);\n  const max = Math.max(a2, b2);\n  if (value < min) {\n    value = min;\n  }\n  if (value > max) {\n    value = max;\n  }\n  return value;\n};\n\n// src/events/FramerEvent.ts\nvar FramerEvent = class {\n  constructor(originalEvent, session) {\n    this.originalEvent = originalEvent;\n    this.session = session;\n    this.time = Date.now();\n    this.loopTime = MainLoop.time;\n    const customTarget = session && session.startEvent && session.startEvent.target || originalEvent.target;\n    const eventLike = FramerEvent.eventLikeFromOriginalEvent(originalEvent);\n    this.point = pointForEvent(eventLike, customTarget);\n    const deviceTarget = session && session.originElement ? session.originElement : document.body;\n    this.devicePoint = pointForEvent(eventLike, deviceTarget);\n    this.target = originalEvent.target || null;\n    const lastEvent = session && session.lastEvent;\n    if (originalEvent instanceof WheelEvent) {\n      this.delta = { x: originalEvent.deltaX, y: originalEvent.deltaY };\n    } else if (lastEvent && this.devicePoint && lastEvent.devicePoint) {\n      this.delta = Point.subtract(this.devicePoint, lastEvent.devicePoint);\n    } else {\n      this.delta = { x: 0, y: 0 };\n    }\n  }\n  static eventLikeFromOriginalEvent(originalEvent) {\n    if (\"touches\" in originalEvent) {\n      let touches = originalEvent.touches;\n      if (!touches || !touches.length) {\n        if (originalEvent.changedTouches && originalEvent.changedTouches.length) {\n          touches = originalEvent.changedTouches;\n        }\n      }\n      if (!touches || !touches.length) {\n        return { pageX: 0, pageY: 0, target: null };\n      }\n      const firstTouch = touches[0];\n      const pageX = firstTouch.clientX || firstTouch.screenX || firstTouch.pageX;\n      const pageY = firstTouch.clientY || firstTouch.screenY || firstTouch.pageY;\n      return {\n        pageX,\n        pageY,\n        target: originalEvent.target\n      };\n    }\n    return originalEvent;\n  }\n  velocity(t) {\n    return this.session ? this.session.velocity(t) : { x: 0, y: 0 };\n  }\n  get offset() {\n    return this.session ? this.session.offset(this) : { x: 0, y: 0 };\n  }\n  get isLeftMouseClick() {\n    if (environment_exports.isTouch()) {\n      return void 0;\n    }\n    if (\"button\" in this.originalEvent && \"buttons\" in this.originalEvent && \"ctrlKey\" in this.originalEvent) {\n      return (this.originalEvent.button === 0 || this.originalEvent.buttons === 1) && !this.originalEvent.ctrlKey;\n    }\n    return false;\n  }\n};\n\n// src/components/hoc/WithDragging.tsx\n\n\n// src/animation/Animators/Integrator.ts\nvar Integrator = class {\n  constructor(accelerationFunction) {\n    this.accelerationForState = accelerationFunction;\n  }\n  integrateState(state, dt) {\n    const a2 = this.evaluateState(state);\n    const b2 = this.evaluateStateWithDerivative(state, dt * 0.5, a2);\n    const c2 = this.evaluateStateWithDerivative(state, dt * 0.5, b2);\n    const d = this.evaluateStateWithDerivative(state, dt, c2);\n    const dxdt = 1 / 6 * (a2.dx + 2 * (b2.dx + c2.dx) + d.dx);\n    const dvdt = 1 / 6 * (a2.dv + 2 * (b2.dv + c2.dv) + d.dv);\n    state.x = state.x + dxdt * dt;\n    state.v = state.v + dvdt * dt;\n    return state;\n  }\n  evaluateState(initialState2) {\n    const dv = this.accelerationForState(initialState2);\n    return { dx: initialState2.v, dv };\n  }\n  evaluateStateWithDerivative(initialState2, dt, derivative) {\n    const state = {\n      x: initialState2.x + derivative.dx * dt,\n      v: initialState2.v + derivative.dv * dt\n    };\n    const output = {\n      dx: state.v,\n      dv: this.accelerationForState(state)\n    };\n    return output;\n  }\n};\n\n// src/animation/Animators/FrictionAnimator.ts\nvar FrictionAnimator = class {\n  constructor(options) {\n    this.options = {\n      velocity: 0,\n      friction: 2,\n      tolerance: 1 / 10\n    };\n    Object.assign(this.options, options);\n    this.state = {\n      x: 0,\n      v: this.options.velocity\n    };\n    this.integrator = new Integrator((state) => -(this.options.friction * state.v));\n  }\n  setFrom(value) {\n    this.state.x = value;\n  }\n  setTo(value) {\n  }\n  setVelocity(velocity) {\n    this.state.v = velocity;\n  }\n  getState() {\n    return this.state;\n  }\n  isReady() {\n    return true;\n  }\n  next(delta2) {\n    this.state = this.integrator.integrateState(this.state, delta2);\n    return this.state.x;\n  }\n  isFinished() {\n    return Math.abs(this.state.v) < this.options.tolerance;\n  }\n};\n\n// src/animation/Animators/SpringCurveValueConverter.ts\nvar epsilon = 1e-3;\nvar minDuration2 = 0.01;\nvar maxDuration2 = 10;\nvar minDamping2 = Number.MIN_VALUE;\nvar maxDamping2 = 1;\nfunction approximateRoot2(func, derivative, initialGuess, times = 12) {\n  let result = initialGuess;\n  for (let i = 1, end = times, asc = 1 <= end; asc ? i < end : i > end; asc ? i++ : i--) {\n    result = result - func(result) / derivative(result);\n  }\n  return result;\n}\nfunction angularFrequency(undampedFrequency, dampingRatio) {\n  return undampedFrequency * Math.sqrt(1 - Math.pow(dampingRatio, 2));\n}\nvar SpringCurveValueConverter;\n(function(SpringCurveValueConverter2) {\n  function computeDampingRatio(tension, friction, mass = 1) {\n    return friction / (2 * Math.sqrt(mass * tension));\n  }\n  SpringCurveValueConverter2.computeDampingRatio = computeDampingRatio;\n  function computeDuration(tension, friction, velocity = 0, mass = 1) {\n    let duration;\n    const dampingRatio = computeDampingRatio(tension, friction);\n    const undampedFrequency = Math.sqrt(tension / mass);\n    if (dampingRatio < 1) {\n      const a2 = Math.sqrt(1 - Math.pow(dampingRatio, 2));\n      const b2 = velocity / (a2 * undampedFrequency);\n      const c2 = dampingRatio / a2;\n      const d = -((b2 - c2) / epsilon);\n      if (d <= 0) {\n        return null;\n      }\n      duration = Math.log(d) / (dampingRatio * undampedFrequency);\n    } else {\n      return null;\n    }\n    return duration;\n  }\n  SpringCurveValueConverter2.computeDuration = computeDuration;\n  function computeDerivedCurveOptions(dampingRatio, duration, velocity = 0, mass = 1) {\n    let derivative, envelope;\n    dampingRatio = Math.max(Math.min(dampingRatio, maxDamping2), minDamping2);\n    duration = Math.max(Math.min(duration, maxDuration2), minDuration2);\n    if (dampingRatio < 1) {\n      envelope = function(envelopeUndampedFrequency) {\n        const exponentialDecay = envelopeUndampedFrequency * dampingRatio;\n        const currentDisplacement = exponentialDecay * duration;\n        const a2 = exponentialDecay - velocity;\n        const b2 = angularFrequency(envelopeUndampedFrequency, dampingRatio);\n        const c2 = Math.exp(-currentDisplacement);\n        return epsilon - a2 / b2 * c2;\n      };\n      derivative = function(derivativeUndampedFrequency) {\n        const exponentialDecay = derivativeUndampedFrequency * dampingRatio;\n        const currentDisplacement = exponentialDecay * duration;\n        const d = currentDisplacement * velocity + velocity;\n        const e = Math.pow(dampingRatio, 2) * Math.pow(derivativeUndampedFrequency, 2) * duration;\n        const f = Math.exp(-currentDisplacement);\n        const g = angularFrequency(Math.pow(derivativeUndampedFrequency, 2), dampingRatio);\n        const factor = -envelope(derivativeUndampedFrequency) + epsilon > 0 ? -1 : 1;\n        return factor * ((d - e) * f) / g;\n      };\n    } else {\n      envelope = function(envelopeUndampedFrequency) {\n        const a2 = Math.exp(-envelopeUndampedFrequency * duration);\n        const b2 = (envelopeUndampedFrequency - velocity) * duration + 1;\n        return -epsilon + a2 * b2;\n      };\n      derivative = function(derivativeUndampedFrequency) {\n        const a2 = Math.exp(-derivativeUndampedFrequency * duration);\n        const b2 = (velocity - derivativeUndampedFrequency) * Math.pow(duration, 2);\n        return a2 * b2;\n      };\n    }\n    const result = {\n      tension: 100,\n      friction: 10,\n      velocity\n    };\n    const initialGuess = 5 / duration;\n    const undampedFrequency = approximateRoot2(envelope, derivative, initialGuess);\n    if (!isNaN(undampedFrequency)) {\n      result.tension = Math.pow(undampedFrequency, 2) * mass;\n      result.friction = dampingRatio * 2 * Math.sqrt(mass * result.tension);\n    }\n    return result;\n  }\n  SpringCurveValueConverter2.computeDerivedCurveOptions = computeDerivedCurveOptions;\n})(SpringCurveValueConverter || (SpringCurveValueConverter = {}));\n\n// src/animation/Animators/SpringAnimator.ts\nvar SpringTensionFrictionDefaults = {\n  tension: 500,\n  friction: 10,\n  tolerance: 1 / 1e4,\n  velocity: 0\n};\nvar SpringDampingDurationDefaults = {\n  dampingRatio: 1,\n  duration: 1,\n  velocity: 0,\n  mass: 1\n};\nfunction isDampingDurationSpringOptions(options) {\n  if (!options) {\n    return false;\n  }\n  return typeof options.dampingRatio === \"number\" || typeof options.duration === \"number\" || typeof options.mass === \"number\";\n}\nvar SpringAnimator = class {\n  constructor(options, interpolation) {\n    this.interpolation = interpolation;\n    let _opt;\n    if (isDampingDurationSpringOptions(options)) {\n      const toPass = { ...SpringDampingDurationDefaults, ...options };\n      _opt = SpringCurveValueConverter.computeDerivedCurveOptions(toPass.dampingRatio, toPass.duration, toPass.velocity, toPass.mass);\n    } else {\n      _opt = options;\n    }\n    this.options = { ...SpringTensionFrictionDefaults, ..._opt };\n    this.state = {\n      x: 0,\n      v: this.options.velocity\n    };\n    this.integrator = new Integrator((state) => -this.options.tension * state.x - this.options.friction * state.v);\n  }\n  isReady() {\n    return this.interpolator !== void 0 && this.difference !== void 0;\n  }\n  next(delta2) {\n    this.state = this.integrator.integrateState(this.state, delta2);\n    const value = this.interpolator(this.progress());\n    return value;\n  }\n  isFinished() {\n    const positionNearZero = Math.abs(this.state.x) < this.options.tolerance;\n    const velocityNearZero = Math.abs(this.state.v) < this.options.tolerance;\n    return positionNearZero && velocityNearZero;\n  }\n  setFrom(value) {\n    this.current = value;\n    this.updateInterpolator();\n  }\n  setVelocity(velocity) {\n    this.state.v = velocity;\n  }\n  progress() {\n    return 1 - this.state.x / this.difference;\n  }\n  setTo(value) {\n    this.destination = value;\n    this.difference = this.interpolation.difference(this.destination, this.current);\n    this.state.x = this.difference;\n    this.updateInterpolator();\n  }\n  getState() {\n    return this.state;\n  }\n  updateInterpolator() {\n    if (this.current === void 0 || this.destination === void 0) {\n      return;\n    }\n    this.interpolator = this.interpolation.interpolate(this.current, this.destination);\n  }\n};\n\n// src/interpolation/Interpolation.ts\nfunction isInterpolatable(value) {\n  return typeof value === \"function\" && value.interpolationFor && typeof value.interpolationFor === \"function\";\n}\nvar Interpolation;\n(function(Interpolation3) {\n  function handleUndefined(from, to) {\n    if (from === void 0) {\n      from = to;\n    }\n    if (to === void 0) {\n      to = from;\n    }\n    return [from, to];\n  }\n  Interpolation3.handleUndefined = handleUndefined;\n})(Interpolation || (Interpolation = {}));\n\n// src/interpolation/NumberInterpolation.ts\nvar NumberInterpolation = {\n  interpolate(from, to) {\n    ;\n    [from, to] = Interpolation.handleUndefined(from, to);\n    const a1 = +from;\n    const b1 = to - a1;\n    return (progress2) => {\n      const value = a1 + b1 * progress2;\n      return value;\n    };\n  },\n  difference(from, to) {\n    return to - from;\n  }\n};\n\n// src/interpolation/ObjectInterpolation.ts\nvar ObjectInterpolation = (valueInterpolation) => {\n  return {\n    interpolate(from, to) {\n      ;\n      [from, to] = Interpolation.handleUndefined(from, to);\n      const result = Object.assign({}, from);\n      const interpolations = {};\n      const keys2 = new Set();\n      for (const key6 in from) {\n        interpolations[key6] = valueInterpolation.interpolate(from[key6], to[key6]);\n        keys2.add(key6);\n      }\n      for (const key6 in to) {\n        if (!keys2.has(key6)) {\n          interpolations[key6] = valueInterpolation.interpolate(from[key6], to[key6]);\n          keys2.add(key6);\n        }\n      }\n      return (progress2) => {\n        for (const key6 in interpolations) {\n          result[key6] = interpolations[key6](progress2);\n        }\n        return result;\n      };\n    },\n    difference(from, to) {\n      let sum = 0;\n      for (const key6 in from) {\n        const difference = valueInterpolation.difference(from[key6], to[key6]);\n        sum += Math.pow(difference, 2);\n      }\n      return Math.sqrt(sum);\n    }\n  };\n};\n\n// src/interpolation/NoInterpolation.ts\nvar NoInterpolation = {\n  interpolate(from, to) {\n    ;\n    [from, to] = Interpolation.handleUndefined(from, to);\n    return (progress2) => {\n      return progress2 < 0.5 ? from : to;\n    };\n  },\n  difference(from, to) {\n    return from === to ? 0 : 1;\n  }\n};\n\n// src/interpolation/ColorInterpolation.ts\nvar ColorInterpolation = (type = ColorMixModelType.HUSL) => {\n  return {\n    interpolate(from, to) {\n      ;\n      [from, to] = Interpolation.handleUndefined(from, to);\n      return Color.interpolate(Color(from), Color(to), type);\n    },\n    difference(from, to) {\n      return Color.difference(Color(from), Color(to));\n    }\n  };\n};\n\n// src/interpolation/ValueInterpolation.ts\nvar DefaultInterpolationOptions = {\n  colorModel: ColorMixModelType.HUSL\n};\nvar ValueInterpolation = class {\n  constructor(options = DefaultInterpolationOptions) {\n    this.interpolate = (from, to) => {\n      ;\n      [from, to] = Interpolation.handleUndefined(from, to);\n      return this.interPolationForValue(from).interpolate(from, to);\n    };\n    this.difference = (from, to) => {\n      const interpolation = this.interPolationForValue(from);\n      return interpolation.difference(from, to);\n    };\n    this.options = { ...DefaultInterpolationOptions, ...options };\n  }\n  interPolationForValue(value) {\n    const type = typeof value;\n    if (type === \"number\") {\n      return NumberInterpolation;\n    } else if (type === \"boolean\" || type === \"function\") {\n      return NoInterpolation;\n    } else if (Color.isColor(value)) {\n      return ColorInterpolation(this.options.colorModel);\n    } else if (type === \"object\") {\n      if (value === null) {\n        return NoInterpolation;\n      }\n      const constructor = value.constructor;\n      if (constructor && isInterpolatable(constructor)) {\n        const interpolation = constructor.interpolationFor(value, this);\n        if (interpolation && interpolation !== this && interpolation.constructor !== ValueInterpolation) {\n          return interpolation;\n        }\n      }\n      return ObjectInterpolation(this);\n    }\n    console.warn(`No interpolation defined for ${value}`);\n    return NoInterpolation;\n  }\n};\nvar AnyInterpolation = new ValueInterpolation();\n\n// src/animation/Animators/InertialScrollAnimator.ts\nvar Defaults = {\n  velocity: 0,\n  min: 0,\n  max: 0,\n  momentum: {\n    friction: 2,\n    tolerance: 10\n  },\n  bounce: {\n    tension: 500,\n    friction: 10,\n    tolerance: 1\n  }\n};\nvar InertialScrollAnimator = class {\n  constructor(options) {\n    this.options = Object.assign({ ...Defaults }, options);\n    this.frictionAnimator = new FrictionAnimator({\n      friction: this.options.momentum.friction,\n      tolerance: this.options.momentum.tolerance,\n      velocity: this.options.velocity\n    });\n    this.springAnimator = new SpringAnimator({\n      tension: this.options.bounce.tension,\n      friction: this.options.bounce.friction,\n      tolerance: this.options.bounce.tolerance,\n      velocity: this.options.velocity\n    }, NumberInterpolation);\n    this.useSpring = false;\n  }\n  isReady() {\n    return true;\n  }\n  next(delta2) {\n    this.current = this.currentAnimator.next(delta2);\n    if (!this.useSpring) {\n      this.tryTransitionToSpring();\n    }\n    return this.current;\n  }\n  get currentAnimator() {\n    if (this.useSpring) {\n      return this.springAnimator;\n    }\n    return this.frictionAnimator;\n  }\n  isFinished() {\n    return this.currentAnimator.isFinished();\n  }\n  get state() {\n    return this.currentAnimator.getState();\n  }\n  setFrom(value) {\n    this.setState({ x: value, v: this.state.v });\n  }\n  setState(state) {\n    this.frictionAnimator.setFrom(state.x);\n    this.frictionAnimator.setVelocity(state.v);\n    if (this.isValidState()) {\n      return this.tryTransitionToSpring();\n    } else {\n      let bound = 0;\n      if (this.state.x <= this.options.min) {\n        bound = this.options.min;\n      }\n      if (this.state.x >= this.options.max) {\n        bound = this.options.max;\n      }\n      return this.transitionToSpring(bound);\n    }\n  }\n  setTo(destination) {\n    this.frictionAnimator.setTo(destination);\n    this.springAnimator.setTo(destination);\n  }\n  setLimits(min, max) {\n    this.options.min = min;\n    this.options.max = max;\n  }\n  tryTransitionToSpring() {\n    const belowMinWithVelocity = this.state.x < this.options.min && this.state.v <= 0;\n    const aboveMaxWithVelocity = this.state.x > this.options.max && this.state.v >= 0;\n    if (belowMinWithVelocity || aboveMaxWithVelocity) {\n      let bound;\n      if (belowMinWithVelocity) {\n        bound = this.options.min;\n      } else {\n        bound = this.options.max;\n      }\n      this.transitionToSpring(bound);\n    } else {\n      this.useSpring = false;\n    }\n  }\n  transitionToSpring(bound) {\n    this.springAnimator.setFrom(this.state.x);\n    this.springAnimator.setVelocity(this.state.v);\n    this.springAnimator.setTo(bound);\n    this.useSpring = true;\n  }\n  isValidState() {\n    const belowMinTravelingBack = this.state.x < this.options.min && this.state.v > 0;\n    const aboveMaxTravelingBack = this.state.x > this.options.max && this.state.v < 0;\n    if (belowMinTravelingBack || aboveMaxTravelingBack) {\n      let bound;\n      if (belowMinTravelingBack) {\n        bound = this.options.min;\n      } else {\n        bound = this.options.max;\n      }\n      const friction = this.frictionAnimator.options.friction;\n      const solution = 1 - friction * (bound - this.state.x) / this.state.v;\n      return solution > 0;\n    }\n    return true;\n  }\n};\n\n// src/animation/Drivers/AnimationDriver.ts\nvar AnimationDriver = class {\n  constructor(animator, updateCallback, finishedCallback) {\n    this.animator = animator;\n    this.updateCallback = updateCallback;\n    this.finishedCallback = finishedCallback;\n    this.update = (frame2, elapsed) => {\n      if (this.animator.isFinished()) {\n        this.finish();\n      } else {\n        const value = this.animator.next(elapsed);\n        this.updateCallback(value);\n      }\n    };\n    if (!this.animator.isReady()) {\n      console.warn(\"AnimationDriver initialized with animator that isn't ready\");\n    }\n  }\n  finish() {\n    if (this.finishedCallback) {\n      this.finishedCallback(this.animator.isFinished());\n    }\n  }\n  isFinished() {\n    return this.animator.isFinished();\n  }\n};\n\n// src/animation/Drivers/MainLoopDriver.ts\nvar MainLoopAnimationDriver = class extends AnimationDriver {\n  play() {\n    if (RenderEnvironment.target !== RenderTarget.preview) {\n      this.finishedCallback && this.finishedCallback(false);\n      return;\n    }\n    MainLoop.on(\"update\", this.update);\n  }\n  cancel() {\n    MainLoop.off(\"update\", this.update);\n  }\n  finish() {\n    MainLoop.off(\"update\", this.update);\n    super.finish();\n  }\n};\n\n// src/components/hoc/WithDragging.tsx\nvar DraggingContext = (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)({ dragging: false });\nvar hoistNonReactStatic = require_hoist_non_react_statics_cjs();\nfunction WithDragging(Component19) {\n  const _WithDraggingHOC = class extends react__WEBPACK_IMPORTED_MODULE_0__.Component {\n    constructor(props, defaultProps) {\n      super(props, defaultProps);\n      this.state = {\n        isDragging: false\n      };\n      this.x = Animatable(0);\n      this.y = Animatable(0);\n      this.onChangePosition = (change, transaction) => {\n        if (change.value === change.oldValue) {\n          return;\n        }\n        if (this.props.onMove) {\n          this.props.onMove(this.point, this);\n        }\n      };\n      this.isMoving = false;\n      this.isAnimating = false;\n      this.directionLockAxis = null;\n      this._constraints = null;\n      this.panStart = (event) => {\n        if (!this.props.enabled) {\n          return;\n        }\n        this.isMoving = this.isAnimating;\n        this.stopAnimation();\n        this.resetdirectionLock();\n        this.layerStartPoint = this.point;\n        this.correctedLayerStartPoint = this.point;\n        if (this._constraints && this.props.bounce) {\n          this.correctedLayerStartPoint = this.constrainPosition(this.correctedLayerStartPoint, this._constraints, 1 / this.props.overdragScale);\n        }\n        this.previousPoint = this.correctedLayerStartPoint;\n        if (!this.state.isDragging) {\n          this.setState({ isDragging: true });\n        }\n        if (this.props.onDragSessionStart) {\n          this.props.onDragSessionStart(event, this);\n        }\n      };\n      this.pan = (event) => {\n        const {\n          enabled,\n          speedX,\n          speedY,\n          directionLock,\n          overdragScale,\n          vertical,\n          horizontal,\n          pixelAlign,\n          onDragStart,\n          onDragWillMove,\n          onDragDidMove,\n          onDragSessionMove\n        } = this.props;\n        if (!enabled) {\n          return;\n        }\n        let point = { ...this.previousPoint };\n        point.x += event.delta.x * speedX;\n        point.y += event.delta.y * speedY;\n        this.previousPoint = { ...point };\n        if (this._constraints) {\n          point = this.constrainPosition(point, this._constraints, overdragScale);\n        }\n        if (directionLock) {\n          if (this.directionLockAxis === null) {\n            const offset = event.offset;\n            offset.x = offset.x * speedX;\n            offset.y = offset.y * speedY;\n            this.updatedirectionLock(offset);\n            return;\n          } else {\n            if (this.directionLockAxis === \"y\") {\n              point.x = this.layerStartPoint.x;\n            }\n            if (this.directionLockAxis === \"x\") {\n              point.y = this.layerStartPoint.y;\n            }\n          }\n        }\n        if (!this.state.isDragging) {\n          this.setState({ isDragging: true });\n          this.isMoving = true;\n          if (onDragStart) {\n            onDragStart(event, this);\n          }\n        }\n        if (onDragWillMove) {\n          onDragWillMove(event, this);\n        }\n        if (pixelAlign) {\n          point.x = Math.round(point.x);\n          point.y = Math.round(point.y);\n        }\n        if (!horizontal && !vertical) {\n          return;\n        }\n        let axis = null;\n        if (horizontal && !vertical) {\n          axis = \"x\";\n        } else if (vertical && !horizontal) {\n          axis = \"y\";\n        }\n        this.setPoint(point, axis);\n        if (onDragDidMove) {\n          onDragDidMove(event, this);\n        }\n        if (onDragSessionMove) {\n          onDragSessionMove(event, this);\n        }\n      };\n      this.panEnd = (event) => {\n        if (!this.props.enabled) {\n          return;\n        }\n        this.startAnimation(event);\n        const { onDragSessionEnd, onDragEnd } = this.props;\n        if (this.state.isDragging) {\n          if (onDragEnd) {\n            onDragEnd(event, this);\n          }\n        }\n        if (onDragSessionEnd) {\n          onDragSessionEnd(event, this);\n        }\n        if (this.state.isDragging) {\n          this.setState({ isDragging: false });\n        }\n        this.isMoving = this.isAnimating;\n      };\n      this.mouseWheelStart = (event) => {\n        this.correctedLayerStartPoint = this.point;\n        this.previousPoint = this.correctedLayerStartPoint;\n        this.stopAnimation();\n      };\n      this.mouseWheel = (event) => {\n        const {\n          enabled,\n          speedX,\n          speedY,\n          vertical,\n          horizontal,\n          pixelAlign,\n          onDragWillMove,\n          onDragDidMove,\n          mouseWheel\n        } = this.props;\n        if (!mouseWheel || !enabled) {\n          return;\n        }\n        let point = { ...this.point };\n        point.x -= event.delta.x * speedX;\n        point.y -= event.delta.y * speedY;\n        if (this._constraints) {\n          point = this.constrainPosition(point, this._constraints, 0, false);\n        }\n        if (onDragWillMove) {\n          onDragWillMove(event, this);\n        }\n        if (pixelAlign) {\n          point.x = Math.round(point.x);\n          point.y = Math.round(point.y);\n        }\n        if (!horizontal && !vertical) {\n          return;\n        }\n        let axis = null;\n        if (horizontal && !vertical) {\n          axis = \"x\";\n        } else if (vertical && !horizontal) {\n          axis = \"y\";\n        }\n        this.setPoint(point, axis);\n        if (onDragDidMove) {\n          onDragDidMove(event, this);\n        }\n      };\n      this.mouseWheelEnd = (event) => {\n      };\n      this.onAnimationStep = (axis, value) => {\n        if (axis === \"x\" && this.props.horizontal === false) {\n          return;\n        }\n        if (axis === \"y\" && this.props.vertical === false) {\n          return;\n        }\n        let delta2 = 0;\n        if (this.constraints) {\n          if (this.props.bounce) {\n            delta2 = value - this.getValue(axis);\n          } else {\n            const { minX, minY, maxX, maxY } = this.calculateConstraints(this._constraints);\n            if (axis === \"x\") {\n              delta2 = clamp3(value, minX, maxX) - this.getValue(axis);\n            }\n            if (axis === \"y\") {\n              delta2 = clamp3(value, minY, maxY) - this.getValue(axis);\n            }\n          }\n        } else {\n          delta2 = value - this.getValue(axis);\n        }\n        const updatePoint = this.point;\n        if (axis === \"x\") {\n          updatePoint[axis] = updatePoint[axis] + delta2;\n        }\n        if (axis === \"y\") {\n          updatePoint[axis] = updatePoint[axis] + delta2;\n        }\n        this.setPoint(updatePoint, axis);\n      };\n      this.onAnimationStop = (axis) => {\n        if (axis === \"x\" && this.props.horizontal === false) {\n          return;\n        }\n        if (axis === \"y\" && this.props.vertical === false) {\n          return;\n        }\n        if (!this.animation) {\n          return;\n        }\n        if (this.props.pixelAlign) {\n          const point = this.point;\n          point.x = Math.round(point.x);\n          point.y = Math.round(point.y);\n          this.setPoint(point, axis);\n        }\n        if (this.animation.x.isFinished() && this.animation.y.isFinished()) {\n          return this.stopAnimation();\n        }\n      };\n      this.stopAnimation = () => {\n        this.isAnimating = false;\n        this.isMoving = false;\n        if (!this.animation) {\n          return;\n        }\n        this.animation.x.cancel();\n        this.animation.y.cancel();\n        if (this.props.onDragAnimationEnd) {\n          this.props.onDragAnimationEnd(this.animation, this);\n        }\n        this.animation = null;\n      };\n      const x = this.props.left;\n      const y = this.props.top;\n      if (!x) {\n        this.x = Animatable(0);\n      } else if (isAnimatable2(x)) {\n        this.x = x;\n      } else {\n        this.x = Animatable(x);\n      }\n      if (!y) {\n        this.y = Animatable(0);\n      } else if (isAnimatable2(y)) {\n        this.y = y;\n      } else {\n        this.y = Animatable(y);\n      }\n      this.x.onUpdate(this.onChangePosition);\n      this.y.onUpdate(this.onChangePosition);\n      const constraints = this.props.constraints;\n      if (constraints) {\n        this.constraints = constraints;\n      }\n    }\n    UNSAFE_componentWillReceiveProps(props) {\n      if (this.props.left !== props.left && isFiniteNumber(props.left)) {\n        this.x.set(props.left);\n      }\n      if (this.props.top !== props.top && isFiniteNumber(props.top)) {\n        this.y.set(props.top);\n      }\n      const constraints = props.constraints;\n      if (constraints) {\n        this.constraints = constraints;\n      }\n    }\n    get point() {\n      return { x: this.x.get(), y: this.y.get() };\n    }\n    setPoint(point, axis = null) {\n      switch (axis) {\n        case \"x\":\n          this.x.set(point.x);\n          break;\n        case \"y\":\n          this.y.set(point.y);\n          break;\n        case null:\n          this.x.set(point.x);\n          this.y.set(point.y);\n          break;\n      }\n    }\n    getValue(axis) {\n      switch (axis) {\n        case \"x\":\n          return this.x.get();\n        case \"y\":\n          return this.y.get();\n      }\n    }\n    get width() {\n      const width = this.props.width;\n      if (!width) {\n        return 100;\n      }\n      if (isAnimatable2(width)) {\n        return width.get();\n      }\n      if (typeof width === \"string\") {\n        return parseFloat(width);\n      }\n      return width;\n    }\n    get height() {\n      const height = this.props.height;\n      if (!height) {\n        return 100;\n      }\n      if (isAnimatable2(height)) {\n        return height.get();\n      }\n      if (typeof height === \"string\") {\n        return parseFloat(height);\n      }\n      return height;\n    }\n    get constraints() {\n      return this._constraints;\n    }\n    set constraints(value) {\n      if (value !== null && typeof value === \"object\") {\n        this._constraints = {\n          x: value.x || 0,\n          y: value.y || 0,\n          width: value.width || 0,\n          height: value.height || 0\n        };\n      } else {\n        this._constraints = null;\n      }\n      if (this._constraints) {\n        this.updateAnimationConstraints(this._constraints);\n      }\n    }\n    get constraintsOffset() {\n      if (!this.constraints) {\n        return { x: 0, y: 0 };\n      }\n      const { minX, minY, maxX, maxY } = this.calculateConstraints(this._constraints);\n      const point = this.point;\n      const constrainedPoint = { x: clamp3(point.x, minX, maxX), y: clamp3(point.y, minY, maxY) };\n      const offset = { x: point.x - constrainedPoint.x, y: point.y - constrainedPoint.y };\n      return offset;\n    }\n    get isBeyondConstraints() {\n      const constraintsOffset = this.constraintsOffset;\n      if (constraintsOffset.x !== 0) {\n        return true;\n      }\n      if (constraintsOffset.y !== 0) {\n        return true;\n      }\n      return false;\n    }\n    clampAndScale(value, min, max, scale2, scaleAllowed) {\n      if (!scaleAllowed) {\n        return clamp3(value, min, max);\n      }\n      if (value < min) {\n        value = min + (value - min) * scale2;\n      }\n      if (value > max) {\n        value = max + (value - max) * scale2;\n      }\n      return value;\n    }\n    calculateConstraints(bounds) {\n      if (!bounds) {\n        return { minX: Infinity, maxX: Infinity, minY: Infinity, maxY: Infinity };\n      }\n      if (bounds.width < this.width) {\n        bounds.width = this.width;\n      }\n      if (bounds.height < this.height) {\n        bounds.height = this.height;\n      }\n      const constraints = {\n        minX: Rect.minX(bounds),\n        maxX: Rect.maxX(bounds),\n        minY: Rect.minY(bounds),\n        maxY: Rect.maxY(bounds)\n      };\n      constraints.maxX -= this.width;\n      constraints.maxY -= this.height;\n      return constraints;\n    }\n    constrainPosition(proposedPoint, bounds, scale2, overdrag = this.props.overdrag) {\n      const { maxX, maxY, minX, minY } = this.calculateConstraints(this._constraints);\n      const point = {\n        x: this.clampAndScale(proposedPoint.x, minX, maxX, scale2, overdrag),\n        y: this.clampAndScale(proposedPoint.y, minY, maxY, scale2, overdrag)\n      };\n      if (this.props.speedX === 0 || this.props.horizontal === false) {\n        point.x = proposedPoint.x;\n      }\n      if (this.props.speedY === 0 || this.props.vertical === false) {\n        point.y = proposedPoint.y;\n      }\n      return point;\n    }\n    updatedirectionLock(correctedDelta) {\n      if (Math.abs(correctedDelta.y) > this.props.directionLockThreshold.y) {\n        this.directionLockAxis = \"y\";\n      } else if (Math.abs(correctedDelta.x) > this.props.directionLockThreshold.x) {\n        this.directionLockAxis = \"x\";\n      }\n      if (this.directionLockAxis !== null) {\n        if (this.props.onDragDirectionLockStart) {\n          this.props.onDragDirectionLockStart(this.directionLockAxis, this);\n        }\n      }\n    }\n    resetdirectionLock() {\n      this.directionLockAxis = null;\n    }\n    setupAnimation() {\n      if (this.animation) {\n        return;\n      }\n      this.animation = { x: this.setupAnimationForAxis(\"x\"), y: this.setupAnimationForAxis(\"y\") };\n      this.updateAnimationConstraints(this._constraints);\n    }\n    setupAnimationForAxis(axis) {\n      const properties = {};\n      properties[axis] = true;\n      const animator = new InertialScrollAnimator({\n        momentum: this.props.momentumOptions,\n        bounce: this.props.bounceOptions\n      });\n      const updateCallback = (value) => {\n        this.onAnimationStep(axis, value);\n      };\n      const doneCallback = () => {\n        this.onAnimationStop(axis);\n      };\n      return new MainLoopAnimationDriver(animator, updateCallback, doneCallback);\n    }\n    updateAnimationConstraints(constraints) {\n      if (!this.animation) {\n        return;\n      }\n      if (constraints) {\n        const { minX, minY, maxX, maxY } = this.calculateConstraints(constraints);\n        this.animation.x.animator.setLimits(minX, maxX);\n        this.animation.y.animator.setLimits(minY, maxY);\n      } else {\n        this.animation.x.animator.setLimits(-Infinity, Infinity);\n        this.animation.y.animator.setLimits(-Infinity, Infinity);\n      }\n    }\n    startAnimation(event) {\n      const {\n        momentum,\n        bounce,\n        momentumVelocityMultiplier,\n        speedX,\n        speedY,\n        overdrag,\n        onDragAnimationStart\n      } = this.props;\n      if (!(momentum || bounce)) {\n        return;\n      }\n      if (this.isBeyondConstraints === false && momentum === false) {\n        return;\n      }\n      if (this.isBeyondConstraints === false && this.state.isDragging === false) {\n        return;\n      }\n      const { minX, minY, maxX, maxY } = this.calculateConstraints(this._constraints);\n      const startAnimationX = overdrag === true || this.point.x > minX && this.point.x < maxX;\n      const startAnimationY = overdrag === true || this.point.y > minY && this.point.y < maxY;\n      if (startAnimationX === startAnimationY && startAnimationY === false) {\n        return;\n      }\n      const velocity = event.velocity(0.1);\n      let velocityX = velocity.x * momentumVelocityMultiplier * speedX;\n      let velocityY = velocity.y * momentumVelocityMultiplier * speedY;\n      if (this.directionLockAxis === \"x\") {\n        velocityY = 0;\n      }\n      if (this.directionLockAxis === \"y\") {\n        velocityX = 0;\n      }\n      this.setupAnimation();\n      this.isAnimating = true;\n      this.isMoving = true;\n      if (!this.animation) {\n        return;\n      }\n      this.animation.x.animator.setState({ x: this.point.x, v: velocityX });\n      if (startAnimationX) {\n        this.animation.x.play();\n      }\n      this.animation.y.animator.setState({ x: this.point.y, v: velocityY });\n      if (startAnimationY) {\n        this.animation.y.play();\n      }\n      if (onDragAnimationStart) {\n        onDragAnimationStart(this.animation, this);\n      }\n    }\n    wrapHandler(ownHandler, originalHandler) {\n      if (!originalHandler) {\n        return ownHandler;\n      }\n      return (event) => {\n        ownHandler(event);\n        originalHandler(event);\n      };\n    }\n    render() {\n      const {\n        onPanStart,\n        onPan,\n        onPanEnd,\n        onMouseWheelStart,\n        onMouseWheel,\n        onMouseWheelEnd,\n        ...attributes\n      } = this.props;\n      const originalProps = { ...attributes };\n      Object.keys(_WithDraggingHOC.draggingDefaultProps).forEach((key6) => {\n        delete originalProps[key6];\n      });\n      originalProps.onPanStart = this.wrapHandler(this.panStart, onPanStart);\n      originalProps.onPan = this.wrapHandler(this.pan, onPan);\n      originalProps.onPanEnd = this.wrapHandler(this.panEnd, onPanEnd);\n      originalProps.onMouseWheelStart = this.wrapHandler(this.mouseWheelStart, onMouseWheelStart);\n      originalProps.onMouseWheel = this.wrapHandler(this.mouseWheel, onMouseWheel);\n      originalProps.onMouseWheelEnd = this.wrapHandler(this.mouseWheelEnd, onMouseWheelEnd);\n      originalProps.left = this.x;\n      originalProps.top = this.y;\n      return /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(DraggingContext.Provider, {\n        value: { dragging: this.state.isDragging }\n      }, /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Component19, {\n        ...originalProps\n      }));\n    }\n  };\n  let WithDraggingHOC = _WithDraggingHOC;\n  WithDraggingHOC.draggingDefaultProps = {\n    momentum: true,\n    momentumOptions: { friction: 2.1, tolerance: 1 },\n    momentumVelocityMultiplier: 800,\n    speedX: 1,\n    speedY: 1,\n    bounce: true,\n    bounceOptions: { friction: 40, tension: 200, tolerance: 1 },\n    directionLock: false,\n    directionLockThreshold: { x: 10, y: 10 },\n    overdrag: true,\n    overdragScale: 0.5,\n    pixelAlign: true,\n    velocityTimeout: 100,\n    velocityScale: 890,\n    horizontal: true,\n    vertical: true,\n    enabled: true,\n    constraints: {},\n    mouseWheel: false\n  };\n  WithDraggingHOC.defaultProps = Object.assign({}, Component19.defaultProps, _WithDraggingHOC.draggingDefaultProps);\n  const withDragging = WithDraggingHOC;\n  hoistNonReactStatic(withDragging, Component19);\n  return withDragging;\n}\n\n// src/components/hoc/WithEvents.tsx\nvar hoistNonReactStatic2 = require_hoist_non_react_statics_cjs();\nvar hoverProps = {\n  onMouseEnter: \"mouseenter\",\n  onMouseLeave: \"mouseleave\"\n};\nvar hoverEventKeys = Object.keys(hoverProps);\nvar eventHandlerMapping = {\n  panstart: [\"onPanStart\"],\n  pan: [\"onPan\"],\n  panend: [\"onPanEnd\"],\n  tapstart: [\"onTapStart\", \"onMouseDown\"],\n  tap: [\"onTap\", \"onClick\"],\n  tapend: [\"onTapEnd\", \"onMouseUp\"],\n  mousewheelstart: [\"onMouseWheelStart\"],\n  mousewheel: [\"onMouseWheel\"],\n  mousewheelend: [\"onMouseWheelEnd\"]\n};\nvar tapEventKeys = new Set([\"tapstart\", \"tap\", \"tapend\"]);\nfunction WithEvents(BaseComponent) {\n  var _a;\n  const withEvents = (_a = class extends react__WEBPACK_IMPORTED_MODULE_0__.Component {\n    constructor() {\n      super(...arguments);\n      this.shouldCancelTap = false;\n      this.activeEventListeners = new Map();\n      this.hasFramerEventListener = false;\n      this.component = (0,react__WEBPACK_IMPORTED_MODULE_0__.createRef)();\n    }\n    get element() {\n      return this.component.current && this.component.current.element;\n    }\n    componentDidMount() {\n      this.addEventListeners();\n    }\n    componentDidUpdate(prevProps) {\n      this.addEventListeners(prevProps);\n    }\n    componentWillUnmount() {\n      this.removeEventListeners();\n    }\n    addEventListeners(prevProps) {\n      if (this.element && !this.hasFramerEventListener) {\n        this.element.addEventListener(\"FramerEvent\", ({ detail }) => {\n          const type = detail.type;\n          const framerEvent = detail.event;\n          this.handleEvent(type, framerEvent);\n        });\n        hoverEventKeys.forEach((eventName) => this.addHoverEvent(eventName));\n        this.hasFramerEventListener = true;\n      } else if (this.element && prevProps) {\n        hoverEventKeys.forEach((eventName) => this.checkHoverEvent(eventName, prevProps));\n      } else if (!this.element) {\n        this.hasFramerEventListener = false;\n      }\n    }\n    removeEventListeners() {\n      hoverEventKeys.forEach((eventName) => this.removeHoverEvent(eventName));\n    }\n    addHoverEvent(eventName) {\n      const originalEventListener = this.props[eventName];\n      if (this.element && originalEventListener) {\n        const eventListener = (e) => {\n          const framerEvent = new FramerEvent(e);\n          originalEventListener(framerEvent);\n        };\n        this.activeEventListeners.set(eventName, eventListener);\n        const domEventName = hoverProps[eventName];\n        this.element.addEventListener(domEventName, eventListener);\n      }\n    }\n    removeHoverEvent(eventName) {\n      const eventListener = this.activeEventListeners.get(eventName);\n      if (this.element && eventListener) {\n        const domEventName = hoverProps[eventName];\n        this.element.removeEventListener(domEventName, eventListener);\n        this.activeEventListeners.delete(eventName);\n      }\n    }\n    checkHoverEvent(eventName, prevProps) {\n      if (prevProps[eventName] !== this.props[eventName]) {\n        this.removeHoverEvent(eventName);\n        this.addHoverEvent(eventName);\n      }\n    }\n    handleEvent(type, framerEvent) {\n      const eventListenerKeys = eventHandlerMapping[type];\n      if (!eventListenerKeys)\n        return;\n      eventListenerKeys.forEach((eventKey) => {\n        const eventListener = this.props[eventKey];\n        const cancelEvent = this.shouldCancelTap && tapEventKeys.has(eventKey);\n        if (eventListener && !cancelEvent) {\n          eventListener(framerEvent);\n        }\n      });\n    }\n    render() {\n      return /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(DraggingContext.Consumer, null, (value) => {\n        this.shouldCancelTap = value.dragging;\n        return /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(BaseComponent, {\n          ...this.props,\n          ref: this.component\n        });\n      });\n    }\n  }, _a.defaultProps = Object.assign({}, BaseComponent.defaultProps), _a);\n  hoistNonReactStatic2(withEvents, BaseComponent);\n  return withEvents;\n}\n\n// src/render/presentation/Frame/DeprecatedFrame.tsx\n\n\n// src/data/ObservableObject.ts\nvar hasOwnProperty = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction ObservableObject(initial = {}, makeAnimatables = false, observeAnimatables = true) {\n  const unproxiedState = {};\n  unproxiedState[$private] = {\n    makeAnimatables,\n    observeAnimatables,\n    observers: new Observers(),\n    reset() {\n      for (const key6 in state) {\n        if (hasOwnProperty(state, key6)) {\n          state[key6] = hasOwnProperty(initial, key6) ? initial[key6] : void 0;\n        }\n      }\n    },\n    transactions: new Set()\n  };\n  const state = new Proxy(unproxiedState, sharedProxyHandler);\n  Object.assign(state, initial);\n  return state;\n}\n(function(ObservableObject2) {\n  function resetObject(target) {\n    return target[$private].reset();\n  }\n  ObservableObject2.resetObject = resetObject;\n  function addObserver(target, observer) {\n    return target[$private].observers.add(observer);\n  }\n  ObservableObject2.addObserver = addObserver;\n})(ObservableObject || (ObservableObject = {}));\nvar ObservableObjectProxyHandler = class {\n  constructor() {\n    this.set = (target, key6, value, receiver) => {\n      if (key6 === $private) {\n        return false;\n      }\n      const privateObject = target[$private];\n      let animatable;\n      let rawValue;\n      if (isAnimatable2(value)) {\n        animatable = value;\n        rawValue = animatable.get();\n      } else {\n        rawValue = value;\n      }\n      if (privateObject.makeAnimatables && typeof value !== \"function\" && typeof value !== \"object\" && !animatable) {\n        animatable = Animatable(value);\n      }\n      if (privateObject.observeAnimatables && animatable) {\n        const transactions = privateObject.transactions;\n        animatable.onUpdate({\n          update: (change, transaction) => {\n            if (transaction) {\n              transactions.add(transaction);\n            }\n            privateObject.observers.notify({ value: receiver }, transaction);\n          },\n          finish: (transaction) => {\n            if (transactions.delete(transaction)) {\n              privateObject.observers.finishTransaction(transaction);\n            }\n          }\n        });\n      }\n      let result = false;\n      let changed = true;\n      if (target[key6] !== void 0) {\n        if (isAnimatable2(target[key6])) {\n          changed = target[key6].get() !== rawValue;\n          target[key6].set(rawValue);\n        } else {\n          changed = target[key6] !== rawValue;\n          target[key6] = rawValue;\n        }\n        const rawValueIsObject = rawValue !== null && typeof rawValue === \"object\";\n        if (Array.isArray(rawValue) || rawValueIsObject)\n          changed = true;\n        result = true;\n      } else {\n        if (animatable) {\n          value = animatable;\n        }\n        result = Reflect.set(target, key6, value);\n      }\n      if (changed) {\n        privateObject.observers.notify({ value: receiver });\n      }\n      return result;\n    };\n    this.get = (target, key6, receiver) => {\n      if (key6 === $private) {\n        return target[key6];\n      }\n      const value = Reflect.get(target, key6, receiver);\n      return typeof value === \"function\" ? value.bind(receiver) : value;\n    };\n  }\n  deleteProperty(target, key6) {\n    const result = Reflect.deleteProperty(target, key6);\n    target[$private].observers.notify({ value: target });\n    return result;\n  }\n  ownKeys(target) {\n    const keys2 = Reflect.ownKeys(target);\n    const privateIndex = keys2.indexOf($private);\n    if (privateIndex !== -1) {\n      keys2.splice(privateIndex, 1);\n    }\n    return keys2;\n  }\n  getOwnPropertyDescriptor(target, key6) {\n    if (key6 === $private) {\n      return void 0;\n    }\n    return Reflect.getOwnPropertyDescriptor(target, key6);\n  }\n};\nvar sharedProxyHandler = new ObservableObjectProxyHandler();\nvar $private = Symbol(\"private\");\n\n// src/render/traits/Radius.ts\nvar key2 = \"radius\";\nfunction hasRadius(props) {\n  return key2 in props;\n}\nfunction getRadiusValue(value) {\n  let num = Number(value);\n  if (typeof value === \"string\" && isNaN(num)) {\n    return value;\n  } else if (isAnimatable2(value)) {\n    num = Animatable.getNumber(value);\n  }\n  return num ? `${num}px` : \"0\";\n}\nfunction hasRadiusValue(value) {\n  return value && value !== \"0\";\n}\nfunction collectRadiusFromProps(props, style) {\n  if (!hasRadius(props))\n    return;\n  const { radius } = props;\n  if (typeof radius === \"string\" || isAnimatable2(radius) || isFiniteNumber(radius)) {\n    const radiusValue = getRadiusValue(radius);\n    if (hasRadiusValue(radiusValue)) {\n      style.borderTopLeftRadius = style.borderTopRightRadius = style.borderBottomRightRadius = style.borderBottomLeftRadius = radiusValue;\n    }\n  } else if (radius) {\n    const topLeft = getRadiusValue(radius.topLeft);\n    const topRight = getRadiusValue(radius.topRight);\n    const bottomRight = getRadiusValue(radius.bottomRight);\n    const bottomLeft = getRadiusValue(radius.bottomLeft);\n    if (hasRadiusValue(topLeft) || hasRadiusValue(topRight) || hasRadiusValue(bottomRight) || hasRadiusValue(bottomLeft)) {\n      style.borderTopLeftRadius = topLeft;\n      style.borderTopRightRadius = topRight;\n      style.borderBottomRightRadius = bottomRight;\n      style.borderBottomLeftRadius = bottomLeft;\n    }\n  }\n}\n\n// src/render/traits/Blending.ts\nfunction collectBlendingFromProps(node, style) {\n  if (!node.blendingMode || node.blendingMode === \"normal\")\n    return;\n  style.mixBlendMode = node.blendingMode;\n}\n\n// src/render/traits/Overflow.ts\nfunction collectOverflowFromProps(props, style) {\n  if (props.overflow) {\n    style.overflow = props.overflow;\n  }\n}\n\n// src/render/traits/Opacity.ts\nvar key3 = \"opacity\";\nfunction withOpacity(target) {\n  return key3 in target;\n}\nfunction collectOpacityFromProps(props, style) {\n  if (!withOpacity(props))\n    return;\n  const opacity = Animatable.getNumber(props.opacity);\n  if (opacity === 1)\n    return;\n  style.opacity = opacity;\n}\n\n// src/render/style/shadow.tsx\n\n\n// src/render/types/Shadow.ts\nvar shadowKeys = [\"color\", \"x\", \"y\", \"blur\"];\nvar Shadow;\n(function(Shadow3) {\n  function is(shadow) {\n    return shadow && shadowKeys.every((key6) => key6 in shadow);\n  }\n  Shadow3.is = is;\n})(Shadow || (Shadow = {}));\nvar boxShadowKeys = [\"inset\", \"color\", \"x\", \"y\", \"blur\", \"spread\"];\nvar BoxShadow;\n(function(BoxShadow2) {\n  function is(shadow) {\n    return shadow && boxShadowKeys.every((key6) => key6 in shadow);\n  }\n  BoxShadow2.is = is;\n  function toCSS(shadow) {\n    const inset = shadow.inset ? \"inset \" : \"\";\n    return `${inset}${shadow.x}px ${shadow.y}px ${shadow.blur}px ${shadow.spread}px ${shadow.color}`;\n  }\n  BoxShadow2.toCSS = toCSS;\n})(BoxShadow || (BoxShadow = {}));\n\n// src/render/presentation/CustomProperties.tsx\n\nvar VariableRegex = /var\\(([^),]+)/;\nvar CustomPropertiesContext = (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(() => null);\nvar CustomProperties = class extends react__WEBPACK_IMPORTED_MODULE_0__.PureComponent {\n  constructor() {\n    super(...arguments);\n    this.lookup = (variable) => {\n      const match = VariableRegex.exec(variable);\n      const customProperty = match ? match[1].trim() : \"\";\n      return this.props.customProperties[customProperty] || null;\n    };\n  }\n  render() {\n    const { children, customProperties } = this.props;\n    return /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(CustomPropertiesContext.Provider, {\n      value: this.lookup\n    }, /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"div\", {\n      style: customProperties\n    }, children));\n  }\n};\n\n// src/render/style/shadow.tsx\nfunction shadowsAsFilter(shadows) {\n  const filters = [];\n  if (shadows && shadows.length) {\n    const dropShadows = shadows.map((shadowItem) => {\n      return `drop-shadow(${shadowItem.x}px ${shadowItem.y}px ${shadowItem.blur}px ${shadowItem.color})`;\n    });\n    filters.push(...dropShadows);\n  }\n  return filters;\n}\nfunction collectTextShadowsForProps(props, style) {\n  if (!props.shadows || props.shadows.length === 0)\n    return;\n  const textShadow = props.shadows.map((shadow) => {\n    return `${shadow.x}px ${shadow.y}px ${shadow.blur}px ${shadow.color}`;\n  }).join(\", \");\n  if (!textShadow)\n    return;\n  style.textShadow = textShadow;\n}\nfunction collectBoxShadowsForProps(props, style) {\n  if (!props.shadows || props.shadows.length === 0)\n    return;\n  const boxShadow = props.shadows.map((shadowItem) => BoxShadow.toCSS(shadowItem)).join(\", \");\n  if (!boxShadow)\n    return;\n  style.boxShadow = boxShadow;\n}\nfunction shadowForShape(boxShadows, rect, shapeId, fillAlpha, strokeAlpha, strokeWidth, strokeClipId, svgStrokeAttributes) {\n  const definition = [];\n  let outsetElement = null;\n  let insetElement = null;\n  const needsStrokeClip = false;\n  const shadows = [];\n  const insetShadows = [];\n  const boxShadowsCount = boxShadows.length;\n  const svgShadowClass = \"svg-shadow\";\n  const svgShadowProps = RenderTarget.current() === RenderTarget.canvas ? { className: svgShadowClass } : {};\n  for (let i = 0, il = boxShadowsCount; i < il; i++) {\n    const shadow = boxShadows[i];\n    shadow.inset ? insetShadows.push(shadow) : shadows.push(shadow);\n  }\n  if (shadows.length > 0) {\n    shadows.reverse();\n    const outsideShadowId = shapeId.add(\"_shadow_out\");\n    const normalizedFrame = Rect.atOrigin(rect);\n    const shadowRects = [normalizedFrame];\n    for (let i = 0, il = shadows.length; i < il; i++) {\n      const shadow = shadows[i];\n      const shadowFrame = localShadowFrame(shadow, normalizedFrame, true);\n      if (shadowFrame === null) {\n        continue;\n      }\n      shadowRects.push(shadowFrame);\n    }\n    let maxBlur = 0;\n    const filterElements = [];\n    const mergeElements = [];\n    for (let i = 0, il = shadows.length; i < il; i++) {\n      const shadow = shadows[i];\n      const shadowElements = outerShadowElements(shapeId, shadow, i);\n      maxBlur = Math.max(maxBlur, shadow.blur);\n      filterElements.push(shadowElements.filterElements);\n      mergeElements.push(shadowElements.mergeElement);\n    }\n    let expandStrokeWidth = strokeWidth;\n    if (!isFiniteNumber(expandStrokeWidth))\n      expandStrokeWidth = 0;\n    let miter = svgStrokeAttributes.strokeMiterlimit;\n    if (!isFiniteNumber(miter))\n      miter = 4;\n    let shadowRect = Rect.merge(...shadowRects);\n    shadowRect = Rect.inflate(shadowRect, (expandStrokeWidth * miter / 2 + maxBlur) * 1.1);\n    const width = rect.width + (strokeWidth ? strokeWidth / 2 : 0.1);\n    const height = rect.height + (strokeWidth ? strokeWidth / 2 : 0.1);\n    const filterX = shadowRect.x / width * 100;\n    const filterY = shadowRect.y / height * 100;\n    const filterWidth = shadowRect.width / width * 100;\n    const filterHeight = shadowRect.height / height * 100;\n    definition.push(/* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"filter\", {\n      key: outsideShadowId.id,\n      id: outsideShadowId.id,\n      x: `${filterX.toFixed(1)}%`,\n      y: `${filterY.toFixed(1)}%`,\n      width: `${filterWidth.toFixed(1)}%`,\n      height: `${filterHeight.toFixed(1)}%`,\n      filterUnits: \"objectBoundingBox\",\n      ...svgShadowProps\n    }, filterElements, shadows.length > 1 ? /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"feMerge\", null, mergeElements) : null));\n    outsetElement = /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\", {\n      filter: outsideShadowId.urlLink,\n      ...svgShadowProps\n    }, /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"use\", {\n      ...svgStrokeAttributes,\n      fill: \"black\",\n      fillOpacity: fillAlpha <= 0 ? 0 : 1,\n      stroke: \"black\",\n      strokeOpacity: strokeAlpha <= 0 ? 0 : 1,\n      strokeWidth: strokeAlpha > 0 ? strokeWidth : 0,\n      xlinkHref: shapeId.link,\n      clipPath: strokeClipId.urlLink\n    }));\n  }\n  if (insetShadows.length) {\n    insetShadows.reverse();\n    const insideShadowId = shapeId.add(\"_shadow_inside\");\n    const normalizedFrame = Rect.atOrigin(rect);\n    const shadowFrames = [normalizedFrame];\n    for (let i = 0, il = insetShadows.length; i < il; i++) {\n      const shadow = insetShadows[i];\n      const shadowFrame = localShadowFrame(shadow, normalizedFrame, true);\n      if (shadowFrame === null) {\n        continue;\n      }\n      shadowFrames.push(shadowFrame);\n    }\n    const shadowRect = Rect.merge(...shadowFrames);\n    const width = rect.width + (strokeWidth ? strokeWidth / 2 : 0.1);\n    const height = rect.height + (strokeWidth ? strokeWidth / 2 : 0.1);\n    const filterX = shadowRect.x / width * 100;\n    const filterY = shadowRect.y / height * 100;\n    const filterWidth = shadowRect.width / width * 100;\n    const filterHeight = shadowRect.height / height * 100;\n    const filterElements = [];\n    const mergeElements = [];\n    for (let i = 0, il = insetShadows.length; i < il; i++) {\n      const shadow = insetShadows[i];\n      const shadowElements = innerShadowElements(shapeId, shadow, i);\n      filterElements.push(shadowElements.filterElements);\n      mergeElements.push(shadowElements.mergeElement);\n    }\n    definition.push(/* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"filter\", {\n      key: insideShadowId.id,\n      id: insideShadowId.id,\n      x: `${filterX.toFixed(1)}%`,\n      y: `${filterY.toFixed(1)}%`,\n      width: `${filterWidth.toFixed(1)}%`,\n      height: `${filterHeight.toFixed(1)}%`,\n      filterUnits: \"objectBoundingBox\",\n      ...svgShadowProps\n    }, filterElements, insetShadows.length > 1 ? /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"feMerge\", null, mergeElements) : null));\n    let clipPath;\n    if (needsStrokeClip) {\n      clipPath = strokeClipId.urlLink;\n    }\n    insetElement = /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"use\", {\n      fill: \"black\",\n      fillOpacity: \"1\",\n      filter: insideShadowId.urlLink,\n      xlinkHref: shapeId.link,\n      clipPath,\n      ...svgShadowProps\n    });\n  }\n  return { definition, outsetElement, insetElement, needsStrokeClip };\n}\nfunction outerShadowElements(shapeID, shadow, index) {\n  const shadowKey = shapeID.add(\"_outer_shadow\" + index);\n  const offsetResultId = shadowKey.add(\"offset\").id;\n  const blurResultId = shadowKey.add(\"blur\").id;\n  const matrixResultId = shadowKey.add(\"matrix\").id;\n  const filterElements = /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(OuterShadowFilterElements, {\n    key: shadowKey.id + \"-filters\",\n    shadow,\n    blurId: blurResultId,\n    offsetId: offsetResultId,\n    matrixId: matrixResultId\n  });\n  const mergeElement = /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"feMergeNode\", {\n    key: shadowKey.id + \"-merge\",\n    in: matrixResultId\n  });\n  return { filterElements, mergeElement };\n}\nvar OuterShadowFilterElements = (props) => {\n  const lookup = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(CustomPropertiesContext);\n  const { shadow, blurId, offsetId, matrixId } = props;\n  let color2 = shadow.color;\n  const result = lookup(color2);\n  if (result) {\n    color2 = result;\n  }\n  const rgb = ConvertColor.toRgb(color2);\n  const r = roundedNumberString(rgb.r / 255, 3);\n  const g = roundedNumberString(rgb.g / 255, 3);\n  const b2 = roundedNumberString(rgb.b / 255, 3);\n  const matrixValues = `0 0 0 0 ${r}   0 0 0 0 ${g}   0 0 0 0 ${b2}  0 0 0 ${rgb.a} 0`;\n  return /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"feOffset\", {\n    dx: shadow.x,\n    dy: shadow.y,\n    in: \"SourceAlpha\",\n    result: offsetId\n  }), /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"feGaussianBlur\", {\n    stdDeviation: shadow.blur / 2,\n    in: offsetId,\n    result: blurId\n  }), /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"feColorMatrix\", {\n    colorInterpolationFilters: \"sRGB\",\n    values: matrixValues,\n    type: \"matrix\",\n    in: blurId,\n    result: matrixId\n  }));\n};\nfunction innerShadowElements(shapeID, shadow, index) {\n  const shadowKey = shapeID.add(\"_inside_shadow\" + index);\n  const blurId = shadowKey.add(\"blur\").id;\n  const offsetId = shadowKey.add(\"offset\").id;\n  const compositeId = shadowKey.add(\"composite\").id;\n  const matrixId = shadowKey.add(\"matrix\").id;\n  const filterElements = /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(InnerShadowFilterElements, {\n    key: shadowKey.id + \"-filters\",\n    shadow,\n    blurId,\n    offsetId,\n    compositeId,\n    matrixId\n  });\n  const mergeElement = /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"feMergeNode\", {\n    key: shadowKey.id + \"-merge\",\n    in: matrixId\n  });\n  return { filterElements, mergeElement };\n}\nvar InnerShadowFilterElements = (props) => {\n  const lookup = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(CustomPropertiesContext);\n  const { shadow, blurId, offsetId, compositeId, matrixId } = props;\n  let color2 = shadow.color;\n  const result = lookup(color2);\n  if (result) {\n    color2 = result;\n  }\n  const rgb = ConvertColor.toRgb(color2);\n  const r = rgb.r / 255;\n  const g = rgb.g / 255;\n  const b2 = rgb.b / 255;\n  const matrixValues = `0 0 0 0 ${r}   0 0 0 0 ${g}   0 0 0 0 ${b2}  0 0 0 ${rgb.a} 0`;\n  return /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"feGaussianBlur\", {\n    stdDeviation: shadow.blur / 2,\n    in: \"SourceAlpha\",\n    result: blurId\n  }), /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"feOffset\", {\n    dx: shadow.x,\n    dy: shadow.y,\n    in: blurId,\n    result: offsetId\n  }), /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"feComposite\", {\n    in: offsetId,\n    in2: \"SourceAlpha\",\n    operator: \"arithmetic\",\n    k2: \"-1\",\n    k3: \"1\",\n    result: compositeId\n  }), /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"feColorMatrix\", {\n    colorInterpolationFilters: \"sRGB\",\n    values: matrixValues,\n    type: \"matrix\",\n    in: compositeId,\n    result: matrixId\n  }));\n};\nfunction localShadowFrame(shadow, frame2, isSVG2) {\n  let growth = shadow.blur;\n  if (BoxShadow.is(shadow)) {\n    if (isSVG2 !== true) {\n      if (shadow.inset)\n        return null;\n      growth += shadow.spread;\n    }\n  }\n  let minX;\n  let maxX;\n  let minY;\n  let maxY;\n  if (isSVG2 === true) {\n    minX = -Math.abs(shadow.x) - growth;\n    maxX = Math.abs(shadow.x) + frame2.width + growth;\n    minY = -Math.abs(shadow.y) - growth;\n    maxY = Math.abs(shadow.y) + frame2.height + growth;\n  } else {\n    minX = shadow.x - growth;\n    maxX = shadow.x + frame2.width + growth;\n    minY = shadow.y - growth;\n    maxY = shadow.y + frame2.height + growth;\n  }\n  if (maxX <= minX || maxY <= minY)\n    return null;\n  return { x: minX, y: minY, width: maxX - minX, height: maxY - minY };\n}\n\n// src/render/utils/filtersForNode.ts\nfunction collectLayerFilters(props, style) {\n  const filters = [];\n  if (isFiniteNumber(props.brightness)) {\n    filters.push(`brightness(${props.brightness / 100})`);\n  }\n  if (isFiniteNumber(props.contrast)) {\n    filters.push(`contrast(${props.contrast / 100})`);\n  }\n  if (isFiniteNumber(props.grayscale)) {\n    filters.push(`grayscale(${props.grayscale / 100})`);\n  }\n  if (isFiniteNumber(props.hueRotate)) {\n    filters.push(`hue-rotate(${props.hueRotate}deg)`);\n  }\n  if (isFiniteNumber(props.invert)) {\n    filters.push(`invert(${props.invert / 100})`);\n  }\n  if (isFiniteNumber(props.saturate)) {\n    filters.push(`saturate(${props.saturate / 100})`);\n  }\n  if (isFiniteNumber(props.sepia)) {\n    filters.push(`sepia(${props.sepia / 100})`);\n  }\n  if (isFiniteNumber(props.blur)) {\n    filters.push(`blur(${props.blur}px)`);\n  }\n  if (props.dropShadows) {\n    filters.push(...shadowsAsFilter(props.dropShadows));\n  }\n  if (filters.length === 0)\n    return;\n  style.filter = style.WebkitFilter = filters.join(\" \");\n}\nfunction collectBackgroundFilters(props, style) {\n  if (isFiniteNumber(props.backgroundBlur)) {\n    style.backdropFilter = style.WebkitBackdropFilter = `blur(${props.backgroundBlur}px)`;\n  }\n}\nfunction collectFiltersFromProps(props, style) {\n  collectBackgroundFilters(props, style);\n  collectLayerFilters(props, style);\n}\n\n// src/render/traits/TextColor.ts\nfunction collectTextColorFromProps(props, style) {\n  const { color: color2 } = props;\n  if (typeof color2 === \"string\") {\n    style.color = color2;\n  } else if (Color.isColorObject(color2)) {\n    style.color = color2.initialValue || Color.toRgbString(color2);\n  }\n}\n\n// src/render/style/collectVisualStyleFromProps.ts\nfunction collectVisualStyleFromProps(props, style, isTextNode = false) {\n  collectBackgroundFromProps(props, style);\n  collectRadiusFromProps(props, style);\n  collectFiltersFromProps(props, style);\n  collectBlendingFromProps(props, style);\n  collectOverflowFromProps(props, style);\n  collectOpacityFromProps(props, style);\n  collectTextColorFromProps(props, style);\n  if (isTextNode) {\n    collectTextShadowsForProps(props, style);\n  } else {\n    collectBoxShadowsForProps(props, style);\n  }\n}\n\n// src/render/traits/Transform.ts\nvar { getNumber } = Animatable;\nvar transformDefaults = {\n  z: 0,\n  rotation: 0,\n  rotationX: 0,\n  rotationY: 0,\n  rotationZ: 0,\n  scale: 1,\n  scaleX: 1,\n  scaleY: 1,\n  scaleZ: 1,\n  skew: 0,\n  skewX: 0,\n  skewY: 0,\n  originX: 0.5,\n  originY: 0.5,\n  originZ: 0\n};\nfunction getRotation(rotation, rotate) {\n  if (typeof rotate === \"string\") {\n    rotate = parseFloat(rotate);\n  }\n  return isFiniteNumber(rotate) ? rotate : getNumber(rotation);\n}\nfunction collectTransformFromProps(props, rect, style) {\n  const motionStyle = style;\n  const x = typeof rect.x === \"number\" ? `${rect.x}px` : rect.x;\n  const y = typeof rect.y === \"number\" ? `${rect.y}px` : rect.y;\n  const z = getNumber(props.z);\n  const scaleZ = getNumber(props.scaleZ);\n  const originZ = getNumber(props.originZ);\n  const rotationZ = getRotation(props.rotationZ, resolveMotionValue(motionStyle.rotateZ));\n  const rotationX = getRotation(props.rotationX, resolveMotionValue(motionStyle.rotateX));\n  const rotationY = getRotation(props.rotationY, resolveMotionValue(motionStyle.rotateY));\n  const scale2 = getNumber(props.scale);\n  const scaleX = getNumber(props.scaleX);\n  const scaleY = getNumber(props.scaleY);\n  const skew = getNumber(props.skew);\n  const skewX = getNumber(props.skewX);\n  const skewY = getNumber(props.skewY);\n  const rotation = getRotation(props.rotation, resolveMotionValue(motionStyle.rotate));\n  const force3d = RenderEnvironment.target === RenderTarget.export;\n  if (force3d || z !== 0 || scaleZ !== 1 || originZ !== 0 || rotationZ !== 0 || rotationX !== 0 || rotationY !== 0) {\n    style.transform = `\n            ${`translate3d(${x}, ${y}, ${z}px)`}\n            scale3d(${scaleX * scale2}, ${scaleY * scale2}, ${scaleZ})\n            skew(${skew}deg,${skew}deg)\n            skewX(${skewX}deg)\n            skewY(${skewY}deg)\n            translateZ(${originZ}px)\n            rotateX(${rotationX}deg)\n            rotateY(${rotationY}deg)\n            rotateZ(${(rotation + rotationZ).toFixed(4)}deg)\n            translateZ(${-originZ}px)`;\n  } else {\n    style.transform = `\n            ${`translate(${x}, ${y})`}\n            scale(${scaleX * scale2}, ${scaleY * scale2})\n            skew(${skew}deg,${skew}deg)\n            skewX(${skewX}deg)\n            skewY(${skewY}deg)\n            rotate(${rotation.toFixed(4)}deg)`;\n  }\n  const transformOrigin = `${getNumber(props.originX) * 100}% ${getNumber(props.originY) * 100}%`;\n  style.transformOrigin = transformOrigin;\n  style.WebkitTransformOrigin = transformOrigin;\n}\n\n// src/render/presentation/Frame/DeprecatedFrame.tsx\nfunction cssBackgroundSize(size2) {\n  switch (size2) {\n    case \"fit\":\n      return \"contain\";\n    case \"stretch\":\n      return \"100% 100%\";\n    default:\n      return \"cover\";\n  }\n}\nfunction collectBackgroundImageFromProps(props, style) {\n  const image = backgroundImageFromProps(props);\n  if (image) {\n    style.backgroundImage = `url(\"${image.src}\")`;\n    style.backgroundSize = cssBackgroundSize(image.fit);\n    style.backgroundRepeat = \"no-repeat\";\n    style.backgroundPosition = \"center\";\n  }\n}\nfunction toPixelString(value) {\n  return isFiniteNumber(value) ? `${value}px` : value;\n}\nfunction applyLayoutProp(style, props, key6) {\n  if (props[key6] !== void 0) {\n    const value = Animatable.get(props[key6], void 0);\n    style[key6] = toPixelString(value);\n  }\n}\nvar _DeprecatedFrame = class extends Layer {\n  constructor() {\n    super(...arguments);\n    this.element = null;\n    this.imageDidChange = false;\n    this.state = {\n      size: null\n    };\n    this.updateStyle = () => {\n      if (!this.element) {\n        return;\n      }\n      Object.assign(this.element.style, this.getStyle());\n    };\n    this.setElement = (element) => {\n      this.element = element;\n    };\n    this.onPropsChange = (props) => {\n      const rect = _DeprecatedFrame.rect(Animatable.objectToValues(props.value));\n      if (this.state.size && isAnimatable2(this.state.size.width) && isAnimatable2(props.value.width)) {\n        this.state.size.width.set(rect.width);\n      }\n      if (this.state.size && isAnimatable2(this.state.size.height) && isAnimatable2(props.value.height)) {\n        this.state.size.height.set(rect.height);\n      }\n      this.updateStyle();\n    };\n    this.onSizeChange = () => {\n      this.updateStyle();\n    };\n  }\n  static rect(props) {\n    const constraintValues = ConstraintValues.fromProperties(props);\n    return ConstraintValues.toRect(constraintValues, props.parentSize || null, null, true);\n  }\n  get rect() {\n    return _DeprecatedFrame.rect(this.props);\n  }\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const size2 = _DeprecatedFrame.updatedSize(nextProps, prevState);\n    const { target } = RenderEnvironment;\n    const nextBackgroundImageSrc = nextProps.background && BackgroundImage.isImageObject(nextProps.background) ? nextProps.background.src : null;\n    if (nextBackgroundImageSrc) {\n      return {\n        size: size2\n      };\n    }\n    if (prevState.size) {\n      if (target === RenderTarget.preview) {\n        return null;\n      }\n      if (prevState.size.width === size2.width && prevState.size.height === size2.height) {\n        return null;\n      }\n    }\n    return {\n      size: size2\n    };\n  }\n  static updatedSize(props, state) {\n    const rect = _DeprecatedFrame.rect(props);\n    let size2 = state.size;\n    const newSize = { width: rect.width, height: rect.height };\n    const { target } = RenderEnvironment;\n    if (!size2) {\n      if (target === RenderTarget.preview) {\n        size2 = ObservableObject(newSize, true);\n      } else {\n        size2 = newSize;\n      }\n    } else {\n      if (isAnimatable2(size2.width) && isAnimatable2(size2.height)) {\n        size2.width.set(newSize.width);\n        size2.height.set(newSize.height);\n      } else {\n        size2 = newSize;\n      }\n    }\n    return size2;\n  }\n  getStyle() {\n    const rect = this.rect;\n    const style = {\n      display: \"block\",\n      position: \"absolute\",\n      width: `${rect.width}px`,\n      height: `${rect.height}px`,\n      pointerEvents: void 0,\n      userSelect: \"none\"\n    };\n    let left = Animatable.get(this.props.left, void 0);\n    let top = Animatable.get(this.props.top, void 0);\n    Object.assign(style, this.props._initialStyle);\n    const hasParentSize = this.context.size !== ParentSizeState.Disabled;\n    const perspective = Animatable.get(this.props.perspective, void 0);\n    style.perspective = perspective;\n    style.WebkitPerspective = perspective;\n    let backfaceVisibility = void 0;\n    const backfaceVisible = Animatable.get(this.props.backfaceVisible, void 0);\n    if (backfaceVisible === true) {\n      backfaceVisibility = \"visible\";\n    } else if (backfaceVisible === false) {\n      backfaceVisibility = \"hidden\";\n    }\n    style.backfaceVisibility = backfaceVisibility;\n    style.WebkitBackfaceVisibility = backfaceVisibility;\n    const preserve3d = Animatable.get(this.props.preserve3d, void 0);\n    if (preserve3d === true) {\n      style.transformStyle = \"preserve-3d\";\n    } else if (preserve3d === false) {\n      style.transformStyle = \"flat\";\n    }\n    if (!hasParentSize) {\n      applyLayoutProp(style, this.props, \"right\");\n      applyLayoutProp(style, this.props, \"bottom\");\n      const width = Animatable.get(this.props.width, void 0);\n      const stringWidth = toPixelString(width);\n      const height = Animatable.get(this.props.height, void 0);\n      const stringHeight = toPixelString(height);\n      if (typeof left === \"string\" && left.endsWith(\"%\") && this.props.right === null) {\n        left = `calc(${left} - calc(${stringWidth}} / 2))`;\n        style.width = stringWidth;\n      }\n      if (typeof top === \"string\" && top.endsWith(\"%\") && this.props.bottom === null) {\n        top = `calc(${top} - calc(${stringHeight} / 2))`;\n        style.height = stringHeight;\n      }\n      if (top !== void 0 && style.bottom !== void 0) {\n        style.height = void 0;\n        top = toPixelString(Animatable.get(this.props.top, void 0));\n      } else {\n        style.height = stringHeight;\n      }\n      if (left !== void 0 && style.right !== void 0) {\n        style.width = void 0;\n        left = toPixelString(Animatable.get(this.props.left, void 0));\n      } else {\n        style.width = stringWidth;\n      }\n    }\n    const transformRect = { ...rect };\n    if (typeof left !== \"undefined\") {\n      transformRect.x = left;\n    }\n    if (typeof top !== \"undefined\") {\n      transformRect.y = top;\n    }\n    collectTransformFromProps(this.props, transformRect, style);\n    collectVisualStyleFromProps(this.props, style);\n    collectBackgroundImageFromProps(this.props, style);\n    Layer.applyWillChange(this.props, style, false);\n    if (this.props.style) {\n      Object.assign(style, this.props.style);\n    }\n    return style;\n  }\n  componentDidMount() {\n    const { target } = RenderEnvironment;\n    if (target === RenderTarget.preview) {\n      this.propsObserver = ObservableObject(this.props, true);\n      this.propsObserverCancel = ObservableObject.addObserver(this.propsObserver, this.onPropsChange);\n      if (this.props.parentSize && isAnimatable2(this.props.parentSize.width) && isAnimatable2(this.props.parentSize.height)) {\n        this.sizeObserver = ObservableObject(this.props.parentSize, true);\n        this.sizeObserverCancel = ObservableObject.addObserver(this.sizeObserver, this.onSizeChange);\n      }\n    }\n  }\n  componentDidUpdate() {\n    const { target } = RenderEnvironment;\n    this.propsObserverCancel && this.propsObserverCancel();\n    this.sizeObserverCancel && this.sizeObserverCancel();\n    if (target === RenderTarget.preview) {\n      this.propsObserver = ObservableObject(this.props, true);\n      this.propsObserverCancel = ObservableObject.addObserver(this.propsObserver, this.onPropsChange);\n      if (this.props.parentSize && isAnimatable2(this.props.parentSize.width) && isAnimatable2(this.props.parentSize.height)) {\n        this.sizeObserver = ObservableObject(this.props.parentSize, true);\n        this.sizeObserverCancel = ObservableObject.addObserver(this.sizeObserver, this.onSizeChange);\n      }\n    }\n  }\n  componentWillUnmount() {\n    this.propsObserverCancel && this.propsObserverCancel();\n    this.propsObserverCancel = void 0;\n    this.sizeObserverCancel && this.sizeObserverCancel();\n    this.sizeObserverCancel = void 0;\n  }\n  render() {\n    if (safeWindow[\"perf\"])\n      safeWindow[\"perf\"].nodeRender();\n    const { visible, id, className } = this.props;\n    if (!visible) {\n      return null;\n    }\n    const style = this.getStyle();\n    const rect = this.rect;\n    const parentSize = { width: rect.width, height: rect.height };\n    return /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"div\", {\n      id,\n      style,\n      ref: this.setElement,\n      className\n    }, /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(ProvideParentSize, {\n      parentSize\n    }, this.layoutChildren()), /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Border, {\n      ...this.props\n    }));\n  }\n  layoutChildren() {\n    let _forwardedOverrides = this.props._forwardedOverrides;\n    const extractions = this.props._overrideForwardingDescription;\n    if (extractions) {\n      let added = false;\n      _forwardedOverrides = {};\n      for (const key6 in extractions) {\n        added = true;\n        _forwardedOverrides[key6] = this.props[extractions[key6]];\n      }\n      if (!added) {\n        _forwardedOverrides = void 0;\n      }\n    }\n    let children = react__WEBPACK_IMPORTED_MODULE_0__.Children.map(this.props.children, (child) => {\n      if (isConstraintSupportingChild(child)) {\n        return (0,react__WEBPACK_IMPORTED_MODULE_0__.cloneElement)(child, {\n          parentSize: this.state.size,\n          _forwardedOverrides\n        });\n      } else if (_forwardedOverrides && child) {\n        return (0,react__WEBPACK_IMPORTED_MODULE_0__.cloneElement)(child, { _forwardedOverrides });\n      } else {\n        return child;\n      }\n    });\n    if (children && children.length === 1 && typeof children[0] === \"string\") {\n      children = [/* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Center, {\n        key: \"0\"\n      }, children)];\n    }\n    return children;\n  }\n};\nvar DeprecatedFrame = _DeprecatedFrame;\nDeprecatedFrame.supportsConstraints = true;\nDeprecatedFrame.defaultFrameSpecificProps = {\n  ...constraintDefaults,\n  ...transformDefaults,\n  opacity: 1,\n  background: Color(\"rgba(0, 170, 255, 0.3)\"),\n  visible: true,\n  borderWidth: 0,\n  borderColor: \"#222\",\n  borderStyle: \"solid\"\n};\nDeprecatedFrame.defaultProps = {\n  ...Layer.defaultProps,\n  ..._DeprecatedFrame.defaultFrameSpecificProps\n};\nDeprecatedFrame.contextType = ConstraintsContext;\nvar Center = (props) => {\n  const style = Object.assign({}, {\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    fontFamily: \"Helvetica\"\n  }, props.style || {});\n  return /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"div\", {\n    style\n  }, props.children);\n};\n\n// src/render/presentation/Frame/isDeprecatedFrameProps.ts\nvar frameWithMotionPropsFields = [\n  \"_border\",\n  \"_constraints\",\n  \"animate\",\n  \"initial\",\n  \"variants\",\n  \"transition\",\n  \"inherit\",\n  \"center\",\n  \"initial\",\n  \"transformTemplate\",\n  \"transformValues\",\n  \"animate\",\n  \"variants\",\n  \"transition\",\n  \"onUpdate\",\n  \"onAnimationComplete\",\n  \"onPanSessionStart\",\n  \"onTapCancel\",\n  \"whileTap\",\n  \"whileHover\",\n  \"onHoverStart\",\n  \"onHoverEnd\",\n  \"drag\",\n  \"dragDirectionLock\",\n  \"dragPropagation\",\n  \"dragConstraints\",\n  \"dragElastic\",\n  \"dragMomentum\",\n  \"dragTransition\",\n  \"onDragStart\",\n  \"onDragEnd\",\n  \"onDrag\",\n  \"onDirectionLock\",\n  \"onDragTransitionEnd\",\n  \"x\",\n  \"y\",\n  \"rotate\",\n  \"rotateX\",\n  \"rotateY\",\n  \"rotateZ\",\n  \"position\",\n  \"border\",\n  \"borderRadius\",\n  \"shadow\",\n  \"size\"\n];\nvar deprecatedFramePropsFields = [\n  \"autoSize\",\n  \"aspectRatio\",\n  \"borderWidth\",\n  \"borderStyle\",\n  \"borderColor\",\n  \"centerX\",\n  \"centerY\"\n];\nfunction isDeprecatedFrameProps(props) {\n  let field;\n  for (const propKey in props) {\n    if (isAnimatable2(props[propKey]))\n      return true;\n  }\n  for (field of frameWithMotionPropsFields) {\n    if (props.hasOwnProperty(field))\n      return false;\n  }\n  for (field of deprecatedFramePropsFields) {\n    if (props.hasOwnProperty(field))\n      return true;\n  }\n  return false;\n}\n\n// src/render/presentation/Frame/index.tsx\nvar DeprecatedFrameWithEvents = WithEvents(DeprecatedFrame);\nvar Frame = (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(function Frame2(props, ref) {\n  const parentSize = useParentSize();\n  if (isDeprecatedFrameProps(props)) {\n    const currentParentSize = props.parentSize || deprecatedParentSize(parentSize);\n    return /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(DeprecatedFrameWithEvents, {\n      ...props,\n      parentSize: currentParentSize\n    });\n  }\n  return /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(FrameWithMotion, {\n    ...props,\n    ref\n  });\n});\n\n// src/components/EmptyState.tsx\nfunction EmptyState({\n  title = \"\",\n  description = \"Click and drag the connector to any frame on the canvas \\u2192\",\n  children,\n  size: size2,\n  hide,\n  insideUserCodeComponent = false\n}) {\n  const { target } = RenderEnvironment;\n  const childCount = react__WEBPACK_IMPORTED_MODULE_0__.Children.count(children);\n  if (insideUserCodeComponent && childCount === 0) {\n    return /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(FrameWithMotion, {\n      ...size2,\n      \"data-name\": \"placeholder\"\n    });\n  }\n  if (target !== RenderTarget.canvas)\n    return null;\n  if (hide)\n    return null;\n  if (childCount !== 0)\n    return null;\n  return /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(FrameWithMotion, {\n    key: \"empty-state\",\n    className: \"framerInternalUI-canvasPlaceholder\",\n    top: 0,\n    left: 0,\n    bottom: 0,\n    right: 0,\n    style: { position: \"absolute\" }\n  }, /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"div\", {\n    style: {\n      display: \"flex\",\n      alignItems: \"center\",\n      lineHeight: \"1.4\",\n      height: \"100%\",\n      width: \"100%\"\n    }\n  }, /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"div\", {\n    style: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      flexDirection: \"column\",\n      width: \"100%\",\n      WebkitMaskImage: `linear-gradient(90deg, black, black calc(100% - 12px * ${scaleFactor}), transparent)`\n    }\n  }, /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Title, null, title), /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Description, null, description))));\n}\nvar scaleFactor = \"var(--framerInternalCanvas-canvasPlaceholderContentScaleFactor, 1)\";\nvar Title = ({ children }) => {\n  return /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"span\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      textAlign: \"center\",\n      flexGrow: 1,\n      flexShrink: 0,\n      fontWeight: 600,\n      marginBottom: \"5px\"\n    }\n  }, children);\n};\nvar Description = ({ children }) => {\n  return /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"span\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      textAlign: \"center\",\n      flexGrow: 1,\n      flexShrink: 0,\n      fontWeight: 400,\n      maxWidth: \"200px\"\n    }\n  }, children);\n};\n\n// src/components/Scroll/useWheelScroll.ts\n\n\n// src/render/utils/debounce.ts\nfunction debounce(fn, time3) {\n  let timeout;\n  const debounced = (...args) => {\n    safeWindow.clearTimeout(timeout);\n    timeout = safeWindow.setTimeout(fn, time3, ...args);\n  };\n  const cancel = () => {\n    safeWindow.clearTimeout(timeout);\n  };\n  debounced.cancel = cancel;\n  return debounced;\n}\n\n// src/components/Scroll/useWheelScroll.ts\nfunction useWheelScroll(ref, {\n  enabled,\n  initial,\n  prev,\n  direction,\n  constraints,\n  offsetX,\n  offsetY,\n  onScrollStart,\n  onScroll,\n  onScrollEnd\n}) {\n  const isWheelScrollActive = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(false);\n  const getPointData = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {\n    const point = getPoint(offsetX, offsetY);\n    const data = {\n      point,\n      velocity: { x: offsetX.getVelocity(), y: offsetY.getVelocity() },\n      offset: { x: point.x - initial.x, y: point.y - initial.y },\n      delta: { x: point.x - prev.x, y: point.y - prev.y }\n    };\n    prev.x = point.x;\n    prev.y = point.y;\n    return data;\n  }, []);\n  let handler;\n  if (enabled) {\n    let clampX = function(v) {\n      return constraints.current === null ? v : clamp3(v, constraints.current.left, constraints.current.right);\n    }, clampY = function(v) {\n      return constraints.current === null ? v : clamp3(v, constraints.current.top, constraints.current.bottom);\n    }, updateX = function(delta2) {\n      offsetX.stop();\n      offsetX.set(clampX(offsetX.get() - delta2));\n    }, updateY = function(delta2) {\n      offsetY.stop();\n      offsetY.set(clampY(offsetY.get() - delta2));\n    };\n    const debouncedOnScrollEnd = debounce(() => {\n      onScrollEnd && onScrollEnd(getPointData());\n      isWheelScrollActive.current = false;\n    }, 200);\n    handler = (e) => {\n      e.preventDefault();\n      if (!isWheelScrollActive.current) {\n        const x = offsetX.get();\n        const y = offsetY.get();\n        initial.x = x;\n        initial.y = y;\n        prev.x = x;\n        prev.y = y;\n        onScrollStart && onScrollStart(getPointData());\n        isWheelScrollActive.current = true;\n      }\n      switch (direction) {\n        case \"horizontal\":\n          updateX(e.deltaX);\n          break;\n        case \"vertical\":\n          updateY(e.deltaY);\n          break;\n        default:\n          updateX(e.deltaX);\n          updateY(e.deltaY);\n      }\n      onScroll && onScroll(getPointData());\n      debouncedOnScrollEnd();\n    };\n  }\n  useDomEvent(ref, \"wheel\", handler, { passive: false });\n}\nfunction getPoint(x, y) {\n  return { x: x.get(), y: y.get() };\n}\n\n// src/components/Scroll/EmulatedScroll.tsx\nvar directionMap = {\n  horizontal: \"x\",\n  vertical: \"y\",\n  both: true\n};\nfunction convertScrollDirectionToDrag(scrollDirection) {\n  return scrollDirection ? directionMap[scrollDirection] : scrollDirection;\n}\nvar useUpdateChildSize = ({\n  dragDirection,\n  children,\n  fromCanvasComponent\n}) => {\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n    return react__WEBPACK_IMPORTED_MODULE_0__.Children.map(children, (child) => {\n      if (child === null || typeof child !== \"object\" || typeof child.type === \"string\") {\n        return child;\n      }\n      const updatedSize = {};\n      switch (dragDirection) {\n        case \"vertical\":\n          updatedSize.width = \"100%\";\n          break;\n        case \"horizontal\":\n          updatedSize.height = \"100%\";\n          break;\n        default:\n          return child;\n      }\n      const update = fromCanvasComponent ? { style: Object.assign({}, child.props.style, updatedSize) } : updatedSize;\n      return (0,react__WEBPACK_IMPORTED_MODULE_0__.cloneElement)(child, update);\n    });\n  }, [dragDirection, children]);\n};\nvar numberFromOptionalMotionValue = (value) => {\n  return typeof value === \"number\" ? value : value.get();\n};\nvar EmulatedScroll = (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(function EmulatedScroll2(props, forwardedRef) {\n  const {\n    direction = \"vertical\",\n    directionLock = false,\n    dragEnabled = true,\n    dragElastic,\n    dragMomentum,\n    dragTransition,\n    wheelEnabled = true,\n    contentOffsetX = 0,\n    contentOffsetY = 0,\n    contentWidth,\n    contentHeight,\n    onScrollStart,\n    onScroll,\n    onScrollEnd,\n    onDragStart,\n    onDrag,\n    onDragEnd,\n    onUpdate,\n    onDirectionLock,\n    style,\n    children,\n    scrollAnimate,\n    resetOffset,\n    overdragEnabled = true,\n    layoutId: specificLayoutId,\n    native,\n    ...containerProps\n  } = props;\n  const layoutId = useLayoutId2(props, { specificLayoutId, postfix: \"scroll\" });\n  const defaultX = useMotionValue(typeof contentOffsetX === \"number\" ? contentOffsetX : 0);\n  const defaultY = useMotionValue(typeof contentOffsetY === \"number\" ? contentOffsetY : 0);\n  const x = isMotionValue2(contentOffsetX) ? contentOffsetX : defaultX;\n  const y = isMotionValue2(contentOffsetY) ? contentOffsetY : defaultY;\n  const measuredConstraints = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n  const dragControls = useDragControls();\n  const isInTarget = useIsInCurrentNavigationTarget();\n  const wasInTargetRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(true);\n  injectComponentCSSRules();\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    dragControls.updateConstraints();\n  });\n  function setMeasureDragConstraints(constraints) {\n    constraints = offsetToZero(constraints);\n    if (contentWidth !== void 0)\n      constraints.left = -contentWidth;\n    if (contentHeight !== void 0)\n      constraints.top = -contentHeight;\n    return measuredConstraints.current = constraints;\n  }\n  const { initial, prev } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)({\n    initial: { x: 0, y: 0 },\n    prev: { x: 0, y: 0 }\n  }).current;\n  const isPreview = RenderTarget.current() === RenderTarget.preview;\n  const containerFallbackRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n  const containerRef = forwardedRef || containerFallbackRef;\n  const contentRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n  const lastOffsetRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n  function shouldResetScroll(inTarget) {\n    const hasEnteredTarget = inTarget && wasInTargetRef.current === false;\n    return resetOffset && hasEnteredTarget;\n  }\n  function measureAndUpdateScrollOffset() {\n    if (!contentRef.current || !containerRef.current)\n      return;\n    const mustReset = shouldResetScroll(isInTarget);\n    wasInTargetRef.current = isInTarget;\n    const previous = lastOffsetRef.current;\n    if (previous === null && contentOffsetX === void 0 && contentOffsetY === void 0)\n      return;\n    const shouldUpdateOffset = previous === null || !isMotionValue2(contentOffsetX) && contentOffsetX !== previous.offsetX || !isMotionValue2(contentOffsetY) && contentOffsetY !== previous.offsetY;\n    const currentMaxXOffset = contentRef.current.offsetWidth - containerRef.current.offsetWidth;\n    const currentMaxYOffset = contentRef.current.offsetHeight - containerRef.current.offsetHeight;\n    const hasSizeChanged = currentMaxXOffset !== (previous == null ? void 0 : previous.maxXOffset) || currentMaxYOffset !== (previous == null ? void 0 : previous.maxYOffset);\n    const hasScrollOffsetChanged = (previous == null ? void 0 : previous.x) !== x.get() || (previous == null ? void 0 : previous.y) !== y.get();\n    const shouldStayPinned = hasSizeChanged && !hasScrollOffsetChanged;\n    if (mustReset || shouldUpdateOffset || shouldStayPinned) {\n      const currentOffsetX = direction !== \"vertical\" ? numberFromOptionalMotionValue(contentOffsetX) : 0;\n      const currentOffsetY = direction !== \"horizontal\" ? numberFromOptionalMotionValue(contentOffsetY) : 0;\n      const nextXOffset = -Math.min(currentOffsetX, currentMaxXOffset);\n      const nextYOffset = -Math.min(currentOffsetY, currentMaxYOffset);\n      x.set(nextXOffset);\n      y.set(nextYOffset);\n      lastOffsetRef.current = {\n        maxXOffset: currentMaxXOffset,\n        maxYOffset: currentMaxYOffset,\n        offsetX: currentOffsetX,\n        offsetY: currentOffsetY,\n        x: nextXOffset,\n        y: nextYOffset\n      };\n    }\n  }\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect)(() => {\n    if (RenderTarget.current() !== RenderTarget.canvas)\n      return;\n    measureAndUpdateScrollOffset();\n  });\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect)(() => {\n    if (RenderTarget.current() === RenderTarget.canvas)\n      return;\n    measureAndUpdateScrollOffset();\n  }, []);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (shouldResetScroll(isInTarget))\n      measureAndUpdateScrollOffset();\n    if (isInTarget === false)\n      wasInTargetRef.current = false;\n  }, [isInTarget]);\n  const getLatestPoint = () => ({ x: x.get(), y: y.get() });\n  const resetInitialPoint = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {\n    const point = getLatestPoint();\n    initial.x = point.x;\n    initial.y = point.y;\n    prev.x = point.x;\n    prev.y = point.y;\n  }, []);\n  const getPointData = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {\n    const point = getLatestPoint();\n    const data = {\n      point,\n      velocity: { x: x.getVelocity(), y: y.getVelocity() },\n      offset: { x: point.x - initial.x, y: point.y - initial.y },\n      delta: { x: point.x - prev.x, y: point.y - prev.y }\n    };\n    prev.x = point.x;\n    prev.y = point.y;\n    return data;\n  }, [x, y]);\n  const updateScrollListeners = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {\n    onUpdate && onUpdate({ x: x.get(), y: y.get() });\n    onScroll && onScroll(getPointData());\n  }, [onScroll, onUpdate, getPointData, x, y]);\n  const scheduleUpdateScrollListeners = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {\n    es_default.update(updateScrollListeners, false, true);\n  }, [updateScrollListeners]);\n  const onMotionDragStart = (event, info) => {\n    resetInitialPoint();\n    onDragStart && onDragStart(event, info);\n    onScrollStart && onScrollStart(info);\n  };\n  const onMotionDragTransitionEnd = () => onScrollEnd && onScrollEnd(getPointData());\n  const onWheelScrollStart = (info) => {\n    dragControls.updateConstraints();\n    onScrollStart == null ? void 0 : onScrollStart(info);\n  };\n  useWheelScroll(containerRef, {\n    enabled: wheelEnabled,\n    initial,\n    prev,\n    direction,\n    offsetX: x,\n    offsetY: y,\n    onScrollStart: onWheelScrollStart,\n    onScroll,\n    onScrollEnd,\n    constraints: measuredConstraints\n  });\n  const overdragX = useMotionValue(0);\n  const overdragY = useMotionValue(0);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect)(() => {\n    const setScrollX = (xValue) => {\n      const element = containerRef.current;\n      if (!(element instanceof HTMLDivElement))\n        return;\n      element.scrollLeft = -xValue;\n      const constraints = measuredConstraints.current;\n      if (constraints && overdragEnabled) {\n        let overdragXValue = 0;\n        if (xValue > constraints.right)\n          overdragXValue = xValue;\n        if (xValue < constraints.left)\n          overdragXValue = xValue - constraints.left;\n        overdragX.set(overdragXValue);\n      }\n      scheduleUpdateScrollListeners();\n    };\n    const currentX = x.get();\n    if (currentX !== 0)\n      setScrollX(currentX);\n    return x.onChange(setScrollX);\n  }, [x, overdragX, scheduleUpdateScrollListeners, overdragEnabled]);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect)(() => {\n    const setScrollY = (yValue) => {\n      const element = containerRef.current;\n      if (!(element instanceof HTMLDivElement))\n        return;\n      element.scrollTop = -yValue;\n      const constraints = measuredConstraints.current;\n      if (constraints && overdragEnabled) {\n        let overdragYValue = 0;\n        if (yValue > constraints.bottom)\n          overdragYValue = yValue;\n        if (yValue < constraints.top)\n          overdragYValue = yValue - constraints.top;\n        overdragY.set(overdragYValue);\n      }\n      scheduleUpdateScrollListeners();\n    };\n    const currentY = y.get();\n    if (currentY !== 0)\n      setScrollY(currentY);\n    return y.onChange(setScrollY);\n  }, [y, overdragY, scheduleUpdateScrollListeners, overdragEnabled]);\n  const nativeOnScroll = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {\n    const element = containerRef.current;\n    if (!(element instanceof HTMLDivElement))\n      return;\n    const xDelta = Math.abs(x.get() + element.scrollLeft);\n    const yDelta = Math.abs(y.get() + element.scrollTop);\n    if (xDelta > 1)\n      x.set(-element.scrollLeft);\n    if (yDelta > 1)\n      y.set(-element.scrollTop);\n  }, [x, y]);\n  const isEmpty2 = react__WEBPACK_IMPORTED_MODULE_0__.Children.count(children) === 0;\n  const width = direction !== \"vertical\" && !isEmpty2 ? \"auto\" : \"100%\";\n  const height = direction !== \"horizontal\" && !isEmpty2 ? \"auto\" : \"100%\";\n  const size2 = !containerProps.__fromCanvasComponent ? {\n    width: containerProps.__fromCodeComponentNode ? \"100%\" : containerProps.width,\n    height: containerProps.__fromCodeComponentNode ? \"100%\" : containerProps.height\n  } : {};\n  return /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(FrameWithMotion, {\n    \"data-framer-component-type\": \"Scroll\",\n    background: \"none\",\n    ...containerProps,\n    ...size2,\n    style: {\n      ...style,\n      willChange: isPreview ? \"transform\" : void 0,\n      overflow: \"hidden\"\n    },\n    onScroll: nativeOnScroll,\n    preserve3d: containerProps.preserve3d,\n    ref: containerRef,\n    layoutId,\n    onBeforeLayoutMeasure: measureAndUpdateScrollOffset\n  }, /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(FrameWithMotion, {\n    \"data-framer-component-type\": \"ScrollContentWrapper\",\n    animate: scrollAnimate,\n    drag: dragEnabled && convertScrollDirectionToDrag(direction),\n    dragDirectionLock: directionLock,\n    dragElastic,\n    dragMomentum,\n    dragTransition,\n    dragConstraints: containerRef,\n    dragControls,\n    onDragStart: onMotionDragStart,\n    onDrag,\n    onDragEnd,\n    onDragTransitionEnd: onMotionDragTransitionEnd,\n    onDirectionLock,\n    onMeasureDragConstraints: setMeasureDragConstraints,\n    width,\n    height,\n    _dragX: x,\n    _dragY: y,\n    position: \"relative\",\n    x: overdragEnabled ? overdragX : void 0,\n    y: overdragEnabled ? overdragY : void 0,\n    ref: contentRef,\n    style: {\n      display: isEmpty2 ? \"block\" : \"inline-block\",\n      willChange: isPreview ? \"transform\" : void 0,\n      backgroundColor: \"transparent\",\n      overflow: \"visible\",\n      minWidth: \"100%\",\n      minHeight: \"100%\"\n    },\n    preserve3d: containerProps.preserve3d\n  }, /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(EmptyState, {\n    children,\n    size: {\n      width: isFiniteNumber(containerProps.width) ? containerProps.width : \"100%\",\n      height: isFiniteNumber(containerProps.height) ? containerProps.height : \"100%\"\n    },\n    insideUserCodeComponent: !containerProps.__fromCodeComponentNode,\n    title: \"Scroll\",\n    description: \"Click and drag the connector to any frame on the canvas \\u2192\"\n  }), useUpdateChildSize({\n    dragDirection: direction,\n    children,\n    fromCanvasComponent: containerProps.__fromCanvasComponent\n  })));\n});\nfunction offsetToZero({ top, left, right, bottom }) {\n  const width = right - left;\n  const height = bottom - top;\n  return {\n    top: -height,\n    left: -width,\n    right: 0,\n    bottom: 0\n  };\n}\n\n// src/components/Scroll/NativeScroll.tsx\n\n\n// src/modules/cx.ts\nfunction cx(...classNames) {\n  return classNames.filter(Boolean).join(\" \");\n}\n\n// src/components/utils/useEmulatedTouchScroll.ts\n\n\n// src/components/utils/animatePointWithInertia.ts\nvar AnimationPhase;\n(function(AnimationPhase2) {\n  AnimationPhase2[AnimationPhase2[\"None\"] = 0] = \"None\";\n  AnimationPhase2[AnimationPhase2[\"Running\"] = 1] = \"Running\";\n  AnimationPhase2[AnimationPhase2[\"Completed\"] = 2] = \"Completed\";\n  AnimationPhase2[AnimationPhase2[\"Cancelled\"] = 3] = \"Cancelled\";\n})(AnimationPhase || (AnimationPhase = {}));\nfunction isRunningAnimation(...phases) {\n  let runningAny = false;\n  let cancelledAny = false;\n  phases.forEach((phase) => {\n    runningAny = runningAny || phase === 1;\n    cancelledAny = cancelledAny || phase === 3;\n  });\n  return runningAny && !cancelledAny;\n}\nfunction didFinishAnimations(...phases) {\n  return phases.every((phase) => phase === 0 || phase === 2);\n}\nvar timeConstant = 400;\nfunction animatePointWithInertia({\n  from,\n  velocity,\n  onUpdate,\n  onComplete,\n  onStop\n}) {\n  const latest = from;\n  let animationPhaseX = 0;\n  let animationPhaseY = 0;\n  const animations2 = [];\n  const updateHandler = () => {\n    if (isRunningAnimation(animationPhaseX, animationPhaseY)) {\n      onUpdate(latest);\n    }\n  };\n  const completionHandler = () => {\n    if (didFinishAnimations(animationPhaseX, animationPhaseY)) {\n      onComplete();\n    }\n  };\n  if (velocity.x) {\n    animationPhaseX = 1;\n    animations2.push(inertia({\n      from: from.x,\n      velocity: -velocity.x,\n      timeConstant,\n      onUpdate: (value) => {\n        latest.x = value;\n        es_default.update(updateHandler, false, true);\n      },\n      onComplete: () => {\n        if (animationPhaseX !== 1) {\n          throw Error(\"animation x should be running when completing\");\n        }\n        animationPhaseX = 2;\n        completionHandler();\n      }\n    }));\n  }\n  if (velocity.y) {\n    animationPhaseY = 1;\n    animations2.push(inertia({\n      from: from.y,\n      velocity: -velocity.y,\n      timeConstant,\n      onUpdate: (value) => {\n        latest.y = value;\n        es_default.update(updateHandler, false, true);\n      },\n      onComplete: () => {\n        if (animationPhaseY !== 1) {\n          throw Error(\"animation y should be running when completing\");\n        }\n        animationPhaseY = 2;\n        completionHandler();\n      }\n    }));\n  }\n  if (!isRunningAnimation(animationPhaseX, animationPhaseY)) {\n    completionHandler();\n  }\n  return {\n    stop: () => {\n      if (!isRunningAnimation(animationPhaseX, animationPhaseY))\n        return;\n      animations2.forEach((animation) => animation.stop());\n      animationPhaseX = animationPhaseX === 1 ? 3 : animationPhaseX;\n      animationPhaseY = animationPhaseY === 1 ? 3 : animationPhaseY;\n      onStop();\n    }\n  };\n}\n\n// src/components/utils/useEmulatedTouchScroll.ts\nvar scrollThreshold = 3;\nvar isTouchDevice = isTouch();\nvar isSafariBrowser = isSafari();\nfunction getTouchAction(element) {\n  if (!(element instanceof HTMLElement))\n    return null;\n  return element.style.touchAction;\n}\nfunction canPanInDirection(element, direction) {\n  switch (direction) {\n    case \"horizontal\":\n      return getTouchAction(element) === \"pan-x\";\n    case \"vertical\":\n      return getTouchAction(element) === \"pan-y\";\n    default:\n      return false;\n  }\n}\nfunction isInteractiveElement(element) {\n  const tag = element.tagName.toLowerCase();\n  if (tag === \"input\")\n    return true;\n  if (tag === \"text\")\n    return true;\n  if (tag === \"textarea\")\n    return true;\n  return false;\n}\nfunction canStartScrollFromElement(element, direction) {\n  if (!(element instanceof Element))\n    return false;\n  if (isInteractiveElement(element))\n    return false;\n  if (element.hasAttribute(\"draggable\")) {\n    if (!canPanInDirection(element, direction)) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction getEventPoint(event) {\n  return {\n    x: event.pageX,\n    y: event.pageY\n  };\n}\nfunction setStyle(element, property, value) {\n  if (element == null ? void 0 : element.style) {\n    element.style[property] = value;\n  }\n}\nfunction getStyle(element, property) {\n  var _a;\n  return (_a = element == null ? void 0 : element.style) == null ? void 0 : _a[property];\n}\nvar TouchScrollPhase;\n(function(TouchScrollPhase2) {\n  TouchScrollPhase2[TouchScrollPhase2[\"Idle\"] = 0] = \"Idle\";\n  TouchScrollPhase2[TouchScrollPhase2[\"TouchDown\"] = 1] = \"TouchDown\";\n  TouchScrollPhase2[TouchScrollPhase2[\"Drag\"] = 2] = \"Drag\";\n  TouchScrollPhase2[TouchScrollPhase2[\"DragLocked\"] = 3] = \"DragLocked\";\n  TouchScrollPhase2[TouchScrollPhase2[\"DragAnimation\"] = 4] = \"DragAnimation\";\n  TouchScrollPhase2[TouchScrollPhase2[\"Interrupted\"] = 5] = \"Interrupted\";\n})(TouchScrollPhase || (TouchScrollPhase = {}));\nvar emptyObject = {};\nObject.freeze(emptyObject);\nfunction useEmulateTouchScroll(ref, direction, enabled) {\n  if (isTouchDevice)\n    return emptyObject;\n  if (RenderTarget.current() !== RenderTarget.preview)\n    return emptyObject;\n  const scrollAnimationControlsRef = react__WEBPACK_IMPORTED_MODULE_0___default().useRef(null);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (!ref.current)\n      return;\n    const element = ref.current;\n    let phase = 0;\n    let targets = null;\n    let downPoint = null;\n    let scrollOffsetStart = null;\n    let mouseMoveEvents = [];\n    function onMouseMove(event) {\n      var _a;\n      switch (phase) {\n        case 0:\n        case 4:\n        case 3:\n          return;\n      }\n      if (event.metaKey)\n        return;\n      const point = getEventPoint(event);\n      if (!downPoint)\n        return;\n      const offset = Point.subtract(point, downPoint);\n      if (phase === 1 || phase === 5) {\n        const deltaX = Math.abs(offset.x);\n        const deltaY = Math.abs(offset.y);\n        if ((deltaX > scrollThreshold || deltaY > scrollThreshold) && deltaX !== deltaY) {\n          const scrollDirection = deltaX > deltaY ? \"horizontal\" : \"vertical\";\n          const shouldIgnoreBecauseOfDirectionLock = direction === \"horizontal\" && scrollDirection === \"vertical\" || direction === \"vertical\" && scrollDirection === \"horizontal\";\n          if (shouldIgnoreBecauseOfDirectionLock) {\n            phase = 3;\n            return;\n          }\n          phase = 2;\n          targets == null ? void 0 : targets.forEach(([target]) => setStyle(target, \"pointerEvents\", \"none\"));\n        }\n      }\n      if (isSafariBrowser)\n        event.preventDefault();\n      if (phase !== 2)\n        return;\n      (_a = window.getSelection()) == null ? void 0 : _a.empty();\n      mouseMoveEvents = getRecentEvents([...mouseMoveEvents, event]);\n      if (scrollOffsetStart) {\n        if (direction !== \"vertical\")\n          element.scrollLeft = scrollOffsetStart.x - offset.x;\n        if (direction !== \"horizontal\")\n          element.scrollTop = scrollOffsetStart.y - offset.y;\n      }\n    }\n    function onMouseUp(event) {\n      window.removeEventListener(\"mousemove\", onMouseMove, false);\n      window.removeEventListener(\"mouseup\", onMouseUp);\n      if (phase === 2 && targets) {\n        targets.forEach(([target, originalPointerEventsValue]) => setStyle(target, \"pointerEvents\", originalPointerEventsValue || \"auto\"));\n      }\n      targets = null;\n      const velocity = calculateVelocity({ mouseMoveEvents, mouseUpEvent: event });\n      downPoint = null;\n      if (phase === 2) {\n        const shouldAnimateY = direction !== \"horizontal\" && velocity.y !== 0;\n        const shouldAnimateX = direction !== \"vertical\" && velocity.x !== 0;\n        if (!shouldAnimateY && !shouldAnimateX) {\n          phase = 0;\n          return;\n        }\n        phase = 4;\n        scrollAnimationControlsRef.current = animatePointWithInertia({\n          from: { x: element.scrollLeft, y: element.scrollTop },\n          velocity: {\n            x: shouldAnimateX ? velocity.x : 0,\n            y: shouldAnimateY ? velocity.y : 0\n          },\n          onUpdate: (position) => {\n            if (shouldAnimateX)\n              element.scrollLeft = position.x;\n            if (shouldAnimateY)\n              element.scrollTop = position.y;\n          },\n          onStop: () => {\n            if (phase !== 5) {\n              phase = 0;\n            }\n            scrollAnimationControlsRef.current = null;\n          },\n          onComplete: () => {\n            if (phase !== 4) {\n              throw Error(\"On animation completion we should still be in the animation phase\");\n            }\n            phase = 0;\n            scrollAnimationControlsRef.current = null;\n          }\n        });\n      } else {\n        phase = 0;\n      }\n    }\n    function onMouseWheel() {\n      var _a;\n      (_a = scrollAnimationControlsRef.current) == null ? void 0 : _a.stop();\n    }\n    function onMouseDown(event) {\n      var _a;\n      if (!enabled)\n        return;\n      if (event.metaKey)\n        return;\n      if (!canStartScrollFromElement(event.target, direction)) {\n        if (phase === 4) {\n          phase = 0;\n          (_a = scrollAnimationControlsRef.current) == null ? void 0 : _a.stop();\n        }\n        return;\n      }\n      const previousPhase = phase;\n      phase = previousPhase === 4 ? 5 : 1;\n      downPoint = getEventPoint(event);\n      targets = document.elementsFromPoint(downPoint.x, downPoint.y).filter((targetEl) => targetEl instanceof HTMLElement || targetEl instanceof SVGElement).map((targetEl) => [targetEl, getStyle(targetEl, \"pointerEvents\")]);\n      scrollOffsetStart = { x: element.scrollLeft, y: element.scrollTop };\n      mouseMoveEvents = [];\n      if (scrollAnimationControlsRef.current) {\n        if (previousPhase !== 4) {\n          throw Error(\"When stopping a drag animation we need to be animating\");\n        }\n        scrollAnimationControlsRef.current.stop();\n      }\n      window.addEventListener(\"mousemove\", onMouseMove);\n      window.addEventListener(\"mouseup\", onMouseUp);\n      element.addEventListener(\"mousewheel\", onMouseWheel);\n    }\n    element.addEventListener(\"mousedown\", onMouseDown);\n    return () => {\n      var _a;\n      element.removeEventListener(\"mousedown\", onMouseDown);\n      element.removeEventListener(\"mousewheel\", onMouseWheel);\n      window.removeEventListener(\"mousemove\", onMouseMove);\n      window.removeEventListener(\"mouseup\", onMouseUp);\n      phase = 5;\n      (_a = scrollAnimationControlsRef.current) == null ? void 0 : _a.stop();\n    };\n  }, [ref, direction, enabled]);\n  return react__WEBPACK_IMPORTED_MODULE_0___default().useMemo(() => {\n    return {\n      cancelEmulatedTouchScrollAnimation: () => {\n        var _a;\n        (_a = scrollAnimationControlsRef.current) == null ? void 0 : _a.stop();\n      }\n    };\n  }, []);\n}\nvar timeDelta = 4 / 60 * 1e3;\nfunction getRecentEvents(events2) {\n  const currentTime = new CustomEvent(\"getTime\").timeStamp;\n  const maxAge = currentTime - timeDelta;\n  return events2.filter((event) => event.timeStamp > maxAge);\n}\nvar zeroPoint = { x: 0, y: 0 };\nfunction calculateVelocity({\n  mouseMoveEvents,\n  mouseUpEvent\n}) {\n  const recentMouseMoveEvents = getRecentEvents(mouseMoveEvents);\n  const oldestMouseMoveEvent = recentMouseMoveEvents[0];\n  if (!oldestMouseMoveEvent)\n    return zeroPoint;\n  const deltaX = mouseUpEvent.clientX - oldestMouseMoveEvent.clientX;\n  const deltaY = mouseUpEvent.clientY - oldestMouseMoveEvent.clientY;\n  const time3 = mouseUpEvent.timeStamp - oldestMouseMoveEvent.timeStamp;\n  if (time3 === 0)\n    return zeroPoint;\n  return {\n    x: deltaX / time3 * 1e3,\n    y: deltaY / time3 * 1e3\n  };\n}\n\n// src/components/NavigationContainerContext.tsx\n\n\nvar NavigationContainerContext = (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(true);\nfunction useIsInCurrentNavigationTarget() {\n  const isInCurrentNavigationTarget = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(NavigationContainerContext);\n  return isInCurrentNavigationTarget;\n}\n\n// src/components/utils/useUpdateScrollOffset.ts\n\nfunction useUpdateScrollOffset(ref, side, offset, cancelEmulatedTouchScrollAnimation) {\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect)(() => {\n    if (isMotionValue2(offset)) {\n      const updateScrollLeft = () => {\n        cancelEmulatedTouchScrollAnimation == null ? void 0 : cancelEmulatedTouchScrollAnimation();\n        const element = ref.current;\n        if (element)\n          element[side] = Math.abs(offset.get());\n      };\n      updateScrollLeft();\n      return offset.onChange(updateScrollLeft);\n    } else if (isFiniteNumber(offset)) {\n      const element = ref.current;\n      if (!element)\n        return;\n      cancelEmulatedTouchScrollAnimation == null ? void 0 : cancelEmulatedTouchScrollAnimation();\n      element[side] = Math.abs(offset);\n    }\n  }, [offset]);\n}\n\n// src/components/Scroll/NativeScroll.tsx\nvar NativeScroll = (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(function NativeScroll2(props, forwardedRef) {\n  const {\n    direction = \"vertical\",\n    scrollBarVisible = false,\n    dragEnabled = true,\n    contentOffsetX = 0,\n    contentOffsetY = 0,\n    contentWidth,\n    contentHeight,\n    children,\n    resetOffset,\n    onScroll,\n    className,\n    directionLock = false,\n    wheelEnabled = true,\n    scrollAnimate,\n    dragTransition,\n    dragMomentum,\n    dragElastic,\n    overdragEnabled = true,\n    onScrollStart,\n    onScrollEnd,\n    onDragStart,\n    onDrag,\n    onDragEnd,\n    onUpdate,\n    onDirectionLock,\n    layoutId: specificLayoutId,\n    native,\n    ...containerProps\n  } = props;\n  const layoutId = useLayoutId2(props, { specificLayoutId, postfix: \"scroll\" });\n  const fallbackRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n  const ref = forwardedRef || fallbackRef;\n  const { cancelEmulatedTouchScrollAnimation } = useEmulateTouchScroll(ref, direction, dragEnabled);\n  injectComponentCSSRules();\n  const isInTarget = useIsInCurrentNavigationTarget();\n  const previousIsInTargetRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(isInTarget);\n  const updateScrollOffsetHandler = () => {\n    if (!resetOffset)\n      return;\n    const previousIsTarget = previousIsInTargetRef.current;\n    previousIsInTargetRef.current = isInTarget;\n    const shouldResetOffset = isInTarget && !previousIsTarget;\n    if (!shouldResetOffset)\n      return;\n    const element = ref.current;\n    if (!element)\n      return;\n    if (direction !== \"vertical\") {\n      cancelEmulatedTouchScrollAnimation == null ? void 0 : cancelEmulatedTouchScrollAnimation();\n      element.scrollLeft = Math.abs(isMotionValue2(contentOffsetX) ? contentOffsetX.get() : contentOffsetX);\n    }\n    if (direction !== \"horizontal\") {\n      cancelEmulatedTouchScrollAnimation == null ? void 0 : cancelEmulatedTouchScrollAnimation();\n      element.scrollTop = Math.abs(isMotionValue2(contentOffsetY) ? contentOffsetY.get() : contentOffsetY);\n    }\n  };\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect)(updateScrollOffsetHandler, [isInTarget]);\n  useUpdateScrollOffset(ref, \"scrollLeft\", contentOffsetX, cancelEmulatedTouchScrollAnimation);\n  useUpdateScrollOffset(ref, \"scrollTop\", contentOffsetY, cancelEmulatedTouchScrollAnimation);\n  const size2 = !containerProps.__fromCanvasComponent ? {\n    width: containerProps.__fromCodeComponentNode ? \"100%\" : containerProps.width,\n    height: containerProps.__fromCodeComponentNode ? \"100%\" : containerProps.height\n  } : {};\n  return /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(FrameWithMotion, {\n    ref,\n    \"data-framer-component-type\": \"NativeScroll\",\n    background: \"none\",\n    ...containerProps,\n    ...size2,\n    onScroll,\n    layoutId,\n    onBeforeLayoutMeasure: updateScrollOffsetHandler,\n    className: cx(className, `direction-${direction}`, !scrollBarVisible && \"scrollbar-hidden\")\n  }, /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(EmptyState, {\n    children,\n    size: {\n      width: isFiniteNumber(containerProps.width) ? containerProps.width : \"100%\",\n      height: isFiniteNumber(containerProps.height) ? containerProps.height : \"100%\"\n    },\n    insideUserCodeComponent: !containerProps.__fromCodeComponentNode,\n    title: \"Scroll\",\n    description: \"Click and drag the connector to any frame on the canvas \\u2192\"\n  }), children);\n});\n\n// src/components/Scroll/Scroll.tsx\nvar Scroll = (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(function Scroll2(props, forwardedRef) {\n  if (props.native) {\n    return /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(NativeScroll, {\n      ref: forwardedRef,\n      ...props\n    });\n  } else {\n    return /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(EmulatedScroll, {\n      ref: forwardedRef,\n      ...props\n    });\n  }\n});\naddPropertyControls(Scroll, {\n  native: {\n    type: ControlType.Boolean,\n    defaultValue: false\n  },\n  direction: {\n    type: ControlType.SegmentedEnum,\n    title: \"Direction\",\n    options: [\"vertical\", \"horizontal\", \"both\"],\n    defaultValue: \"vertical\"\n  },\n  contentOffsetX: {\n    type: ControlType.Number,\n    title: \"Offset X\",\n    defaultValue: 0,\n    min: 0,\n    step: 10,\n    displayStepper: true,\n    hidden: ({ direction }) => direction === \"vertical\"\n  },\n  contentOffsetY: {\n    type: ControlType.Number,\n    title: \"Offset Y\",\n    defaultValue: 0,\n    min: 0,\n    step: 10,\n    displayStepper: true,\n    hidden: ({ direction }) => direction === \"horizontal\"\n  },\n  directionLock: {\n    type: ControlType.Boolean,\n    title: \"Lock\",\n    enabledTitle: \"1 Axis\",\n    disabledTitle: \"Off\",\n    defaultValue: true,\n    hidden: ({ native }) => native === true\n  },\n  dragEnabled: {\n    type: ControlType.Boolean,\n    title: \"Drag\",\n    enabledTitle: \"On\",\n    disabledTitle: \"Off\",\n    defaultValue: true\n  },\n  overdragEnabled: {\n    type: ControlType.Boolean,\n    title: \"Overdrag\",\n    enabledTitle: \"On\",\n    disabledTitle: \"Off\",\n    defaultValue: true,\n    hidden: ({ native }) => native === true\n  },\n  wheelEnabled: {\n    type: ControlType.Boolean,\n    title: \"Wheel\",\n    enabledTitle: \"On\",\n    disabledTitle: \"Off\",\n    defaultValue: true,\n    hidden: ({ native }) => native === true\n  },\n  scrollBarVisible: {\n    type: ControlType.Boolean,\n    title: \"Scroll Bar\",\n    enabledTitle: \"Visible\",\n    disabledTitle: \"Hidden\",\n    defaultValue: false,\n    hidden: ({ native }) => native === false\n  },\n  resetOffset: {\n    type: ControlType.Boolean,\n    title: \"Reset\",\n    enabledTitle: \"True\",\n    disabledTitle: \"False\",\n    defaultValue: false\n  }\n});\nScroll.supportsConstraints = true;\n\n// src/components/Draggable.ts\nvar Draggable = WithDragging(DeprecatedFrameWithEvents);\n\n// src/components/Scroll/DeprecatedScroll.tsx\n\n\n// src/components/utils/RectProvider.ts\nfunction isRectProviding(c2) {\n  return \"rect\" in c2 && c2.rect instanceof Function;\n}\n\n// src/utils/observable.ts\nfunction getObservableNumber(value, defaultValue = 0) {\n  if (!value) {\n    return defaultValue;\n  }\n  if (isAnimatable2(value)) {\n    return value.get();\n  }\n  return value;\n}\n\n// src/components/Scroll/DeprecatedScroll.tsx\nvar _DeprecatedScroll = class extends react__WEBPACK_IMPORTED_MODULE_0__.Component {\n  wrapHandlers(dragHandler, scrollHandler) {\n    if (!scrollHandler) {\n      return dragHandler;\n    }\n    return (event, draggable) => {\n      if (dragHandler) {\n        dragHandler(event, draggable);\n      }\n      scrollHandler(event, this);\n    };\n  }\n  render() {\n    return /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(ConsumeParentSize, null, ({ size: newParentSize }) => {\n      const parentSize = deprecatedParentSize(newParentSize);\n      const frameProps = Object.assign({}, this.props, {\n        parentSize\n      });\n      Object.keys(_DeprecatedScroll.scrollProps).map((key6) => {\n        delete frameProps[key6];\n      });\n      if (!this.props.children) {\n        return /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(DeprecatedFrame, {\n          ...frameProps\n        }, /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Draggable, {\n          width: frameProps.width,\n          height: frameProps.height\n        }));\n      }\n      const contentSize = { top: 0, left: 0, bottom: 0, right: 0 };\n      const { width, height } = DeprecatedFrame.rect(frameProps);\n      const children = react__WEBPACK_IMPORTED_MODULE_0__.Children.map(this.props.children, (child) => {\n        if (child === null || typeof child !== \"object\" || typeof child.type === \"string\") {\n          return child;\n        }\n        const type = child.type;\n        if (isRectProviding(type)) {\n          const frame2 = type.rect(child.props, parentSize);\n          if (frame2) {\n            contentSize.top = Math.min(Rect.minY(frame2), contentSize.top);\n            contentSize.left = Math.min(Rect.minX(frame2), contentSize.left);\n            contentSize.bottom = Math.max(Rect.maxY(frame2), contentSize.bottom);\n            contentSize.right = Math.max(Rect.maxX(frame2), contentSize.right);\n          }\n        }\n        const update = {};\n        if (this.props.direction === \"vertical\") {\n          update.width = width;\n        } else if (this.props.direction === \"horizontal\") {\n          update.height = height;\n        }\n        return (0,react__WEBPACK_IMPORTED_MODULE_0__.cloneElement)(child, update);\n      });\n      const {\n        onScrollStart,\n        onScroll,\n        onScrollEnd,\n        onScrollSessionStart,\n        onScrollSessionEnd\n      } = this.props;\n      const w = getObservableNumber(width);\n      const h = getObservableNumber(height);\n      const contentW = Math.max(contentSize.right, w);\n      const contentH = Math.max(contentSize.bottom, h);\n      const x = Math.min(0, w - contentW);\n      const y = Math.min(0, h - contentH);\n      const constraints = {\n        x,\n        y,\n        width: contentW + contentW - w,\n        height: contentH + contentH - h\n      };\n      const draggableProps = {};\n      draggableProps.enabled = this.props.draggingEnabled;\n      draggableProps.background = \"none\";\n      draggableProps.width = contentW;\n      draggableProps.height = contentH;\n      draggableProps.constraints = constraints;\n      draggableProps.onMove = this.props.onMove;\n      draggableProps.onDragSessionStart = this.wrapHandlers(this.props.onDragSessionStart, onScrollSessionStart);\n      draggableProps.onDragSessionMove = this.props.onDragSessionMove;\n      draggableProps.onDragSessionEnd = this.wrapHandlers(this.props.onDragSessionEnd, onScrollSessionEnd);\n      draggableProps.onDragAnimationStart = this.props.onDragAnimationStart;\n      draggableProps.onDragAnimationEnd = this.props.onDragAnimationEnd;\n      draggableProps.onDragDidMove = this.wrapHandlers(this.props.onDragDidMove, onScroll);\n      draggableProps.onDragDirectionLockStart = this.props.onDragDirectionLockStart;\n      draggableProps.onDragStart = this.wrapHandlers(this.props.onDragStart, onScrollStart);\n      draggableProps.onDragEnd = this.wrapHandlers(this.props.onDragEnd, onScrollEnd);\n      draggableProps.onDragWillMove = this.props.onDragWillMove;\n      draggableProps.horizontal = this.props.direction !== \"vertical\";\n      draggableProps.vertical = this.props.direction !== \"horizontal\";\n      draggableProps.directionLock = this.props.directionLock;\n      draggableProps.mouseWheel = true;\n      draggableProps.left = this.props.contentOffsetX;\n      draggableProps.top = this.props.contentOffsetY;\n      draggableProps.preserve3d = this.props.preserve3d;\n      return /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(DeprecatedFrame, {\n        ...frameProps\n      }, /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Draggable, {\n        ...draggableProps\n      }, children), /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(EmptyState, {\n        children: this.props.children,\n        size: { width: w, height: h },\n        title: \"Connect to scrollable area\"\n      }));\n    });\n  }\n};\nvar DeprecatedScroll = _DeprecatedScroll;\nDeprecatedScroll.supportsConstraints = true;\nDeprecatedScroll.scrollProps = {\n  draggingEnabled: true,\n  direction: \"vertical\",\n  directionLock: true,\n  mouseWheel: true,\n  contentOffsetX: null,\n  contentOffsetY: null\n};\nDeprecatedScroll.defaultProps = Object.assign({}, DeprecatedFrame.defaultProps, _DeprecatedScroll.scrollProps, {\n  overflow: \"visible\",\n  background: \"none\",\n  width: \"100%\",\n  height: \"100%\"\n});\nDeprecatedScroll.propertyControls = {\n  direction: {\n    type: ControlType.SegmentedEnum,\n    title: \"Direction\",\n    options: [\"vertical\", \"horizontal\", \"both\"]\n  },\n  directionLock: {\n    type: ControlType.Boolean,\n    title: \"Lock\",\n    enabledTitle: \"1 Axis\",\n    disabledTitle: \"Off\",\n    hidden(props) {\n      return props.direction !== \"both\";\n    }\n  }\n};\n\n// src/components/Screen.tsx\n\n\n// src/events/recognizer/GestureRecognizer.ts\nvar State3;\n(function(State4) {\n  State4[State4[\"Possible\"] = 2] = \"Possible\";\n  State4[State4[\"Began\"] = 4] = \"Began\";\n  State4[State4[\"Changed\"] = 8] = \"Changed\";\n  State4[State4[\"Ended\"] = 16] = \"Ended\";\n  State4[State4[\"Failed\"] = 32] = \"Failed\";\n  State4[State4[\"Cancelled\"] = 64] = \"Cancelled\";\n  State4[State4[\"Recognized\"] = 128] = \"Recognized\";\n})(State3 || (State3 = {}));\nfunction stateName(state) {\n  switch (state) {\n    case 2:\n      return \"Possible\";\n    case 4:\n      return \"Began\";\n    case 8:\n      return \"Changed\";\n    case 16:\n      return \"Ended\";\n    case 32:\n      return \"Failed\";\n    case 64:\n      return \"Cancelled\";\n    case 128:\n      return \"Recognized\";\n    default:\n      return \"Unknown\";\n  }\n}\nfunction containsBitmask(value, bitmask) {\n  return (value & bitmask) !== 0;\n}\nvar GestureRecognizer = class {\n  constructor() {\n    this._state = 2;\n    this.preventers = [];\n  }\n  get state() {\n    return this._state;\n  }\n  setState(state) {\n    this._state = state;\n  }\n  get isPrevented() {\n    let prevented = false;\n    for (const recognizer of this.preventers) {\n      if (recognizer.state & (4 | 8 | 16)) {\n        prevented = true;\n        break;\n      }\n    }\n    return prevented;\n  }\n  canBePreventedBy(recognizer) {\n    this.preventers.push(recognizer);\n  }\n  hasState(bitmask) {\n    return containsBitmask(this.state, bitmask);\n  }\n  stateSwitch(newState) {\n    let allowedStates;\n    switch (this.state) {\n      case 2:\n        allowedStates = 4 | 128 | 32;\n        break;\n      case 4:\n        allowedStates = 8 | 64 | 16;\n        break;\n      case 8:\n        allowedStates = 8 | 64 | 16;\n        break;\n      case 128:\n      case 16:\n      case 64:\n      case 32:\n        allowedStates = 2;\n        break;\n      default:\n        allowedStates = 0;\n    }\n    if (!containsBitmask(newState, allowedStates)) {\n      console.warn(`Unallowed state change from ${stateName(this.state)} to ${stateName(newState)}`);\n      return;\n    }\n    this.setState(newState);\n  }\n  cancel() {\n    if (this.hasState(4 | 8)) {\n      this.setState(64);\n    }\n    this.reset();\n  }\n  reset() {\n    if (!this.hasState(2)) {\n      this.stateSwitch(2);\n    }\n  }\n};\n\n// src/events/recognizer/PanGestureRecognizer.ts\nvar PanGestureRecognizer = class extends GestureRecognizer {\n  constructor() {\n    super(...arguments);\n    this.eventType = \"pan\";\n  }\n  pointerSessionBegan(session, event) {\n    this.recognize(session, event);\n  }\n  pointerSessionMoved(session, event) {\n    this.recognize(session, event);\n  }\n  pointerSessionEnded(session, event) {\n    this.panend(event);\n  }\n  recognize(session, event) {\n    if (Math.abs(event.delta.x) > 0 || Math.abs(event.delta.y) > 0) {\n      if (this.startEvent) {\n        this.pan(event);\n      } else {\n        this.panstart(event);\n      }\n    }\n  }\n  reset() {\n    this.startEvent = null;\n    super.reset();\n  }\n  panstart(event) {\n    if (!this.hasState(State3.Possible) || event.isLeftMouseClick !== void 0 && !event.isLeftMouseClick) {\n      return;\n    }\n    this.stateSwitch(State3.Began);\n    this.startEvent = event;\n    if (this.handler && this.startEvent.target) {\n      this.handler.gestureBegan(this.eventType, event, this.startEvent.target);\n    }\n  }\n  pan(event) {\n    if (!this.hasState(State3.Began | State3.Changed)) {\n      return;\n    }\n    if (!this.startEvent) {\n      return;\n    }\n    this.stateSwitch(State3.Changed);\n    if (this.handler && this.startEvent.target) {\n      this.handler.gestureChanged(this.eventType, event, this.startEvent.target);\n    }\n  }\n  panend(event) {\n    if (!this.hasState(State3.Began | State3.Changed)) {\n      return;\n    }\n    if (!this.startEvent) {\n      return;\n    }\n    this.stateSwitch(State3.Ended);\n    if (this.handler && this.startEvent.target) {\n      this.handler.gestureEnded(this.eventType, event, this.startEvent.target);\n    }\n  }\n};\n\n// src/events/recognizer/TapGestureRecognizer.ts\nvar TapGestureRecognizer = class extends GestureRecognizer {\n  constructor() {\n    super(...arguments);\n    this.eventType = \"tap\";\n  }\n  pointerSessionBegan(session, event) {\n    if (this.handler && (event.isLeftMouseClick === void 0 || event.isLeftMouseClick)) {\n      this.handler.gestureBegan(this.eventType, event, null);\n    }\n  }\n  pointerSessionMoved(session, event) {\n  }\n  pointerSessionEnded(session, event) {\n    if (this.isPrevented) {\n      this.stateSwitch(State3.Failed);\n    } else if (!session.startEvent || session.startEvent.target === event.target) {\n      this.stateSwitch(State3.Recognized);\n      if (this.handler) {\n        this.handler.gestureChanged(this.eventType, event, null);\n      }\n    } else {\n      this.stateSwitch(State3.Failed);\n    }\n    if (this.handler) {\n      this.handler.gestureEnded(this.eventType, event, null);\n    }\n  }\n};\n\n// src/events/recognizer/MouseWheelGestureRecognizer.ts\nvar MouseWheelGestureRecognizer = class extends GestureRecognizer {\n  constructor() {\n    super(...arguments);\n    this.eventType = \"mousewheel\";\n    this.onMouseWheelEnd = debounce((event) => {\n      if (this.handler && this.startEvent) {\n        this.stateSwitch(State3.Ended);\n        this.handler.gestureEnded(this.eventType, event, this.startEvent.target);\n        this.startEvent = null;\n        this.reset();\n      }\n    }, 300);\n  }\n  pointerSessionBegan(session, event) {\n  }\n  pointerSessionMoved(session, event) {\n  }\n  pointerSessionEnded(session, event) {\n  }\n  mouseWheel(session, event) {\n    if (!this.handler)\n      return;\n    if (this.hasState(State3.Possible)) {\n      this.startEvent = event;\n      this.stateSwitch(State3.Began);\n      this.handler.gestureBegan(this.eventType, event, this.startEvent.target);\n      return;\n    }\n    if (this.hasState(State3.Began | State3.Changed) && this.startEvent) {\n      this.stateSwitch(State3.Changed);\n      this.handler.gestureChanged(this.eventType, event, this.startEvent.target);\n    }\n    this.onMouseWheelEnd(event);\n  }\n};\n\n// src/events/FramerEventSession.ts\nvar FramerEventSession = class {\n  constructor(dispatcher, customOrigin) {\n    this.events = [];\n    this.recognizers = [];\n    this.mouseWheelRecognizer = new MouseWheelGestureRecognizer();\n    this.dispatcher = dispatcher;\n    if (customOrigin) {\n      this.originElement = customOrigin;\n    } else {\n      this.originElement = document.body;\n    }\n    const pan = new PanGestureRecognizer();\n    const tap = new TapGestureRecognizer();\n    pan.handler = this;\n    tap.handler = this;\n    this.mouseWheelRecognizer.handler = this;\n    this.recognizers = [tap, pan];\n  }\n  get isStarted() {\n    return this.events.length !== 0;\n  }\n  get startEvent() {\n    if (this.isStarted) {\n      return this.events[0];\n    } else {\n      return null;\n    }\n  }\n  get lastEvent() {\n    if (this.events.length > 0) {\n      return this.events[this.events.length - 1];\n    } else {\n      return null;\n    }\n  }\n  processEvent(event) {\n    this.events.push(event);\n    return event;\n  }\n  pointerDown(event) {\n    if (this.isStarted) {\n      return;\n    }\n    this.processEvent(event);\n    this.recognizers.map((r) => {\n      r.cancel();\n      r.pointerSessionBegan(this, event);\n    });\n  }\n  pointerMove(event) {\n    if (!this.isStarted) {\n      return;\n    }\n    this.processEvent(event);\n    this.recognizers.map((r) => {\n      r.pointerSessionMoved(this, event);\n    });\n  }\n  pointerUp(event) {\n    if (!this.isStarted) {\n      return;\n    }\n    this.processEvent(event);\n    this.recognizers.map((r) => {\n      r.pointerSessionEnded(this, event);\n    });\n    this.clearEvents();\n    this.recognizers.map((r) => {\n      r.reset();\n    });\n  }\n  mouseWheel(event) {\n    this.processEvent(event);\n    this.mouseWheelRecognizer.mouseWheel(this, event);\n    this.clearEvents();\n  }\n  clearEvents() {\n    this.events = [];\n  }\n  dispatch(type, event, target = null) {\n    const dispatchTarget = target || this.startEvent && this.startEvent.target || event.target;\n    if (dispatchTarget) {\n      this.dispatcher(type, event, dispatchTarget);\n    }\n  }\n  gestureBegan(type, event, target) {\n    this.dispatch(`${type}start`, event, target);\n  }\n  gestureChanged(type, event, target) {\n    this.dispatch(type, event, target);\n  }\n  gestureEnded(type, event, target) {\n    this.dispatch(`${type}end`, event, target);\n  }\n  velocity(t = Loop.TimeStep * 2) {\n    if (!this.isStarted || this.events.length < 2) {\n      return { x: 0, y: 0 };\n    }\n    const events2 = this.events;\n    let i = events2.length - 1;\n    let event = null;\n    while (i >= 0) {\n      event = events2[i];\n      if (MainLoop.time - event.loopTime > t) {\n        break;\n      }\n      i--;\n    }\n    if (!event) {\n      return { x: 0, y: 0 };\n    }\n    const current = events2[events2.length - 1];\n    const time3 = (MainLoop.time - event.loopTime) * 1e3;\n    if (time3 === 0) {\n      return { x: 0, y: 0 };\n    }\n    const velocity = {\n      x: (current.devicePoint.x - event.devicePoint.x) / time3,\n      y: (current.devicePoint.y - event.devicePoint.y) / time3\n    };\n    if (velocity.x === Infinity) {\n      velocity.x = 0;\n    }\n    if (velocity.y === Infinity) {\n      velocity.y = 0;\n    }\n    return velocity;\n  }\n  offset(event) {\n    if (!this.startEvent) {\n      return { x: 0, y: 0 };\n    }\n    const subtract = (pointA, pointB) => {\n      return {\n        x: pointA.x - pointB.x,\n        y: pointA.y - pointB.y\n      };\n    };\n    return subtract(event.devicePoint, this.startEvent.devicePoint);\n  }\n};\n\n// src/events/recognizer/TouchEventListener.ts\n\nvar TouchEventListener = class extends react__WEBPACK_IMPORTED_MODULE_0__.Component {\n  constructor() {\n    super(...arguments);\n    this.domTouchStart = (originalEvent) => {\n      safeWindow.addEventListener(\"touchmove\", this.domTouchMove);\n      safeWindow.addEventListener(\"touchend\", this.domTouchEnd);\n      const event = new FramerEvent(originalEvent, this.props.session);\n      this.props.session.pointerDown(event);\n    };\n    this.domTouchMove = (originalEvent) => {\n      const event = new FramerEvent(originalEvent, this.props.session);\n      this.props.session.pointerMove(event);\n    };\n    this.domTouchEnd = (originalEvent) => {\n      safeWindow.removeEventListener(\"touchmove\", this.domTouchMove);\n      safeWindow.removeEventListener(\"touchend\", this.domTouchEnd);\n      const event = new FramerEvent(originalEvent, this.props.session);\n      this.props.session.pointerUp(event);\n    };\n  }\n  render() {\n    return this.props.children;\n  }\n  componentDidMount() {\n    safeWindow.addEventListener(\"touchstart\", this.domTouchStart);\n  }\n  componentWillUnmount() {\n    safeWindow.removeEventListener(\"touchstart\", this.domTouchStart);\n    safeWindow.removeEventListener(\"touchmove\", this.domTouchMove);\n    safeWindow.removeEventListener(\"touchend\", this.domTouchEnd);\n  }\n};\n\n// src/events/recognizer/MouseEventListener.ts\n\nvar MouseEventListener = class extends react__WEBPACK_IMPORTED_MODULE_0__.Component {\n  constructor() {\n    super(...arguments);\n    this.domMouseDown = (originalEvent) => {\n      safeWindow.addEventListener(\"mousemove\", this.domMouseMove);\n      safeWindow.addEventListener(\"mouseup\", this.domMouseUp);\n      const event = new FramerEvent(originalEvent, this.props.session);\n      this.props.session.pointerDown(event);\n    };\n    this.domMouseMove = (originalEvent) => {\n      const leftMouseButtonOnlyDown = originalEvent.buttons === void 0 ? originalEvent.which === 1 : originalEvent.buttons === 1;\n      if (!leftMouseButtonOnlyDown) {\n        this.domMouseUp(originalEvent);\n        return;\n      }\n      const event = new FramerEvent(originalEvent, this.props.session);\n      this.props.session.pointerMove(event);\n    };\n    this.domMouseUp = (originalEvent) => {\n      safeWindow.removeEventListener(\"mousemove\", this.domMouseMove);\n      safeWindow.removeEventListener(\"mouseup\", this.domMouseUp);\n      const event = new FramerEvent(originalEvent, this.props.session);\n      this.props.session.pointerUp(event);\n    };\n    this.domMouseWheel = (originalEvent) => {\n      const event = new FramerEvent(originalEvent, this.props.session);\n      this.props.session.mouseWheel(event);\n    };\n  }\n  render() {\n    return this.props.children;\n  }\n  componentDidMount() {\n    safeWindow.addEventListener(\"mousedown\", this.domMouseDown);\n    safeWindow.addEventListener(\"wheel\", this.domMouseWheel);\n  }\n  componentWillUnmount() {\n    safeWindow.removeEventListener(\"mousemove\", this.domMouseMove);\n    safeWindow.removeEventListener(\"mousedown\", this.domMouseDown);\n    safeWindow.removeEventListener(\"mouseup\", this.domMouseUp);\n    safeWindow.removeEventListener(\"wheel\", this.domMouseWheel);\n  }\n};\n\n// src/events/FramerEventListener.ts\nvar FramerEventListener = environment_exports.isTouch() ? TouchEventListener : MouseEventListener;\n\n// src/components/Navigation.tsx\n\n\n// src/components/NavigationTransitions.ts\nvar TransitionDefaults;\n(function(TransitionDefaults2) {\n  TransitionDefaults2.Fade = {\n    exit: { opacity: 0 },\n    enter: { opacity: 0 }\n  };\n  TransitionDefaults2.PushLeft = {\n    exit: { x: \"-30%\" },\n    enter: { x: \"100%\" }\n  };\n  TransitionDefaults2.PushRight = {\n    exit: { x: \"30%\" },\n    enter: { x: \"-100%\" }\n  };\n  TransitionDefaults2.PushUp = {\n    exit: { y: \"-30%\" },\n    enter: { y: \"100%\" }\n  };\n  TransitionDefaults2.PushDown = {\n    exit: { y: \"30%\" },\n    enter: { y: \"-100%\" }\n  };\n  TransitionDefaults2.Instant = {\n    animation: { type: false },\n    enter: { opacity: 0 }\n  };\n  TransitionDefaults2.Modal = {\n    overCurrentContext: true,\n    goBackOnTapOutside: true,\n    position: { center: true },\n    enter: { opacity: 0, scale: 1.2 }\n  };\n  TransitionDefaults2.OverlayLeft = {\n    overCurrentContext: true,\n    goBackOnTapOutside: true,\n    position: { right: 0, top: 0, bottom: 0 },\n    enter: { x: \"100%\" }\n  };\n  TransitionDefaults2.OverlayRight = {\n    overCurrentContext: true,\n    goBackOnTapOutside: true,\n    position: { left: 0, top: 0, bottom: 0 },\n    enter: { x: \"-100%\" }\n  };\n  TransitionDefaults2.OverlayUp = {\n    overCurrentContext: true,\n    goBackOnTapOutside: true,\n    position: { bottom: 0, left: 0, right: 0 },\n    enter: { y: \"100%\" }\n  };\n  TransitionDefaults2.OverlayDown = {\n    overCurrentContext: true,\n    goBackOnTapOutside: true,\n    position: { top: 0, left: 0, right: 0 },\n    enter: { y: \"-100%\" }\n  };\n  TransitionDefaults2.FlipLeft = {\n    backfaceVisible: false,\n    exit: { rotateY: -180 },\n    enter: { rotateY: 180 }\n  };\n  TransitionDefaults2.FlipRight = {\n    backfaceVisible: false,\n    exit: { rotateY: 180 },\n    enter: { rotateY: -180 }\n  };\n  TransitionDefaults2.FlipUp = {\n    backfaceVisible: false,\n    exit: { rotateX: 180 },\n    enter: { rotateX: -180 }\n  };\n  TransitionDefaults2.FlipDown = {\n    backfaceVisible: false,\n    exit: { rotateX: -180 },\n    enter: { rotateX: 180 }\n  };\n  TransitionDefaults2.MagicMotion = {\n    withMagicMotion: true\n  };\n})(TransitionDefaults || (TransitionDefaults = {}));\nfunction pushTransition(options) {\n  const side = options && options.appearsFrom ? options.appearsFrom : \"right\";\n  switch (side) {\n    case \"right\":\n      return TransitionDefaults.PushLeft;\n    case \"left\":\n      return TransitionDefaults.PushRight;\n    case \"bottom\":\n      return TransitionDefaults.PushUp;\n    case \"top\":\n      return TransitionDefaults.PushDown;\n  }\n}\nfunction overlayTransition(options) {\n  const side = options && options.appearsFrom ? options.appearsFrom : \"bottom\";\n  switch (side) {\n    case \"right\":\n      return TransitionDefaults.OverlayLeft;\n    case \"left\":\n      return TransitionDefaults.OverlayRight;\n    case \"bottom\":\n      return TransitionDefaults.OverlayUp;\n    case \"top\":\n      return TransitionDefaults.OverlayDown;\n  }\n}\nfunction flipTransition(options) {\n  const side = options && options.appearsFrom ? options.appearsFrom : \"bottom\";\n  switch (side) {\n    case \"right\":\n      return TransitionDefaults.FlipLeft;\n    case \"left\":\n      return TransitionDefaults.FlipRight;\n    case \"bottom\":\n      return TransitionDefaults.FlipUp;\n    case \"top\":\n      return TransitionDefaults.FlipDown;\n  }\n}\n\n// src/components/NavigationContainer.tsx\n\n\n\n// src/components/AnimateLayout/AnimateLayoutTrees.tsx\n\n\n// src/components/AnimateLayout/animation.ts\nfunction createAnimation(animation) {\n  const { shouldStackAnimate, transition, current, prevViewportBox, onComplete, prevParent } = animation;\n  const config = {\n    shouldStackAnimate,\n    transition,\n    current,\n    onComplete,\n    prevParent: prevParent ? prevParent : void 0\n  };\n  if (!shouldStackAnimate)\n    return config;\n  config.originBox = prevViewportBox;\n  return config;\n}\n\n// src/components/AnimateLayout/TreeContext.ts\n\nvar LayoutTreeContext = (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)({\n  promoteTree: () => false,\n  markTreeAsSafeToRemove: () => {\n  }\n});\n\n// src/components/AnimateLayout/AnimateLayoutTrees.tsx\nvar syncContextStub = {\n  register: () => {\n  },\n  remove: () => {\n  },\n  add: () => {\n  },\n  flush: () => {\n  },\n  syncUpdate: () => {\n  }\n};\nvar TREE_ROOT_ID = \"____treeroot\";\nvar AnimateLayoutTrees = class extends react__WEBPACK_IMPORTED_MODULE_0__.Component {\n  constructor() {\n    super(...arguments);\n    this.scheduled = false;\n    this.resetScheduled = false;\n    this.layoutIdConfig = new Map();\n    this.treeContext = {\n      promoteTree: (...args) => this.promoteTree(...args),\n      markTreeAsSafeToRemove: (tree) => this.markTreeAsSafeToRemove(tree)\n    };\n    this.syncContext = {\n      ...syncContextStub,\n      forceUpdate: () => {\n        this.syncContext = {\n          ...this.syncContext\n        };\n        this.forceUpdate();\n      }\n    };\n    this.batch = createBatcher();\n    this.stackCrossfaders = new Map([[TREE_ROOT_ID, createCrossfader()]]);\n  }\n  promoteTree(tree, shouldAnimate, transition, resets) {\n    var _a, _b, _c;\n    if (tree === this.lead)\n      return false;\n    const prevFollow = this.follow;\n    this.follow = this.lead;\n    this.lead = tree;\n    if (resets)\n      this.resetScheduled = true;\n    if (!shouldAnimate) {\n      this.startCrossfade(new Map([[TREE_ROOT_ID, {}]]), { type: false });\n      return false;\n    }\n    this.layoutIdConfig.clear();\n    const currentStyle = {};\n    for (const [layoutId, lead] of this.lead.children) {\n      const follow = (_a = this.follow) == null ? void 0 : _a.children.get(layoutId);\n      snapshotRotate(layoutId, lead, follow, currentStyle);\n      follow && resetRotate2(follow);\n      resetRotate2(lead);\n    }\n    this.lead.childrenToResetTransform.forEach((child) => child.resetTransform());\n    for (const [layoutId, lead] of this.lead.children) {\n      const follow = (_b = this.follow) == null ? void 0 : _b.children.get(layoutId);\n      follow && snapshotViewportBox(follow);\n      snapshotViewportBox(lead);\n      const prevViewportBox = (follow == null ? void 0 : follow.prevViewportBox) ? copyAxisBox2(follow == null ? void 0 : follow.prevViewportBox) : void 0;\n      const config = {\n        lead,\n        current: currentStyle[layoutId],\n        transition,\n        prevViewportBox,\n        shouldStackAnimate: follow ? true : false,\n        prevParent: follow == null ? void 0 : follow.getProjectionParent()\n      };\n      this.layoutIdConfig.set(layoutId, config);\n    }\n    if (prevFollow !== this.lead && prevFollow !== this.follow) {\n      (_c = prevFollow == null ? void 0 : prevFollow.rootChild) == null ? void 0 : _c.setVisibility(false);\n    }\n    this.scheduled = true;\n    return true;\n  }\n  markTreeAsSafeToRemove(tree) {\n    this.safeToRemoveTree = tree;\n  }\n  markTreeChildrenAsSafeToRemove(tree) {\n    var _a;\n    if (!tree)\n      return;\n    for (const [_, child] of tree.children) {\n      (_a = child.layoutSafeToRemove) == null ? void 0 : _a.call(child);\n    }\n  }\n  componentDidUpdate() {\n    if (this.scheduled)\n      this.startLayoutAnimation(this.resetScheduled);\n    if (this.safeToRemoveTree)\n      this.markTreeChildrenAsSafeToRemove(this.safeToRemoveTree);\n    this.safeToRemoveTree = void 0;\n    this.scheduled = false;\n    this.resetScheduled = false;\n  }\n  componentWillUnmount() {\n    this.stopCrossfadeAnimation();\n  }\n  startLayoutAnimation(shouldReset) {\n    const { lead, follow } = this;\n    const leadChildren = lead == null ? void 0 : lead.children;\n    const followChildren = follow == null ? void 0 : follow.children;\n    const toCrossfade = new Map();\n    const handler = {\n      layoutReady: (child) => {\n        const layoutId = child.getLayoutId();\n        if (layoutId === void 0)\n          return;\n        const config = this.layoutIdConfig.get(layoutId);\n        if (!config)\n          return child.notifyLayoutReady({ shouldStackAnimate: false });\n        const followChild = followChildren == null ? void 0 : followChildren.get(layoutId);\n        const leadChild = leadChildren == null ? void 0 : leadChildren.get(layoutId);\n        child.pointTo(leadChild != null ? leadChild : child);\n        const isLead = Boolean(leadChildren && leadChild === child);\n        if (isLead) {\n          if (followChild && leadChild)\n            toCrossfade.set(layoutId, config);\n          child.notifyLayoutReady(createAnimation({\n            ...config,\n            onComplete: () => {\n              var _a;\n              (_a = followChild == null ? void 0 : followChild.layoutSafeToRemove) == null ? void 0 : _a.call(followChild);\n            }\n          }));\n        }\n      }\n    };\n    if (lead && leadChildren) {\n      for (const [_, child] of leadChildren)\n        this.batch.add(child);\n      lead.layoutMayBeMutated = false;\n    }\n    if (!shouldReset && follow && followChildren) {\n      for (const [_, child] of followChildren)\n        this.batch.add(child);\n      follow.layoutMayBeMutated = true;\n    }\n    this.batch.flush(handler);\n    this.startCrossfade(toCrossfade);\n  }\n  startCrossfade(toCrossfade, transition) {\n    var _a, _b, _c, _d, _e;\n    if (!((_a = this.lead) == null ? void 0 : _a.rootChild))\n      return;\n    const isExit = (_b = this.follow) == null ? void 0 : _b.isExiting;\n    let rootTransition = transition;\n    const leadRoot = (_c = this.lead) == null ? void 0 : _c.rootChild;\n    const followRoot = (_d = this.follow) == null ? void 0 : _d.rootChild;\n    leadRoot == null ? void 0 : leadRoot.setVisibility(true);\n    followRoot == null ? void 0 : followRoot.setVisibility(true);\n    const createCrossfadeAnimation = (config, id) => {\n      var _a2, _b2;\n      const followChild = (_a2 = this.follow) == null ? void 0 : _a2.children.get(id);\n      const leadChild = (_b2 = this.lead) == null ? void 0 : _b2.children.get(id);\n      if (leadChild === leadRoot || followChild === followRoot) {\n        if (leadChild === leadRoot)\n          rootTransition = config.transition;\n        return;\n      }\n      if (!this.stackCrossfaders.has(id)) {\n        this.stackCrossfaders.set(id, createCrossfader());\n      }\n      const crossfader = this.stackCrossfaders.get(id);\n      crossfader.setOptions({\n        lead: leadChild,\n        follow: followChild\n      });\n      leadChild == null ? void 0 : leadChild.setCrossfader(crossfader);\n      followChild == null ? void 0 : followChild.setCrossfader(crossfader);\n      crossfader.toLead(config == null ? void 0 : config.transition);\n    };\n    toCrossfade.forEach(createCrossfadeAnimation);\n    if (!leadRoot || !followRoot)\n      return;\n    const rootCrossfader = this.stackCrossfaders.get(TREE_ROOT_ID);\n    rootCrossfader.setOptions({\n      lead: leadRoot,\n      follow: followRoot,\n      preserveFollowOpacity: !isExit,\n      crossfadeOpacity: true\n    });\n    leadRoot.setCrossfader(rootCrossfader);\n    followRoot.setCrossfader(rootCrossfader);\n    const leadRootId = leadRoot.getLayoutId();\n    const leadTransition = leadRootId ? ((_e = this.layoutIdConfig.get(leadRootId)) == null ? void 0 : _e.transition) || rootTransition : rootTransition;\n    rootCrossfader.toLead(leadTransition);\n  }\n  stopCrossfadeAnimation() {\n    this.stackCrossfaders.forEach((crossfader) => crossfader.stop());\n  }\n  render() {\n    return /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(LayoutTreeContext.Provider, {\n      value: this.treeContext\n    }, /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(SharedLayoutContext.Provider, {\n      value: this.syncContext\n    }, this.props.children));\n  }\n};\nfunction copyAxisBox2(box) {\n  if (!box)\n    return void 0;\n  return {\n    x: { ...box.x },\n    y: { ...box.y }\n  };\n}\nfunction snapshotRotate(layoutId, lead, follow, styleMap) {\n  const followRotate = follow == null ? void 0 : follow.getValue(\"rotate\");\n  const leadRotate = lead.getValue(\"rotate\");\n  styleMap[layoutId] = { rotate: (leadRotate == null ? void 0 : leadRotate.isAnimating()) ? leadRotate.get() : (followRotate == null ? void 0 : followRotate.get()) || 0 };\n}\nvar transformAxes2 = [\"\", \"X\", \"Y\", \"Z\"];\nfunction resetRotate2(child) {\n  let hasRotate = false;\n  const resetValues = {};\n  transformAxes2.forEach((axis) => {\n    const key6 = \"rotate\" + axis;\n    if (!child.hasValue(key6))\n      return;\n    hasRotate = true;\n    resetValues[key6] = child.getStaticValue(key6);\n    child.setStaticValue(key6, 0);\n  });\n  if (!hasRotate)\n    return;\n  child.syncRender();\n  for (const key6 in resetValues) {\n    child.setStaticValue(key6, resetValues[key6]);\n  }\n  child.scheduleRender();\n}\n\n// src/components/AnimateLayout/SharedLayoutTree.tsx\n\nvar LayoutTree = class extends react__WEBPACK_IMPORTED_MODULE_0__.Component {\n  constructor() {\n    super(...arguments);\n    this.children = new Map();\n    this.childrenToResetTransform = new Set();\n    this.layoutMayBeMutated = false;\n    this.syncContext = {\n      add: () => {\n      },\n      flush: () => {\n      },\n      syncUpdate: (force) => {\n      },\n      forceUpdate: () => {\n        this.syncContext = { ...this.syncContext };\n        this.forceUpdate();\n      },\n      register: (child) => this.addChild(child),\n      remove: (child) => this.removeChild(child)\n    };\n  }\n  addChild(child) {\n    const layoutId = child.getLayoutId();\n    if (layoutId) {\n      this.children.set(layoutId, child);\n      this.setRootChild(child);\n    } else if (child.shouldResetTransform()) {\n      this.childrenToResetTransform.add(child);\n    }\n  }\n  setRootChild(child) {\n    if (!this.rootChild)\n      return this.rootChild = child;\n    this.rootChild = this.rootChild.depth < child.depth ? this.rootChild : child;\n  }\n  removeChild(child) {\n    const layoutId = child.getLayoutId();\n    if (layoutId) {\n      this.children.delete(layoutId);\n    } else {\n      this.childrenToResetTransform.delete(child);\n    }\n  }\n  componentDidMount() {\n    const { isLead, animatesLayout, transition } = this.props;\n    if (isLead !== void 0 && isLead)\n      this.props.treeContext.promoteTree(this, !!animatesLayout, transition);\n  }\n  shouldComponentUpdate({ isLead, isExiting, animatesLayout, transition }) {\n    this.isExiting = isExiting;\n    if (this.props.isLead === void 0)\n      return true;\n    const hasBecomeLead = !this.props.isLead && isLead;\n    const hasExitBeenCancelled = this.props.isExiting && !isExiting;\n    const shouldPromote = hasBecomeLead || hasExitBeenCancelled;\n    if (this.layoutMayBeMutated && shouldPromote && !animatesLayout) {\n      return this.props.treeContext.promoteTree(this, true, { type: false }, true);\n    } else if (shouldPromote) {\n      return this.props.treeContext.promoteTree(this, !!animatesLayout, transition);\n    } else if (isExiting && !animatesLayout) {\n      this.props.treeContext.markTreeAsSafeToRemove(this);\n    }\n    return false;\n  }\n  render() {\n    return /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(FramerTreeLayoutContext.Provider, {\n      value: this.syncContext\n    }, this.props.children);\n  }\n};\nvar SharedLayoutTree = (props) => {\n  const treeContext = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(LayoutTreeContext);\n  return /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(LayoutTree, {\n    ...props,\n    treeContext\n  });\n};\n\n// src/components/NavigationTargetContext.tsx\n\n\n\n// src/components/utils/useConstant.ts\n\nfunction useConstant2(init) {\n  const ref = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n  if (ref.current === null) {\n    ref.current = init();\n  }\n  return ref.current;\n}\n\n// src/components/utils/useMap.ts\nfunction newMap() {\n  return new Map();\n}\nfunction useMap() {\n  return useConstant2(newMap);\n}\n\n// src/components/NavigationTargetContext.tsx\nvar NavigationTargetContext = (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)({ register: () => {\n}, deregister: () => {\n} });\nvar NavigationTargetWrapper = ({ isCurrent, isOverlayed, children }) => {\n  const callbacks2 = useMap();\n  const register = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((fn) => {\n    if (callbacks2.has(fn)) {\n      console.warn(\"NavigationTargetWrapper: already registered\");\n      return;\n    }\n    callbacks2.set(fn, void 0);\n  }, [callbacks2]);\n  const deregister = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((fn) => {\n    const cleanup = callbacks2.get(fn);\n    cleanup == null ? void 0 : cleanup();\n    callbacks2.delete(fn);\n  }, [callbacks2]);\n  const value = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)({ register, deregister }).current;\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    callbacks2.forEach((_, cb2) => {\n      const newCleanup = cb2(isCurrent, isOverlayed);\n      callbacks2.set(cb2, isFunction(newCleanup) ? newCleanup : void 0);\n    });\n    return () => {\n      callbacks2.forEach((cleanup, cb2) => {\n        if (!cleanup)\n          return;\n        cleanup();\n        callbacks2.set(cb2, void 0);\n      });\n    };\n  }, [isCurrent, isOverlayed, callbacks2]);\n  return /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(NavigationTargetContext.Provider, {\n    value\n  }, children);\n};\nfunction useOnCurrentTargetChange(callback, deps = []) {\n  const { register, deregister } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(NavigationTargetContext);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (!callback)\n      return;\n    register(callback);\n    return () => deregister(callback);\n  }, [register, deregister, ...deps]);\n}\n\n// src/components/NavigationContainer.tsx\nvar NavigationContainer = (0,react__WEBPACK_IMPORTED_MODULE_0__.memo)(function NavigationContainer2({\n  isLayeredContainer,\n  isCurrent,\n  isPrevious,\n  isOverlayed = false,\n  visible,\n  transitionProps,\n  children,\n  backdropColor,\n  onTapBackdrop,\n  backfaceVisible,\n  exitBackfaceVisible,\n  animation,\n  exitAnimation,\n  instant,\n  initialProps,\n  exitProps,\n  position = { top: 0, right: 0, bottom: 0, left: 0 },\n  withMagicMotion,\n  index,\n  areMagicMotionLayersPresent,\n  id\n}) {\n  const animate4 = useAnimation();\n  const presence = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(PresenceContext);\n  const { persistLayoutIdCache } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(LayoutIdContext);\n  const previousState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)({\n    wasCurrent: void 0,\n    wasPrevious: false,\n    wasBeingRemoved: false,\n    wasReset: true,\n    origins: getOriginProps({}, initialProps, transitionProps)\n  });\n  const isBeingRemoved = presence !== null && !presence.isPresent;\n  if (isCurrent && previousState.current.wasCurrent === void 0)\n    persistLayoutIdCache();\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (isLayeredContainer || !animate4)\n      return;\n    if (isBeingRemoved) {\n      previousState.current = {\n        ...previousState.current,\n        wasBeingRemoved: isBeingRemoved\n      };\n      return;\n    }\n    const { wasPrevious, wasCurrent } = previousState.current;\n    const shouldAnimateIn = isCurrent && !wasCurrent || !isBeingRemoved && previousState.current.wasBeingRemoved && isCurrent;\n    const shouldAnimateOut = isPrevious && !wasPrevious;\n    const origins = getOriginProps(previousState.current.origins, initialProps, transitionProps);\n    let wasReset = previousState.current.wasReset;\n    if (shouldAnimateIn || shouldAnimateOut) {\n      animate4.stop();\n      animate4.start({\n        zIndex: index,\n        ...origins,\n        ...transitionProps\n      });\n      wasReset = false;\n    } else if (wasReset === false) {\n      animate4.stop();\n      animate4.set({ zIndex: index, ...allAnimatableProperties, opacity: 0 });\n      wasReset = true;\n    }\n    previousState.current = {\n      wasCurrent: !!isCurrent,\n      wasPrevious: !!isPrevious,\n      wasBeingRemoved: false,\n      wasReset,\n      origins\n    };\n  }, [isCurrent, isPrevious, isBeingRemoved]);\n  const transition = instant ? { type: false } : { ...animation, velocity: 0 };\n  const exitTransition = instant ? { type: false } : exitAnimation || animation;\n  const layout = { ...position };\n  if (layout.left === void 0 || layout.right === void 0)\n    layout.width = \"auto\";\n  if (layout.top === void 0 || layout.bottom === void 0)\n    layout.height = \"auto\";\n  const needsPerspective = contains3Dprops(transitionProps) || contains3Dprops(initialProps);\n  const perspective = needsPerspective && (isLayeredContainer || isCurrent || isPrevious) ? 1200 : void 0;\n  const identity = { ...allAnimatableProperties, ...previousState.current.origins };\n  const animations2 = isLayeredContainer ? {\n    initial: { ...identity, ...initialProps },\n    animate: { ...identity, ...transitionProps, transition },\n    exit: { ...identity, ...exitProps, transition: animate4 }\n  } : {\n    animate: animate4,\n    exit: { ...identity, ...exitProps, transition: exitTransition }\n  };\n  const isPresent2 = isBeingRemoved || areMagicMotionLayersPresent === false ? false : true;\n  const isCurrentTarget = !!isCurrent && isPresent2;\n  return /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(FrameWithMotion, {\n    width: \"100%\",\n    height: \"100%\",\n    style: {\n      position: \"absolute\",\n      transformStyle: \"flat\",\n      backgroundColor: \"transparent\",\n      overflow: \"hidden\",\n      zIndex: isLayeredContainer || isBeingRemoved || isCurrent && withMagicMotion ? index : void 0,\n      pointerEvents: \"none\",\n      visibility: visible ? \"visible\" : \"hidden\",\n      perspective\n    }\n  }, isLayeredContainer && /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(FrameWithMotion, {\n    width: \"100%\",\n    height: \"100%\",\n    transition: animation,\n    initial: { opacity: instant && visible ? 1 : 0 },\n    animate: { opacity: 1 },\n    exit: { opacity: 0 },\n    backgroundColor: backdropColor ? backdropColor : \"transparent\",\n    onTap: !isBeingRemoved ? onTapBackdrop : void 0\n  }), /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(FrameWithMotion, {\n    ...layout,\n    ...animations2,\n    transition: {\n      default: transition,\n      originX: { type: false },\n      originY: { type: false },\n      originZ: { type: false }\n    },\n    backgroundColor: \"transparent\",\n    backfaceVisible: !isBeingRemoved ? backfaceVisible : exitBackfaceVisible,\n    \"data-framer-component-type\": \"NavigationContainer\",\n    \"data-framer-is-current-navigation-target\": !!isCurrent,\n    style: {\n      pointerEvents: \"initial\",\n      opacity: isLayeredContainer || isCurrent && withMagicMotion ? 1 : 0\n    },\n    \"data-is-present\": isPresent2 ? void 0 : false\n  }, /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(NavigationContainerContext.Provider, {\n    value: isCurrentTarget\n  }, /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(NavigationTargetWrapper, {\n    isCurrent: isCurrentTarget,\n    isOverlayed\n  }, /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(SharedLayoutTree, {\n    isLead: isCurrent,\n    animatesLayout: !!withMagicMotion,\n    transition,\n    isExiting: !isPresent2,\n    id\n  }, children)))));\n}, shouldUsePreviousValue);\nfunction shouldUsePreviousValue(prevProps, nextProps) {\n  if (nextProps.isCurrent === void 0)\n    return false;\n  if (prevProps.isCurrent !== nextProps.isCurrent)\n    return false;\n  if (prevProps.isPrevious !== nextProps.isPrevious)\n    return false;\n  if (nextProps.isCurrent && prevProps.isOverlayed !== nextProps.isOverlayed)\n    return false;\n  return true;\n}\nfunction getOriginProps(currentOriginProps, initialProps, transitionProps) {\n  const result = { ...currentOriginProps };\n  if (initialProps) {\n    if (isFiniteNumber(initialProps.originX))\n      result.originX = initialProps.originX;\n    if (isFiniteNumber(initialProps.originY))\n      result.originY = initialProps.originY;\n    if (isFiniteNumber(initialProps.originZ))\n      result.originZ = initialProps.originZ;\n  }\n  if (transitionProps) {\n    if (isFiniteNumber(transitionProps.originX))\n      result.originX = transitionProps.originX;\n    if (isFiniteNumber(transitionProps.originY))\n      result.originY = transitionProps.originY;\n    if (isFiniteNumber(transitionProps.originZ))\n      result.originZ = transitionProps.originZ;\n  }\n  return result;\n}\nfunction contains3Dprops(containerProps) {\n  var _a, _b, _c;\n  if (!containerProps)\n    return false;\n  const containsProps = \"rotateX\" in containerProps || \"rotateY\" in containerProps || \"z\" in containerProps;\n  if (!containsProps)\n    return false;\n  const toPropsContain3d = containerProps.rotateX !== 0 || containerProps.rotateY !== 0 || containerProps.z !== 0;\n  const fromPropsContain3d = ((_a = containerProps == null ? void 0 : containerProps.transition) == null ? void 0 : _a.rotateX.from) !== 0 || ((_b = containerProps == null ? void 0 : containerProps.transition) == null ? void 0 : _b.rotateY.from) !== 0 || ((_c = containerProps == null ? void 0 : containerProps.transition) == null ? void 0 : _c.z.from) !== 0;\n  return toPropsContain3d || fromPropsContain3d;\n}\nvar allAnimatableProperties = {\n  x: 0,\n  y: 0,\n  z: 0,\n  rotate: 0,\n  rotateX: 0,\n  rotateY: 0,\n  rotateZ: 0,\n  scale: 1,\n  scaleX: 1,\n  scaleY: 1,\n  scaleZ: 1,\n  skew: 0,\n  skewX: 0,\n  skewY: 0,\n  originX: 0.5,\n  originY: 0.5,\n  originZ: 0,\n  opacity: 1\n};\n\n// src/components/NavigatorMock.tsx\nvar NavigatorMock = class {\n  constructor() {\n    this.warning = () => {\n      warnOnce(\"The Navigator API is only available inside of Framer: https://www.framer.com/\");\n    };\n    this.goBack = () => this.warning();\n    this.instant = () => this.warning();\n    this.fade = () => this.warning();\n    this.push = () => this.warning();\n    this.modal = () => this.warning();\n    this.overlay = () => this.warning();\n    this.flip = () => this.warning();\n    this.customTransition = () => this.warning();\n    this.magicMotion = () => this.warning();\n  }\n};\nvar navigatorMock = new NavigatorMock();\n\n// src/components/reduceNavigationStateForAction.ts\nvar defaultState = () => ({\n  current: -1,\n  previous: -1,\n  currentOverlay: -1,\n  previousOverlay: -1,\n  visualIndex: 0,\n  overlayItemId: 0,\n  historyItemId: 0,\n  history: [],\n  overlayStack: [],\n  containers: {},\n  containerIndex: {},\n  containerVisualIndex: {},\n  containerIsRemoved: {},\n  transitionForContainer: {},\n  previousTransition: null\n});\nfunction reduceNavigationStateForAction(state, action) {\n  switch (action.type) {\n    case \"addOverlay\":\n      return addOverlay(state, action.transition, action.component);\n    case \"removeOverlay\":\n      return removeOverlay(state);\n    case \"add\":\n      return add(state, action.key, action.transition, action.component);\n    case \"remove\":\n      return remove(state);\n    case \"update\":\n      return updateComponent(state, action.key, action.component);\n    default:\n      return;\n  }\n}\nfunction updateComponent(currentState, key6, component) {\n  return {\n    ...currentState,\n    containers: {\n      ...currentState.containers,\n      [key6]: component\n    }\n  };\n}\nfunction addOverlay(currentState, transition, component) {\n  const currentOverlay = currentState.overlayStack[currentState.currentOverlay];\n  if (currentOverlay && currentOverlay.component === component)\n    return;\n  const overlayItemId = currentState.overlayItemId + 1;\n  const overlayStack = [\n    ...currentState.overlayStack,\n    {\n      key: `stack-${overlayItemId}`,\n      component,\n      transition\n    }\n  ];\n  return {\n    ...currentState,\n    overlayStack,\n    overlayItemId,\n    currentOverlay: Math.max(0, Math.min(currentState.currentOverlay + 1, overlayStack.length - 1)),\n    previousOverlay: currentState.currentOverlay\n  };\n}\nfunction removeOverlay(currentState) {\n  return {\n    ...currentState,\n    overlayStack: [],\n    currentOverlay: -1,\n    previousOverlay: currentState.currentOverlay\n  };\n}\nfunction add(currentState, key6, transition, component) {\n  if (!currentState.containers[key6])\n    currentState.containers[key6] = component;\n  currentState.history = currentState.history.slice(0, currentState.current + 1);\n  currentState.visualIndex = Math.max(currentState.history.length, 0);\n  const currentItem = currentState.history[currentState.history.length - 1];\n  const isCurrentScreen = currentItem && currentItem.key === key6;\n  currentState.overlayStack = [];\n  if (isCurrentScreen && currentState.currentOverlay > -1) {\n    return {\n      ...currentState,\n      currentOverlay: -1,\n      previousOverlay: currentState.currentOverlay\n    };\n  }\n  if (isCurrentScreen)\n    return;\n  const shouldMoveForward = (currentItem == null ? void 0 : currentItem.key) && transition.withMagicMotion ? isNextTargetForward(key6, currentState.containerVisualIndex[key6], currentState.containerIsRemoved[key6], currentState.history) : true;\n  currentState.history.push({\n    key: key6,\n    transition,\n    visualIndex: shouldMoveForward ? Math.max(currentState.visualIndex, 0) : currentState.containerVisualIndex[key6]\n  });\n  const current = currentState.current + 1;\n  const previous = currentState.current;\n  for (const containerKey in currentState.containerIndex) {\n    if (currentState.containerIndex[containerKey] === current) {\n      currentState.containerIndex[containerKey] = findLatestHistoryIndex(containerKey, currentState.history);\n    }\n  }\n  currentState.containerIndex[key6] = current;\n  const { containerVisualIndex, containerIsRemoved } = magicMotionPropsForAdd(currentState, key6, currentItem == null ? void 0 : currentItem.key, shouldMoveForward);\n  const transitionForContainer = updateTransitions(current, previous, currentState.history, currentState.containerIndex, currentState.transitionForContainer);\n  return {\n    ...currentState,\n    current,\n    previous,\n    containerVisualIndex,\n    containerIsRemoved,\n    transitionForContainer,\n    previousTransition: null,\n    currentOverlay: -1,\n    historyItemId: currentState.historyItemId + 1,\n    previousOverlay: currentState.currentOverlay\n  };\n}\nfunction remove(currentState) {\n  const history = [...currentState.history.slice(0, currentState.current + 1)];\n  if (history.length === 1)\n    return;\n  const currentItem = history.pop();\n  if (!currentItem)\n    return;\n  const target = history[history.length - 1];\n  currentState.containerIndex[target.key] = history.length - 1;\n  const shouldRemoveContainer = history.every((item) => item.key !== currentItem.key);\n  if (shouldRemoveContainer) {\n    delete currentState.containers[currentItem.key];\n  }\n  const current = currentState.current - 1;\n  const previous = currentState.current;\n  const { containerIsRemoved, containerVisualIndex, previousTransition, visualIndex } = magicMotionPropsForRemove(currentState, target, currentItem);\n  const transitionForContainer = updateTransitions(current, previous, currentState.history, currentState.containerIndex, currentState.transitionForContainer);\n  return {\n    ...currentState,\n    current,\n    previous,\n    containerIsRemoved,\n    containerVisualIndex,\n    previousTransition,\n    visualIndex,\n    transitionForContainer\n  };\n}\nfunction magicMotionPropsForAdd(currentState, nextKey, currentKey, shouldMoveForward) {\n  const update = {\n    containerVisualIndex: { ...currentState.containerVisualIndex },\n    containerIsRemoved: { ...currentState.containerIsRemoved }\n  };\n  if (shouldMoveForward) {\n    update.containerVisualIndex[nextKey] = currentState.history.length - 1;\n    update.containerIsRemoved[nextKey] = false;\n  } else {\n    const nextVisualIndex = currentState.containerVisualIndex[nextKey];\n    for (const key6 in currentState.containerVisualIndex) {\n      if (currentState.containerVisualIndex[key6] > nextVisualIndex) {\n        update.containerIsRemoved[key6] = true;\n      }\n    }\n  }\n  return update;\n}\nfunction magicMotionPropsForRemove(currentState, target, currentItem) {\n  const { history } = globalThis;\n  const validTargets = [target.key, currentItem.key];\n  const nextValidTarget = history[history.length - 2];\n  const previousTransition = currentState.previousTransition === null ? null : { ...currentState.previousTransition };\n  const update = {\n    containerIsRemoved: { ...currentState.containerIsRemoved },\n    containerVisualIndex: { ...currentState.containerVisualIndex },\n    previousTransition,\n    visualIndex: currentState.visualIndex\n  };\n  if (nextValidTarget)\n    validTargets.push(nextValidTarget.key);\n  const shouldRemoveLastKey = currentState.containerVisualIndex[target.key] <= currentState.containerVisualIndex[currentItem.key] || target.visualIndex !== void 0 && target.visualIndex < history.length - 1;\n  const nextIndex = target.visualIndex;\n  if (shouldRemoveLastKey) {\n    update.containerIsRemoved[currentItem.key] = true;\n    update.containerVisualIndex[target.key] = nextIndex !== void 0 ? nextIndex : history.length - 1;\n  } else {\n    update.visualIndex = currentState.visualIndex + 1;\n    update.containerVisualIndex[target.key] = currentState.visualIndex + 1;\n  }\n  if (currentItem.transition.withMagicMotion)\n    update.previousTransition = currentItem.transition || null;\n  currentState.containerIsRemoved[target.key] = false;\n  return update;\n}\nfunction findLatestHistoryIndex(key6, history) {\n  for (let index = history.length; index > history.length; index--) {\n    if (history[index].key === key6)\n      return index;\n  }\n  return -1;\n}\nfunction updateTransitions(current, previous, history, containerIndex, transitionForContainer) {\n  const transitions = { ...transitionForContainer };\n  Object.keys(containerIndex).forEach((key6) => {\n    const transition = transitionForScreen(containerIndex[key6], { current, previous, history });\n    if (transition) {\n      transitions[key6] = transition;\n    }\n  });\n  return transitions;\n}\nfunction isNextTargetForward(key6, index, removed, history) {\n  if (removed)\n    return true;\n  if (index === 0)\n    return false;\n  const forwardHistory = history.slice(index, history.length);\n  if (forwardHistory.findIndex((item) => item.key === key6) > -1)\n    return true;\n  const backwardsHistory = history.slice(0, index - 1);\n  if (backwardsHistory.findIndex((item) => item.key === key6) > -1)\n    return false;\n  return true;\n}\nfunction transitionForScreen(screenIndex, stackState) {\n  const { current, previous, history } = stackState;\n  if (screenIndex !== current && screenIndex !== previous)\n    return void 0;\n  if (screenIndex === current && current > previous) {\n    const item = history[screenIndex];\n    return sequence(\"enter\", item.transition.enter, item.transition.animation);\n  }\n  if (screenIndex === previous && current > previous) {\n    const item = history[screenIndex + 1];\n    return sequence(\"exit\", item.transition.exit, item.transition.animation);\n  }\n  if (screenIndex === current && current < previous) {\n    const item = history[screenIndex + 1];\n    return sequence(\"enter\", item.transition.exit, item.transition.animation);\n  }\n  if (screenIndex === previous && current < previous) {\n    const item = history[screenIndex];\n    return sequence(\"exit\", item.transition.enter, item.transition.animation);\n  }\n}\nvar allAnimatableKeys = Object.keys(allAnimatableProperties);\nfunction sequence(direction, transition, animation) {\n  const value = {};\n  const from = {};\n  allAnimatableKeys.forEach((property) => {\n    value[property] = allAnimatableProperties[property];\n    from[property] = {\n      ...animation,\n      from: allAnimatableProperties[property]\n    };\n  });\n  if (transition) {\n    Object.keys(transition).forEach((property) => {\n      if (transition[property] === void 0)\n        return;\n      const transitionTo = transition[property];\n      const transitionFrom = typeof transition[property] === \"string\" ? `${allAnimatableProperties[property]}%` : allAnimatableProperties[property];\n      value[property] = direction === \"enter\" ? transitionFrom : transitionTo;\n      from[property] = {\n        ...animation,\n        from: direction === \"enter\" ? transitionTo : transitionFrom,\n        velocity: 0\n      };\n    });\n  }\n  return {\n    ...value,\n    transition: {\n      ...from\n    }\n  };\n}\n\n// src/components/Navigation.tsx\nvar NavigationContext = (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(navigatorMock);\nvar NavigationConsumer = NavigationContext.Consumer;\nvar NavigationCallbackContext = (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(void 0);\nvar NavigationCallbackProvider = NavigationCallbackContext.Provider;\nvar Navigation = class extends react__WEBPACK_IMPORTED_MODULE_0__.Component {\n  constructor() {\n    super(...arguments);\n    this.lastEventTimeStamp = null;\n    this.state = defaultState();\n    this.navigationAction = (action) => {\n      var _a;\n      if (!this.props.enabled && this.state.history.length > 0)\n        return;\n      const newState = reduceNavigationStateForAction(this.state, action);\n      if (newState) {\n        this.setState(newState);\n        const currentItem = newState.history[newState.current];\n        (_a = this.context) == null ? void 0 : _a.call(this, currentItem.key);\n      }\n    };\n    this.goBack = () => {\n      var _a;\n      if (this.isSameEventTransition())\n        return;\n      this.lastEventTimeStamp = ((_a = globalThis.event) == null ? void 0 : _a.timeStamp) || null;\n      if (this.state.currentOverlay !== -1)\n        return this.navigationAction({ type: \"removeOverlay\" });\n      return this.navigationAction({ type: \"remove\" });\n    };\n  }\n  componentDidMount() {\n    if (this.state.history.length === 0) {\n      this.transition(this.props.children, TransitionDefaults.Instant);\n    }\n    injectComponentCSSRules();\n  }\n  UNSAFE_componentWillReceiveProps(props) {\n    var _a;\n    const component = props[\"children\"];\n    if (!isReactChild(component) || !isReactElement(component))\n      return;\n    const key6 = (_a = component.key) == null ? void 0 : _a.toString();\n    if (!key6)\n      return;\n    if (this.state.history.length === 0) {\n      this.transition(component, TransitionDefaults.Instant);\n    } else {\n      this.navigationAction({ type: \"update\", key: key6, component });\n    }\n  }\n  getStackState(options) {\n    const { current, previous, currentOverlay, previousOverlay } = this.state;\n    if (options.overCurrentContext) {\n      return {\n        current: currentOverlay,\n        previous: previousOverlay,\n        history: this.state.overlayStack\n      };\n    }\n    return {\n      current,\n      previous,\n      history: this.state.history\n    };\n  }\n  isSameEventTransition() {\n    if (!globalThis.event)\n      return false;\n    return this.lastEventTimeStamp === globalThis.event.timeStamp;\n  }\n  transition(component, transitionTraits, transitionOptions) {\n    var _a, _b;\n    if (this.isSameEventTransition())\n      return;\n    this.lastEventTimeStamp = ((_a = globalThis.event) == null ? void 0 : _a.timeStamp) || null;\n    if (!component || !isReactChild(component) || !isReactElement(component))\n      return;\n    const transition = { ...transitionTraits, ...transitionOptions };\n    const overCurrentContext = !!transition.overCurrentContext;\n    if (overCurrentContext)\n      return this.navigationAction({ type: \"addOverlay\", transition, component });\n    const key6 = ((_b = component == null ? void 0 : component.key) == null ? void 0 : _b.toString()) || `stack-${this.state.historyItemId + 1}`;\n    this.navigationAction({ type: \"add\", key: key6, transition, component });\n  }\n  instant(component) {\n    this.transition(component, TransitionDefaults.Instant);\n  }\n  fade(component, options) {\n    this.transition(component, TransitionDefaults.Fade, options);\n  }\n  push(component, options) {\n    this.transition(component, pushTransition(options), options);\n  }\n  modal(component, options) {\n    this.transition(component, TransitionDefaults.Modal, options);\n  }\n  overlay(component, options) {\n    this.transition(component, overlayTransition(options), options);\n  }\n  flip(component, options) {\n    this.transition(component, flipTransition(options), options);\n  }\n  magicMotion(component, options) {\n    this.transition(component, TransitionDefaults.MagicMotion, options);\n  }\n  customTransition(component, transition) {\n    this.transition(component, transition);\n  }\n  render() {\n    const stackState = this.getStackState({ overCurrentContext: false });\n    const overlayStackState = this.getStackState({ overCurrentContext: true });\n    const activeOverlay = activeOverlayItem(overlayStackState);\n    const isOverlayVisible = overlayStackState.current > -1;\n    return /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(FrameWithMotion, {\n      top: 0,\n      left: 0,\n      width: \"100%\",\n      height: \"100%\",\n      position: \"relative\",\n      style: { overflow: \"hidden\", backgroundColor: \"unset\", ...this.props.style }\n    }, /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(NavigationContext.Provider, {\n      value: this\n    }, /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(NavigationContainer, {\n      isLayeredContainer: true,\n      position: void 0,\n      initialProps: {},\n      instant: false,\n      transitionProps: transitionPropsForStackWrapper(activeOverlay),\n      animation: animationForStackWrapper(activeOverlay),\n      backfaceVisible: backfaceVisibleForStackWrapper(activeOverlay),\n      visible: true,\n      backdropColor: void 0,\n      onTapBackdrop: void 0,\n      index: 0\n    }, /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(LayoutIdProvider, null, /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(AnimateLayoutTrees, null, /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(AnimatePresence, {\n      presenceAffectsLayout: false\n    }, Object.keys(this.state.containers).map((key6) => {\n      var _a, _b, _c, _d, _e;\n      const component = this.state.containers[key6];\n      const index = this.state.containerIndex[key6];\n      const visualIndex = this.state.containerVisualIndex[key6];\n      const removed = this.state.containerIsRemoved[key6];\n      const historyItem = this.state.history[index];\n      const transitionProps = this.state.transitionForContainer[key6];\n      const isCurrent = index === this.state.current;\n      const isPrevious = index === this.state.previous;\n      const areMagicMotionLayersPresent = isCurrent ? false : removed;\n      const withMagicMotion = ((_a = historyItem == null ? void 0 : historyItem.transition) == null ? void 0 : _a.withMagicMotion) || isCurrent && !!this.state.previousTransition;\n      return /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(NavigationContainer, {\n        key: key6,\n        id: key6,\n        index: visualIndex,\n        isCurrent,\n        isPrevious,\n        isOverlayed: isOverlayVisible,\n        visible: isCurrent || isPrevious,\n        position: (_b = historyItem == null ? void 0 : historyItem.transition) == null ? void 0 : _b.position,\n        instant: isInstantContainerTransition(index, stackState),\n        transitionProps,\n        animation: animationPropsForContainer(index, stackState),\n        backfaceVisible: getBackfaceVisibleForScreen(index, stackState),\n        exitAnimation: (_c = historyItem == null ? void 0 : historyItem.transition) == null ? void 0 : _c.animation,\n        exitBackfaceVisible: (_d = historyItem == null ? void 0 : historyItem.transition) == null ? void 0 : _d.backfaceVisible,\n        exitProps: (_e = historyItem == null ? void 0 : historyItem.transition) == null ? void 0 : _e.enter,\n        withMagicMotion,\n        areMagicMotionLayersPresent: areMagicMotionLayersPresent ? false : void 0\n      }, /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Suspense, {\n        fallback: \"Loading...\"\n      }, containerContent({\n        component,\n        transition: historyItem == null ? void 0 : historyItem.transition\n      })));\n    }))))), /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(AnimatePresence, null, this.state.overlayStack.map((item, stackIndex) => {\n      return /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(NavigationContainer, {\n        isLayeredContainer: true,\n        key: item.key,\n        isCurrent: stackIndex === this.state.currentOverlay,\n        position: item.transition.position,\n        initialProps: initialPropsForOverlay(stackIndex, overlayStackState),\n        transitionProps: transitionPropsForOverlay(stackIndex, overlayStackState),\n        instant: isInstantContainerTransition(stackIndex, overlayStackState, true),\n        animation: animationPropsForContainer(stackIndex, overlayStackState),\n        exitProps: item.transition.enter,\n        visible: containerIsVisible(stackIndex, overlayStackState),\n        backdropColor: backdropColorForTransition(item.transition),\n        backfaceVisible: getBackfaceVisibleForOverlay(stackIndex, overlayStackState),\n        onTapBackdrop: backdropTapAction(item.transition, this.goBack),\n        index: this.state.current + 1 + stackIndex\n      }, containerContent({ component: item.component, transition: item.transition }));\n    }))));\n  }\n};\nNavigation.defaultProps = {\n  enabled: true\n};\nNavigation.contextType = NavigationCallbackContext;\nvar animationDefault = {\n  stiffness: 500,\n  damping: 50,\n  restDelta: 1,\n  type: \"spring\"\n};\nfunction activeOverlayItem(overlayStack) {\n  let currentOverlayItem;\n  let previousOverlayItem;\n  if (overlayStack.current !== -1) {\n    currentOverlayItem = overlayStack.history[overlayStack.current];\n  } else {\n    previousOverlayItem = overlayStack.history[overlayStack.previous];\n  }\n  return { currentOverlayItem, previousOverlayItem };\n}\nfunction transitionPropsForStackWrapper({ currentOverlayItem }) {\n  return currentOverlayItem && currentOverlayItem.transition.exit;\n}\nfunction animationForStackWrapper({ currentOverlayItem, previousOverlayItem }) {\n  if (currentOverlayItem && currentOverlayItem.transition.animation) {\n    return currentOverlayItem.transition.animation;\n  }\n  if (previousOverlayItem && previousOverlayItem.transition.animation) {\n    return previousOverlayItem.transition.animation;\n  }\n  return animationDefault;\n}\nfunction backfaceVisibleForStackWrapper({ currentOverlayItem, previousOverlayItem }) {\n  if (currentOverlayItem)\n    return currentOverlayItem.transition.backfaceVisible;\n  return previousOverlayItem && previousOverlayItem.transition.backfaceVisible;\n}\nfunction backdropColorForTransition(transition) {\n  if (transition.backdropColor)\n    return transition.backdropColor;\n  if (transition.overCurrentContext)\n    return \"rgba(4,4,15,.4)\";\n  return void 0;\n}\nfunction getBackfaceVisibleForOverlay(containerIndex, stackState) {\n  const { current, history } = stackState;\n  if (containerIndex === current) {\n    const navigationItem = history[containerIndex];\n    if (navigationItem && navigationItem.transition) {\n      return navigationItem.transition.backfaceVisible;\n    }\n    return true;\n  } else if (containerIndex < current) {\n    const navigationItem = history[containerIndex + 1];\n    if (navigationItem && navigationItem.transition) {\n      return navigationItem.transition.backfaceVisible;\n    }\n    return true;\n  } else {\n    const navigationItem = history[containerIndex];\n    if (navigationItem && navigationItem.transition) {\n      return navigationItem.transition.backfaceVisible;\n    }\n    return true;\n  }\n}\nfunction initialPropsForOverlay(containerIndex, stackState) {\n  const navigationItem = stackState.history[containerIndex];\n  if (navigationItem)\n    return navigationItem.transition.enter;\n}\nfunction getBackfaceVisibleForScreen(screenIndex, stackState) {\n  var _a, _b, _c, _d;\n  const { current, previous, history } = stackState;\n  if (screenIndex === previous && current > previous || screenIndex === current && current < previous) {\n    return (_b = (_a = history[screenIndex + 1]) == null ? void 0 : _a.transition) == null ? void 0 : _b.backfaceVisible;\n  }\n  return (_d = (_c = history[screenIndex]) == null ? void 0 : _c.transition) == null ? void 0 : _d.backfaceVisible;\n}\nfunction transitionPropsForOverlay(overlayIndex, stackState) {\n  const { current, history } = stackState;\n  if (overlayIndex === current) {\n    return;\n  } else if (overlayIndex < current) {\n    const navigationItem = history[overlayIndex + 1];\n    if (navigationItem && navigationItem.transition) {\n      return navigationItem.transition.exit;\n    }\n  } else {\n    const navigationItem = history[overlayIndex];\n    if (navigationItem && navigationItem.transition) {\n      return navigationItem.transition.enter;\n    }\n  }\n}\nfunction animationPropsForContainer(containerIndex, stackState) {\n  const { current, previous, history } = stackState;\n  const containerCurrent = previous > current ? previous : current;\n  if (containerIndex < containerCurrent) {\n    const navigationItem = history[containerIndex + 1];\n    if (navigationItem && navigationItem.transition.animation) {\n      return navigationItem.transition.animation;\n    }\n  } else if (containerIndex !== containerCurrent) {\n    const navigationItem = history[containerIndex];\n    if (navigationItem && navigationItem.transition.animation) {\n      return navigationItem.transition.animation;\n    }\n  } else {\n    const navigationItem = history[containerIndex];\n    if (navigationItem.transition.animation) {\n      return navigationItem.transition.animation;\n    }\n  }\n  return animationDefault;\n}\nfunction isInstantContainerTransition(containerIndex, stackState, overCurrentContext) {\n  const { current, previous, history } = stackState;\n  if (overCurrentContext && history.length > 1)\n    return true;\n  if (containerIndex !== previous && containerIndex !== current)\n    return true;\n  if (current === previous)\n    return true;\n  return false;\n}\nfunction containerIsVisible(containerIndex, stackState) {\n  const { current, previous } = stackState;\n  if (containerIndex > current && containerIndex > previous)\n    return false;\n  if (containerIndex === current)\n    return true;\n  return false;\n}\nfunction containerContent(item) {\n  return react__WEBPACK_IMPORTED_MODULE_0__.Children.map(item.component, (child) => {\n    var _a;\n    if (!isReactChild(child) || !isReactElement(child) || !child.props) {\n      return child;\n    }\n    const props = {\n      style: child.props.style\n    };\n    const position = (_a = item == null ? void 0 : item.transition) == null ? void 0 : _a.position;\n    const shouldStretchWidth = !position || position.left !== void 0 && position.right !== void 0;\n    const shouldStretchHeight = !position || position.top !== void 0 && position.bottom !== void 0;\n    const canStretchStyle = \"style\" in child.props;\n    if (shouldStretchWidth) {\n      const canStretchWidth = \"width\" in child.props;\n      if (canStretchWidth)\n        props.width = \"100%\";\n      if (canStretchStyle && !canStretchWidth)\n        props.style.width = \"100%\";\n    }\n    if (shouldStretchHeight) {\n      const canStretchHeight = \"height\" in child.props;\n      if (canStretchHeight)\n        props.height = \"100%\";\n      if (canStretchStyle && !canStretchHeight)\n        props.style.height = \"100%\";\n    }\n    return (0,react__WEBPACK_IMPORTED_MODULE_0__.cloneElement)(child, props);\n  });\n}\nfunction backdropTapAction(transition, goBackAction) {\n  if (transition.goBackOnTapOutside !== false)\n    return goBackAction;\n}\n\n// src/components/Page/EmulatedPage.tsx\n\n\n// src/components/Page/PageContainer.tsx\n\n\n// src/components/Stack/Stack.tsx\n\n\n// src/components/utils/paddingFromProps.ts\nfunction hasPaddingPerSide(props) {\n  const { paddingPerSide, paddingTop, paddingBottom, paddingLeft, paddingRight } = props;\n  return paddingPerSide !== false && (paddingTop !== void 0 || paddingBottom !== void 0 || paddingLeft !== void 0 || paddingRight !== void 0);\n}\nfunction paddingFromProps(props) {\n  const { padding = 0, paddingTop, paddingBottom, paddingLeft, paddingRight } = props;\n  if (hasPaddingPerSide(props)) {\n    return {\n      top: paddingTop !== void 0 ? paddingTop : padding,\n      bottom: paddingBottom !== void 0 ? paddingBottom : padding,\n      left: paddingLeft !== void 0 ? paddingLeft : padding,\n      right: paddingRight !== void 0 ? paddingRight : padding\n    };\n  }\n  return {\n    top: padding,\n    bottom: padding,\n    left: padding,\n    right: padding\n  };\n}\nfunction makePaddingString({\n  top,\n  left,\n  bottom,\n  right\n}) {\n  return `${top}px ${right}px ${bottom}px ${left}px`;\n}\n\n// src/components/Stack/Stack.tsx\nvar Stack = (0,react__WEBPACK_IMPORTED_MODULE_0__.memo)((0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(function Stack2(stackProps, ref) {\n  var _a, _b;\n  const {\n    direction = \"vertical\",\n    distribution = \"start\",\n    alignment = \"center\",\n    gap = 10,\n    children,\n    style: styleProp,\n    className,\n    willChangeTransform,\n    __fromCodeComponentNode,\n    parentSize,\n    __contentWrapperStyle,\n    ...containerProps\n  } = stackProps;\n  injectComponentCSSRules();\n  const flexDirection = toFlexDirection(direction);\n  const isReverse = isReverseDirection(flexDirection);\n  const justifyContent = toJustifyOrAlignment(distribution);\n  const padding = hasPaddingPerSide(containerProps) || containerProps.padding ? makePaddingString(paddingFromProps(containerProps)) : void 0;\n  const style = { ...styleProp };\n  Layer.applyWillChange({ willChangeTransform }, style, true);\n  if (__fromCodeComponentNode && !constraintsEnabled(unwrapFrameProps(containerProps))) {\n    containerProps.width = \"100%\";\n    containerProps.height = \"100%\";\n    containerProps._constraints = { enabled: true };\n  }\n  const layoutId = useLayoutId2(stackProps);\n  const { children: _children, props } = processOverrideForwarding(containerProps, children);\n  const widthType = (_a = containerProps.widthType) != null ? _a : containerProps.width === \"auto\" ? DimensionType.Auto : DimensionType.FixedNumber;\n  const heightType = (_b = containerProps.heightType) != null ? _b : containerProps.height === \"auto\" ? DimensionType.Auto : DimensionType.FixedNumber;\n  const fractionChildren = handleFraction(_children, direction, widthType, heightType);\n  const gapChildren = wrapInGapElement(fractionChildren, gap, flexDirection, justifyContent);\n  const content = useProvideParentSize(gapChildren, parentSize != null ? parentSize : ParentSizeState.Disabled);\n  const attributes = {\n    \"data-framer-component-type\": \"Stack\"\n  };\n  if (containerProps.__fromCanvasComponent)\n    attributes[\"data-framer-generated\"] = true;\n  const contentWrapperStyle = {\n    display: \"flex\",\n    flexDirection,\n    justifyContent,\n    alignItems: toJustifyOrAlignment(alignment),\n    padding,\n    ...__contentWrapperStyle\n  };\n  if (contentWrapperStyle.width === void 0) {\n    contentWrapperStyle.width = widthType === DimensionType.Auto ? \"min-content\" : \"100%\";\n  }\n  if (contentWrapperStyle.height === void 0) {\n    contentWrapperStyle.height = heightType === DimensionType.Auto ? \"min-content\" : \"100%\";\n  }\n  return /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(FrameWithMotion, {\n    background: \"none\",\n    ...props,\n    layoutId,\n    ref,\n    ...attributes,\n    style,\n    className\n  }, /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(motion.div, {\n    \"data-framer-stack-content-wrapper\": true,\n    \"data-framer-stack-direction-reverse\": isReverse,\n    style: contentWrapperStyle\n  }, content));\n}));\nStack.displayName = \"Stack\";\nfunction isFractionDimension(dimension) {\n  return typeof dimension === \"string\" && dimension.endsWith(\"fr\");\n}\nfunction fraction(dimension) {\n  const value = parseFloat(dimension);\n  return isFiniteNumber(value) ? value : 0;\n}\nfunction handleFraction(children, direction, widthType, heightType) {\n  return react__WEBPACK_IMPORTED_MODULE_0__.Children.map(children, (child) => {\n    if (!isReactChild(child) || !isReactElement(child))\n      return;\n    const isVertical = direction === \"vertical\";\n    const style = {};\n    let hasFraction = false;\n    const { style: propsStyle, size: size2 } = child.props;\n    let { width, height } = child.props;\n    if (size2 !== void 0) {\n      if (width === void 0)\n        width = size2;\n      if (height === void 0)\n        height = size2;\n    }\n    let newWidth = width;\n    let newHeight = height;\n    if (isFractionDimension(width)) {\n      hasFraction = true;\n      hasFraction = true;\n      if (isVertical) {\n        if (widthType === DimensionType.Auto) {\n          style.alignSelf = \"stretch\";\n          newWidth = \"auto\";\n        } else {\n          newWidth = `${fraction(width) * 100}%`;\n        }\n      } else {\n        newWidth = 1;\n        style.flexGrow = fraction(width);\n        style.flexBasis = 0;\n      }\n      style.width = newWidth;\n    }\n    if (isFractionDimension(height)) {\n      hasFraction = true;\n      if (isVertical) {\n        newHeight = 1;\n        style.flexGrow = fraction(height);\n        style.flexBasis = 0;\n      } else {\n        if (heightType === DimensionType.Auto) {\n          style.alignSelf = \"stretch\";\n          newHeight = \"auto\";\n        } else {\n          newHeight = `${fraction(height) * 100}%`;\n        }\n      }\n      style.height = newHeight;\n    }\n    if (!hasFraction)\n      return child;\n    const nextStyle = { ...propsStyle, ...style };\n    return (0,react__WEBPACK_IMPORTED_MODULE_0__.cloneElement)(child, {\n      width: newWidth,\n      height: newHeight,\n      style: nextStyle\n    });\n  });\n}\nfunction isGapEnabled(gap, justifyContent) {\n  if (!gap) {\n    return false;\n  }\n  if (justifyContent && [\"space-between\", \"space-around\", \"space-evenly\", \"stretch\"].includes(justifyContent)) {\n    return false;\n  }\n  return true;\n}\nfunction wrapInGapElement(children, gap, direction, justifyContent) {\n  if (!isGapEnabled(gap, justifyContent)) {\n    return children;\n  }\n  const isVertical = isVerticalDirection(direction);\n  const gapStyle = {\n    display: \"contents\",\n    [\"--stack-gap-x\"]: `${isVertical ? 0 : gap}px`,\n    [\"--stack-gap-y\"]: `${isVertical ? gap : 0}px`\n  };\n  return /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"div\", {\n    \"data-framer-stack-gap\": true,\n    style: gapStyle\n  }, children);\n}\nfunction toFlexDirection(direction) {\n  switch (direction) {\n    case \"vertical\":\n      return \"column\";\n    case \"horizontal\":\n      return \"row\";\n    default:\n      return direction;\n  }\n}\nfunction isVerticalDirection(direction) {\n  return direction === \"column\" || direction === \"column-reverse\";\n}\nfunction isReverseDirection(direction) {\n  switch (direction) {\n    case \"column-reverse\":\n    case \"row-reverse\":\n      return true;\n    default:\n      return false;\n  }\n}\nfunction toJustifyOrAlignment(distribution) {\n  switch (distribution) {\n    case \"start\":\n      return \"flex-start\";\n    case \"end\":\n      return \"flex-end\";\n    default:\n      return distribution;\n  }\n}\naddPropertyControls(Stack, {\n  direction: {\n    type: ControlType.SegmentedEnum,\n    options: [\"horizontal\", \"vertical\"],\n    title: \"Direction\",\n    defaultValue: \"vertical\"\n  },\n  distribution: {\n    type: ControlType.Enum,\n    options: [\"start\", \"center\", \"end\", \"space-between\", \"space-around\", \"space-evenly\"],\n    optionTitles: [\"Start\", \"Center\", \"End\", \"Space Between\", \"Space Around\", \"Space Evenly\"],\n    title: \"Distribute\",\n    defaultValue: \"space-around\"\n  },\n  alignment: {\n    type: ControlType.SegmentedEnum,\n    options: [\"start\", \"center\", \"end\"],\n    title: \"Align\",\n    defaultValue: \"center\"\n  },\n  gap: {\n    type: ControlType.Number,\n    min: 0,\n    title: \"Gap\",\n    hidden: (props) => {\n      return props.distribution !== void 0 && [\"space-between\", \"space-around\", \"space-evenly\"].includes(props.distribution);\n    },\n    defaultValue: 10\n  },\n  padding: {\n    type: ControlType.FusedNumber,\n    toggleKey: \"paddingPerSide\",\n    toggleTitles: [\"Padding\", \"Padding per side\"],\n    valueKeys: [\"paddingTop\", \"paddingRight\", \"paddingBottom\", \"paddingLeft\"],\n    valueLabels: [\"t\", \"r\", \"b\", \"l\"],\n    min: 0,\n    title: \"Padding\",\n    defaultValue: 0\n  }\n});\n\n// src/components/Page/PageContainer.tsx\nvar pageContentWrapperType = \"PageContentWrapper\";\nfunction PageContainer({\n  children,\n  effect,\n  dragEnabled,\n  direction,\n  contentHeight,\n  contentWidth,\n  alignment,\n  gap,\n  isLastPage,\n  contentOffsetRef,\n  constraintsRef,\n  directionLock,\n  onDragStart,\n  onDrag,\n  onDragEnd,\n  layoutId\n}) {\n  const isHorizontalDirection = direction === \"horizontal\";\n  const dragAxis = isHorizontalDirection ? \"x\" : \"y\";\n  const hasHorizontalGap = isHorizontalDirection && !isLastPage && gap;\n  const hasVerticalGap = !isHorizontalDirection && !isLastPage && gap;\n  const hasAutoWidth = contentWidth !== \"stretch\" && isHorizontalDirection;\n  const hasAutoHeight = contentHeight !== \"stretch\" && !isHorizontalDirection;\n  const wrapperWidth = hasAutoWidth ? \"auto\" : \"100%\";\n  const wrapperHeight = hasAutoHeight ? \"auto\" : \"100%\";\n  const containerWidth = hasHorizontalGap && wrapperWidth === \"100%\" ? `calc(100% + ${gap}px)` : wrapperWidth;\n  const containerHeight = hasVerticalGap && wrapperHeight === \"100%\" ? `calc(100% + ${gap}px)` : wrapperHeight;\n  return /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(FrameWithMotion, {\n    position: \"relative\",\n    \"data-framer-component-type\": \"PageContainer\",\n    width: containerWidth,\n    height: containerHeight,\n    layoutId: layoutId ? `${layoutId}-container` : void 0,\n    backgroundColor: \"transparent\",\n    drag: dragEnabled ? dragAxis : false,\n    dragDirectionLock: directionLock,\n    _dragX: contentOffsetRef.current.x,\n    _dragY: contentOffsetRef.current.y,\n    dragConstraints: constraintsRef.current,\n    onDrag,\n    onDragStart,\n    onDragEnd,\n    preserve3d: true,\n    style: {\n      paddingRight: hasHorizontalGap ? gap : 0,\n      paddingBottom: hasVerticalGap ? gap : 0\n    }\n  }, /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(FrameWithMotion, {\n    position: \"relative\",\n    \"data-framer-component-type\": pageContentWrapperType,\n    width: wrapperWidth,\n    height: wrapperHeight,\n    preserve3d: false,\n    backgroundColor: \"transparent\",\n    _layoutResetTransform: true,\n    key: effect ? Object.keys(effect).join(\"\") : \"\",\n    style: {\n      ...effect,\n      display: \"flex\",\n      flexDirection: isHorizontalDirection ? \"row\" : \"column\",\n      alignItems: alignment && toJustifyOrAlignment(alignment)\n    }\n  }, children));\n}\n\n// src/components/Page/EmulatedPage.tsx\nvar Page = (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(function Page2(props, forwardedRef) {\n  const {\n    direction = \"horizontal\",\n    contentWidth = \"stretch\",\n    contentHeight = \"stretch\",\n    alignment = \"start\",\n    currentPage = 0,\n    animateCurrentPageUpdate = true,\n    gap: gapValue = 10,\n    padding = 0,\n    momentum = false,\n    dragEnabled = true,\n    defaultEffect = \"none\",\n    background = \"transparent\",\n    overflow = \"hidden\",\n    __fromCodeComponentNode,\n    effect,\n    children,\n    contentOffsetX,\n    contentOffsetY,\n    onChangePage,\n    onScrollStart,\n    onScroll,\n    onDragStart,\n    onDrag,\n    onDragEnd,\n    directionLock,\n    onScrollEnd,\n    onDirectionLock,\n    onUpdate,\n    wheelEnabled = false,\n    layoutId: specificLayoutId,\n    ...rest\n  } = props;\n  const layoutId = useLayoutId2(props, { specificLayoutId, postfix: \"page\" });\n  const containerProps = { ...rest, background };\n  const hasMountedRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(false);\n  const hasFixedSize = RenderTarget.hasRestrictions() && props.__fromCodeComponentNode && isFiniteNumber(containerProps.width) && isFiniteNumber(containerProps.height);\n  if (!hasFixedSize && __fromCodeComponentNode && !containerProps.__fromCanvasComponent) {\n    containerProps.width = \"100%\";\n    containerProps.height = \"100%\";\n    containerProps._constraints = { enabled: true };\n  }\n  const { initial, prev } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)({\n    initial: { x: 0, y: 0 },\n    prev: { x: 0, y: 0 }\n  }).current;\n  const isHorizontal = direction === \"horizontal\";\n  let gap = gapValue;\n  if (gap < 0) {\n    warnOnce(`The 'gap' property of Page component can not be negative, but is ${gapValue}.`);\n    gap = 0;\n  }\n  injectComponentCSSRules();\n  const pageCount = react__WEBPACK_IMPORTED_MODULE_0__.Children.count(children);\n  const maxOffsetRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(0);\n  const constraints = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)({ top: 0, left: 0, right: 0, bottom: 0 });\n  const fallbackContainerRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n  const containerRef = forwardedRef || fallbackContainerRef;\n  const scrollableRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n  const pageEffectValuesRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)([]);\n  const pageRectsRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)([]);\n  const internalX = useMotionValue(isMotionValue2(contentOffsetX) ? 0 : contentOffsetX != null ? contentOffsetX : 0);\n  const internalY = useMotionValue(isMotionValue2(contentOffsetY) ? 0 : contentOffsetY != null ? contentOffsetY : 0);\n  const contentOffsetRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)({\n    x: isMotionValue2(contentOffsetX) ? contentOffsetX : internalX,\n    y: isMotionValue2(contentOffsetY) ? contentOffsetY : internalY\n  });\n  const currentContentPageRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(0);\n  const propsBoundedCurrentPageRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(0);\n  const latestPropsRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(props);\n  latestPropsRef.current = props;\n  const lastDirectionRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(props.direction);\n  const snapToPage = useSnapToPage(currentContentPageRef, contentOffsetRef, isHorizontal);\n  const [_, setForceUpdateCount] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0);\n  const containerSizeRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)({ width: 200, height: 200 });\n  if (hasFixedSize && isFiniteNumber(containerProps.width) && isFiniteNumber(containerProps.height)) {\n    containerSizeRef.current.width = containerProps.width;\n    containerSizeRef.current.height = containerProps.height;\n  }\n  const updateOnResize = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {\n    if (!hasFixedSize)\n      setForceUpdateCount((v) => v + 1);\n  }, [hasFixedSize]);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (RenderTarget.current() !== RenderTarget.preview)\n      return;\n    globalThis.addEventListener(\"resize\", updateOnResize);\n    return () => {\n      globalThis.removeEventListener(\"resize\", updateOnResize);\n    };\n  }, [updateOnResize]);\n  const applyEffects = () => {\n    pageEffectValuesRef.current.forEach((effectDictionary, index) => {\n      const values = effectValues(index, latestPropsRef, pageRectsRef, contentOffsetRef, maxOffsetRef);\n      if (!effectDictionary || !values)\n        return;\n      for (const key6 in values) {\n        if (isMotionValue2(effectDictionary[key6])) {\n          effectDictionary[key6].set(values[key6]);\n        }\n      }\n    });\n  };\n  const updateMaxOffsetFromPageContents = (containerSize) => {\n    const newPageContentRects = getPageContentRects(containerRef, containerSize, direction, gap);\n    if (newPageContentRects)\n      pageRectsRef.current = newPageContentRects;\n    const newMaxOffset = getMaxOffset(containerSizeRef.current, pageRectsRef.current, direction, latestPropsRef.current);\n    if (newMaxOffset !== maxOffsetRef.current) {\n      maxOffsetRef.current = newMaxOffset;\n      constraints.current.top = -newMaxOffset;\n      constraints.current.left = -newMaxOffset;\n      if (RenderTarget.current() === RenderTarget.canvas)\n        setForceUpdateCount((v) => v + 1);\n    }\n  };\n  const measureContainerSize = () => {\n    const element = containerRef.current;\n    if (!element)\n      return null;\n    const { offsetWidth, offsetHeight } = element;\n    const currentSize = containerSizeRef.current;\n    if (offsetWidth !== currentSize.width || offsetHeight !== currentSize.height) {\n      containerSizeRef.current = {\n        width: offsetWidth,\n        height: offsetHeight\n      };\n      return containerSizeRef.current;\n    }\n    return null;\n  };\n  const updateAndSnapToPage = (newPage, mount = false) => {\n    const newBoundedCurrentPage = getBoundedCurrentPage(newPage, pageCount);\n    const boundedCurrentPageDidChange = newBoundedCurrentPage !== propsBoundedCurrentPageRef.current;\n    if (boundedCurrentPageDidChange) {\n      propsBoundedCurrentPageRef.current = newBoundedCurrentPage;\n      updateCurrentPage(newBoundedCurrentPage, currentContentPageRef, onChangePage);\n    }\n    const offset = offsetForPage(newBoundedCurrentPage, pageCount, pageRectsRef, isHorizontal, maxOffsetRef);\n    const animated = animateCurrentPageUpdate && RenderTarget.current() !== RenderTarget.canvas && !mount;\n    snapToPage(newBoundedCurrentPage, offset, { animated });\n  };\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect)(() => {\n    var _a;\n    if (hasMountedRef.current)\n      return;\n    currentContentPageRef.current = currentPage;\n    const contentOffset = contentOffsetRef.current;\n    contentOffset.x.onChange(applyEffects);\n    contentOffset.y.onChange(applyEffects);\n    applyEffects();\n    hasMountedRef.current = true;\n    const containerSize = (_a = measureContainerSize()) != null ? _a : containerSizeRef.current;\n    updateMaxOffsetFromPageContents(containerSize);\n    updateAndSnapToPage(currentContentPageRef.current, true);\n  }, []);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (currentPage !== currentContentPageRef.current)\n      updateAndSnapToPage(currentPage);\n  }, [currentPage]);\n  const handleMeasureLifecycle = () => {\n    const newContainerSize = measureContainerSize();\n    updateMaxOffsetFromPageContents(newContainerSize != null ? newContainerSize : containerSizeRef.current);\n    updateAndSnapToPage(currentContentPageRef.current);\n    if (newContainerSize || direction !== lastDirectionRef.current) {\n      if (direction === \"horizontal\") {\n        contentOffsetRef.current.y.set(0);\n      } else {\n        contentOffsetRef.current.x.set(0);\n      }\n      lastDirectionRef.current = direction;\n    }\n  };\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect)(() => {\n    if (RenderTarget.current() !== RenderTarget.canvas)\n      return;\n    handleMeasureLifecycle();\n  });\n  const onDragStartHandler = (event, info) => {\n    if (onScrollStart)\n      onScrollStart(info);\n    if (onDragStart)\n      onDragStart(event, info);\n    prev.x = initial.x = info.point.x;\n    prev.y = initial.y = info.point.y;\n  };\n  const onDragHandler = (event, info) => {\n    if (onScroll)\n      onScroll(info);\n    if (onDrag)\n      onDrag(event, info);\n    prev.x = info.point.x;\n    prev.y = info.point.y;\n  };\n  const onDragTransitionEnd = () => {\n    if (props.onDragTransitionEnd)\n      props.onDragTransitionEnd();\n    if (onScrollEnd) {\n      const { x, y } = contentOffsetRef.current;\n      const point = { x: x.get(), y: y.get() };\n      onScrollEnd({\n        point,\n        velocity: { x: x.getVelocity(), y: y.getVelocity() },\n        offset: { x: point.x - initial.x, y: point.y - initial.y },\n        delta: { x: point.x - prev.x, y: point.y - prev.y }\n      });\n    }\n  };\n  const onDragEndHandler = async (event, info) => {\n    const contentOffset = isHorizontal ? contentOffsetRef.current.x : contentOffsetRef.current.y;\n    contentOffset.stop();\n    const startPosition = contentOffset.get();\n    const axis = isHorizontal ? \"x\" : \"y\";\n    const velocity = info.velocity[axis];\n    let index = nearestPageIndex(pageRectsRef.current, startPosition, startPosition, isHorizontal, momentum);\n    if (velocity) {\n      inertia({\n        from: startPosition,\n        velocity,\n        modifyTarget: (endPosition) => {\n          index = nearestPageIndex(pageRectsRef.current, startPosition, endPosition, isHorizontal, momentum);\n          return endPosition;\n        }\n      }).stop();\n    }\n    updateCurrentPage(index, currentContentPageRef, onChangePage);\n    const offset = offsetForPage(index, pageCount, pageRectsRef, isHorizontal, maxOffsetRef);\n    if (onDragEnd)\n      onDragEnd(event, info);\n    const handler = contentOffsetRef.current[axis];\n    animate2(handler, offset, {\n      type: \"spring\",\n      from: startPosition,\n      velocity,\n      stiffness: 500,\n      damping: 50,\n      onComplete: onDragTransitionEnd\n    });\n  };\n  pageEffectValuesRef.current = [];\n  const childComponents = react__WEBPACK_IMPORTED_MODULE_0__.Children.map(children, (child, index) => {\n    var _a;\n    if (!isReactChild(child) || !isReactElement(child)) {\n      return child;\n    }\n    const update = {\n      right: void 0,\n      bottom: void 0,\n      top: void 0,\n      left: void 0,\n      _constraints: {\n        enabled: false\n      }\n    };\n    if (containerProps.__fromCanvasComponent) {\n      update.style = (_a = child.props.style) != null ? _a : {};\n      if (contentWidth === \"stretch\")\n        update.style.width = \"100%\";\n      if (contentHeight === \"stretch\")\n        update.style.height = \"100%\";\n    } else {\n      if (contentWidth === \"stretch\")\n        update.width = \"100%\";\n      if (contentHeight === \"stretch\")\n        update.height = \"100%\";\n    }\n    let effectDictionary;\n    const values = effectValues(index, latestPropsRef, pageRectsRef, contentOffsetRef, maxOffsetRef);\n    if (values) {\n      effectDictionary = {};\n      for (const key6 in values) {\n        effectDictionary[key6] = motionValue(values[key6]);\n      }\n    }\n    pageEffectValuesRef.current.push(effectDictionary);\n    return /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(PageContainer, {\n      key: index,\n      effect: effectDictionary,\n      dragEnabled,\n      direction,\n      contentHeight,\n      contentWidth,\n      alignment,\n      gap,\n      isLastPage: index === pageCount - 1,\n      contentOffsetRef,\n      constraintsRef: constraints,\n      directionLock,\n      onDragStart: onDragStartHandler,\n      onDrag: onDragHandler,\n      onDragEnd: onDragEndHandler,\n      layoutId: layoutId ? `${layoutId}-${index}` : void 0\n    }, (0,react__WEBPACK_IMPORTED_MODULE_0__.cloneElement)(child, update));\n  });\n  useWheelScroll(scrollableRef, {\n    enabled: wheelEnabled,\n    initial,\n    prev,\n    direction,\n    constraints,\n    offsetX: contentOffsetRef.current.x,\n    offsetY: contentOffsetRef.current.y,\n    onScrollStart,\n    onScroll,\n    onScrollEnd\n  });\n  return /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(FrameWithMotion, {\n    preserve3d: false,\n    perspective: hasEffect(props) ? 1200 : void 0,\n    overflow,\n    ...containerProps,\n    layoutId,\n    ref: containerRef,\n    onLayoutMeasure: handleMeasureLifecycle\n  }, /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(FrameWithMotion, {\n    \"data-framer-component-type\": \"Page\",\n    ref: scrollableRef,\n    background: null,\n    x: contentOffsetRef.current.x,\n    y: contentOffsetRef.current.y,\n    width: \"100%\",\n    height: \"100%\",\n    preserve3d: true,\n    layout: true,\n    layoutId: layoutId !== void 0 ? layoutId + \"-page\" : void 0,\n    style: {\n      padding: makePaddingString(paddingFromProps(props)),\n      display: \"flex\",\n      flexDirection: isHorizontal ? \"row\" : \"column\"\n    }\n  }, /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(EmptyState, {\n    title: \"Page\",\n    description: \"Click and drag the connector to any frame on the canvas \\u2192\",\n    children,\n    size: containerSizeRef.current,\n    insideUserCodeComponent: !__fromCodeComponentNode\n  }), childComponents));\n});\nfunction cubeEffect(info) {\n  const { normalizedOffset, direction } = info;\n  const isHorizontal = direction === \"horizontal\";\n  return {\n    originX: normalizedOffset < 0 ? 1 : 0,\n    originY: normalizedOffset < 0 ? 1 : 0,\n    rotateY: isHorizontal ? Math.min(Math.max(-90, normalizedOffset * 90), 90) : 0,\n    rotateX: isHorizontal ? 0 : Math.min(Math.max(-90, normalizedOffset * -90), 90),\n    backfaceVisibility: \"hidden\",\n    WebkitBackfaceVisibility: \"hidden\"\n  };\n}\nfunction coverflowEffect(info) {\n  const { normalizedOffset, direction, size: size2 } = info;\n  const isHorizontal = direction === \"horizontal\";\n  return {\n    rotateY: isHorizontal ? Math.min(45, Math.max(-45, normalizedOffset * -45)) : 0,\n    rotateX: isHorizontal ? 0 : Math.min(45, Math.max(-45, normalizedOffset * 45)),\n    originX: isHorizontal ? normalizedOffset < 0 ? 0 : 1 : 0.5,\n    originY: isHorizontal ? 0.5 : normalizedOffset < 0 ? 0 : 1,\n    x: isHorizontal ? `${normalizedOffset * -25}%` : 0,\n    y: isHorizontal ? 0 : `${normalizedOffset * -25}%`,\n    z: -Math.abs(normalizedOffset),\n    scale: 1 - Math.abs(normalizedOffset / 10)\n  };\n}\nfunction calcPileAxisOffset(offset, length) {\n  return offset * length - offset * 8;\n}\nfunction pileEffect(info) {\n  const { normalizedOffset, direction, size: size2 } = info;\n  const isHorizontal = direction === \"horizontal\";\n  const absoluteOffset = Math.abs(normalizedOffset);\n  return {\n    x: normalizedOffset < 0 && isHorizontal ? calcPileAxisOffset(absoluteOffset, size2.width) : 0,\n    y: normalizedOffset < 0 && !isHorizontal ? calcPileAxisOffset(absoluteOffset, size2.height) : 0,\n    scale: normalizedOffset < 0 ? 1 - absoluteOffset / 50 : 1\n  };\n}\nfunction wheelEffect(info) {\n  const { normalizedOffset, direction, size: size2 } = info;\n  const isHorizontal = direction === \"horizontal\";\n  const originZ = (isHorizontal ? size2.width : size2.height) * 18 / (2 * Math.PI);\n  const rotateX = isHorizontal ? 0 : normalizedOffset * -20;\n  const rotateY = isHorizontal ? normalizedOffset * 20 : 0;\n  const y = isHorizontal ? 0 : normalizedOffset * -size2.height;\n  const x = isHorizontal ? normalizedOffset * -size2.width : 0;\n  return {\n    opacity: 1 - Math.abs(normalizedOffset) / 4,\n    transform: `translate(${x}px, ${y}px) translateZ(-${originZ}px) rotateX(${rotateX}deg) rotateY(${rotateY}deg) translateZ(${originZ}px)`\n  };\n}\nfunction getDefaultEffect(type) {\n  switch (type) {\n    case \"cube\":\n      return cubeEffect;\n    case \"coverflow\":\n      return coverflowEffect;\n    case \"pile\":\n      return pileEffect;\n    case \"wheel\":\n      return wheelEffect;\n    default:\n      return null;\n  }\n}\nfunction nearestPageIndex(pageRects, startPosition, endPosition, isHorizontalDirection, allowSkippingPages) {\n  const distanceToStart = function(rect) {\n    const rectPosition = isHorizontalDirection ? rect.x : rect.y;\n    return Math.abs(rectPosition + startPosition);\n  };\n  const distanceToEnd = function(rect) {\n    const rectPosition = isHorizontalDirection ? rect.x : rect.y;\n    return Math.abs(rectPosition + endPosition);\n  };\n  if (allowSkippingPages) {\n    const closestPages = [...pageRects].sort((a2, b2) => distanceToEnd(a2) - distanceToEnd(b2));\n    return pageRects.indexOf(closestPages[0]);\n  } else {\n    const closestToStart = [...pageRects].sort((a2, b2) => distanceToStart(a2) - distanceToStart(b2));\n    if (closestToStart.length === 1)\n      return pageRects.indexOf(closestToStart[0]);\n    const pageA = closestToStart[0];\n    const pageB = closestToStart[1];\n    const closestPages = [pageA, pageB].sort((a2, b2) => distanceToEnd(a2) - distanceToEnd(b2));\n    return pageRects.indexOf(closestPages[0]);\n  }\n}\nfunction getPageContentRects(containerRef, containerSize, direction, gap) {\n  var _a;\n  const containerElement = containerRef.current;\n  if (!containerElement)\n    return;\n  const contentWrappers = [];\n  (_a = containerElement.firstChild) == null ? void 0 : _a.childNodes.forEach((node) => {\n    const childNode = node.firstChild;\n    if (!(childNode instanceof HTMLElement))\n      return;\n    const componentType = childNode.getAttribute(\"data-framer-component-type\");\n    if (componentType === pageContentWrapperType) {\n      contentWrappers.push(childNode);\n    }\n  });\n  const sizes = [];\n  contentWrappers.forEach((contentWrapper) => {\n    if (contentWrapper instanceof HTMLElement && contentWrapper.firstChild instanceof HTMLElement) {\n      let width = contentWrapper.firstChild.offsetWidth;\n      let height = contentWrapper.firstChild.offsetHeight;\n      if (false) {}\n      sizes.push({ width, height });\n    } else {\n      sizes.push(null);\n    }\n  });\n  let maxX = 0;\n  let maxY = 0;\n  const isHorizontal = direction === \"horizontal\";\n  return sizes.map((queriedSize) => {\n    const size2 = queriedSize || containerSize;\n    const x = maxX;\n    const y = maxY;\n    if (isHorizontal) {\n      maxX += size2.width + gap;\n    } else {\n      maxY += size2.height + gap;\n    }\n    return { ...size2, x, y };\n  });\n}\nfunction getMaxOffset(containerSize, pageContentRects, direction, paddingProps) {\n  const lastPageRect = pageContentRects[pageContentRects.length - 1];\n  if (!lastPageRect)\n    return 0;\n  const paddingSides = paddingFromProps(paddingProps);\n  const isHorizontal = direction === \"horizontal\";\n  const paddingStart = isHorizontal ? paddingSides.left : paddingSides.top;\n  const paddingEnd = isHorizontal ? paddingSides.right : paddingSides.bottom;\n  const pageWidth = isHorizontal ? lastPageRect.width : lastPageRect.height;\n  const containerWidth = isHorizontal ? containerSize.width : containerSize.height;\n  const freeSpace = containerWidth - paddingStart - paddingEnd - pageWidth;\n  const target = isHorizontal ? lastPageRect.x : lastPageRect.y;\n  if (freeSpace <= 0)\n    return Math.max(target, 0);\n  return Math.max(target - freeSpace, 0);\n}\nfunction offsetForPage(index, pageCount, pageRectsRef, isHorizontal, maxOffsetRef) {\n  const pageIndex = Math.max(0, Math.min(pageCount - 1, index));\n  const currentPageRect = pageRectsRef.current[pageIndex];\n  if (!currentPageRect) {\n    return 0;\n  }\n  if (isHorizontal) {\n    return -Math.min(currentPageRect.x, maxOffsetRef.current);\n  } else {\n    return -Math.min(currentPageRect.y, maxOffsetRef.current);\n  }\n}\nfunction useSnapToPage(currentContentPageRef, contentOffsetRef, isHorizontal) {\n  return (pageIndex, offset, options) => {\n    currentContentPageRef.current = pageIndex;\n    const contentOffset = isHorizontal ? contentOffsetRef.current.x : contentOffsetRef.current.y;\n    if (!options || !options.animated) {\n      contentOffset.set(offset);\n      return;\n    }\n    const axis = isHorizontal ? \"x\" : \"y\";\n    animate2(contentOffsetRef.current[axis], offset, {\n      type: \"spring\",\n      from: contentOffset.get(),\n      velocity: contentOffset.getVelocity(),\n      stiffness: 500,\n      damping: 50\n    });\n  };\n}\nfunction getBoundedCurrentPage(pageIndex, pageCount) {\n  return pageIndex >= 0 ? Math.min(pageIndex, pageCount - 1) : (pageIndex % pageCount + pageCount) % pageCount;\n}\nfunction effectValues(index, latestPropsRef, pageRectsRef, contentOffsetRef, maxOffsetRef) {\n  const {\n    direction: latestDirection = \"horizontal\",\n    defaultEffect: latestDefaultEffect,\n    effect: latestEffect,\n    gap: latestGap = 0\n  } = latestPropsRef.current;\n  const latestIsHorizontal = latestDirection === \"horizontal\";\n  const pageRect = pageRectsRef.current[index] || {\n    x: latestIsHorizontal ? index * 200 + latestGap : 0,\n    y: latestIsHorizontal ? 0 : index * 200 + latestGap,\n    width: 200,\n    height: 200\n  };\n  const effectFunction = latestEffect || getDefaultEffect(latestDefaultEffect);\n  if (!effectFunction)\n    return null;\n  let offset;\n  let normalizedOffset;\n  const contentOffset = contentOffsetRef.current;\n  const maxScrollOffset = maxOffsetRef.current;\n  if (latestIsHorizontal) {\n    offset = Math.min(pageRect.x, maxScrollOffset) + (contentOffset ? contentOffset.x.get() : 0);\n    normalizedOffset = offset / (pageRect.width + latestGap);\n  } else {\n    offset = Math.min(pageRect.y, maxScrollOffset) + (contentOffset ? contentOffset.y.get() : 0);\n    normalizedOffset = offset / (pageRect.height + latestGap);\n  }\n  const size2 = { width: pageRect.width, height: pageRect.height };\n  return effectFunction({\n    offset,\n    normalizedOffset,\n    size: size2,\n    index,\n    direction: latestDirection,\n    gap: latestGap,\n    pageCount: pageRectsRef.current.length\n  });\n}\nfunction hasEffect(props) {\n  return !!props.effect || !!getDefaultEffect(props.defaultEffect);\n}\nfunction updateCurrentPage(newPageIndex, currentContentPageRef, onChangePage) {\n  if (currentContentPageRef.current === newPageIndex)\n    return;\n  if (onChangePage)\n    onChangePage(newPageIndex, currentContentPageRef.current);\n  currentContentPageRef.current = newPageIndex;\n}\n\n// src/components/Page/Page.tsx\nvar ContentDimension;\n(function(ContentDimension2) {\n  ContentDimension2.Auto = \"auto\";\n  ContentDimension2.Stretch = \"stretch\";\n})(ContentDimension || (ContentDimension = {}));\nvar pageContentDimensionOptions = [ContentDimension.Auto, ContentDimension.Stretch];\nvar pageContentDimensionTitles = pageContentDimensionOptions.map((option) => {\n  switch (option) {\n    case ContentDimension.Auto:\n      return \"Auto\";\n    case ContentDimension.Stretch:\n      return \"Stretch\";\n  }\n});\nvar pageEffectOptions = [\"none\", \"cube\", \"coverflow\", \"wheel\", \"pile\"];\nvar pageEffectTitles = pageEffectOptions.map((option) => {\n  switch (option) {\n    case \"none\":\n      return \"None\";\n    case \"cube\":\n      return \"Cube\";\n    case \"coverflow\":\n      return \"Cover Flow\";\n    case \"wheel\":\n      return \"Wheel\";\n    case \"pile\":\n      return \"Pile\";\n  }\n});\nvar pageAlignmentOptions = [\"start\", \"center\", \"end\"];\nvar genericAlignmentTitles = pageAlignmentOptions.map((option) => {\n  switch (option) {\n    case \"start\":\n      return \"Start\";\n    case \"center\":\n      return \"Center\";\n    case \"end\":\n      return \"End\";\n  }\n});\naddPropertyControls(Page, {\n  direction: {\n    type: ControlType.Enum,\n    options: [\"horizontal\", \"vertical\"],\n    title: \"Direction\",\n    defaultValue: \"horizontal\",\n    displaySegmentedControl: true,\n    optionIcons: [\"direction-horizontal\", \"direction-vertical\"]\n  },\n  directionLock: {\n    type: ControlType.Boolean,\n    title: \"Lock\",\n    enabledTitle: \"1 Axis\",\n    disabledTitle: \"Off\",\n    defaultValue: true\n  },\n  contentWidth: {\n    type: ControlType.Enum,\n    options: pageContentDimensionOptions,\n    optionTitles: pageContentDimensionTitles,\n    title: \"Width\",\n    defaultValue: ContentDimension.Stretch,\n    displaySegmentedControl: true\n  },\n  contentHeight: {\n    type: ControlType.Enum,\n    options: pageContentDimensionOptions,\n    optionTitles: pageContentDimensionTitles,\n    title: \"Height\",\n    defaultValue: ContentDimension.Stretch,\n    displaySegmentedControl: true\n  },\n  alignment: {\n    type: ControlType.Enum,\n    options: pageAlignmentOptions,\n    optionTitles: genericAlignmentTitles,\n    title: \"Align\",\n    hidden(props) {\n      const { direction, contentWidth, contentHeight } = props;\n      const isHorizontalDirection = direction === \"horizontal\";\n      const crossDimension = isHorizontalDirection ? contentHeight : contentWidth;\n      return crossDimension === ContentDimension.Stretch;\n    },\n    defaultValue: \"start\",\n    displaySegmentedControl: true,\n    optionIcons: {\n      direction: {\n        horizontal: [\"align-top\", \"align-middle\", \"align-bottom\"],\n        vertical: [\"align-left\", \"align-center\", \"align-right\"]\n      }\n    }\n  },\n  gap: {\n    type: ControlType.Number,\n    min: 0,\n    title: \"Gap\",\n    defaultValue: 0\n  },\n  padding: {\n    type: ControlType.FusedNumber,\n    toggleKey: \"paddingPerSide\",\n    toggleTitles: [\"Padding\", \"Padding per side\"],\n    valueKeys: [\"paddingTop\", \"paddingRight\", \"paddingBottom\", \"paddingLeft\"],\n    valueLabels: [\"T\", \"R\", \"B\", \"L\"],\n    min: 0,\n    title: \"Padding\",\n    defaultValue: 0\n  },\n  currentPage: {\n    type: ControlType.Number,\n    min: 0,\n    title: \"Current\",\n    displayStepper: true,\n    defaultValue: 0\n  },\n  momentum: {\n    type: ControlType.Boolean,\n    enabledTitle: \"On\",\n    disabledTitle: \"Off\",\n    title: \"Momentum\",\n    defaultValue: false\n  },\n  dragEnabled: {\n    type: ControlType.Boolean,\n    title: \"Drag\",\n    enabledTitle: \"On\",\n    disabledTitle: \"Off\",\n    defaultValue: true\n  },\n  wheelEnabled: {\n    type: ControlType.Boolean,\n    title: \"Wheel\",\n    enabledTitle: \"On\",\n    disabledTitle: \"Off\",\n    defaultValue: false\n  },\n  defaultEffect: {\n    type: ControlType.Enum,\n    options: pageEffectOptions,\n    optionTitles: pageEffectTitles,\n    title: \"Effect\",\n    defaultValue: \"none\"\n  },\n  children: {\n    type: ControlType.Array,\n    title: \"Content\",\n    control: { type: ControlType.ComponentInstance, title: \"Page\" }\n  }\n});\nPage.supportsConstraints = true;\n\n// src/components/hoc/WithNavigator.tsx\n\n\n// src/render/types/NavigationLink.ts\nvar NavigateTo;\n(function(NavigateTo2) {\n  NavigateTo2[\"Previous\"] = \"@Previous\";\n})(NavigateTo || (NavigateTo = {}));\nvar NavigationTransitionType;\n(function(NavigationTransitionType2) {\n  NavigationTransitionType2[\"push\"] = \"push\";\n  NavigationTransitionType2[\"instant\"] = \"instant\";\n  NavigationTransitionType2[\"fade\"] = \"fade\";\n  NavigationTransitionType2[\"modal\"] = \"modal\";\n  NavigationTransitionType2[\"overlay\"] = \"overlay\";\n  NavigationTransitionType2[\"flip\"] = \"flip\";\n  NavigationTransitionType2[\"magicMotion\"] = \"magicMotion\";\n})(NavigationTransitionType || (NavigationTransitionType = {}));\n\n// src/components/hoc/WithNavigator.tsx\nvar hoistNonReactStatic3 = require_hoist_non_react_statics_cjs();\nfunction WithNavigator(BaseComponent, navigationTransition, navigationTransitionDirection, NavigationTarget2, navigationTransitionOptions) {\n  const InternalWithNavigator = class extends react__WEBPACK_IMPORTED_MODULE_0__.Component {\n    render() {\n      return /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(NavigationContext.Consumer, null, (navigation) => {\n        const navigate = () => {\n          if (navigationTransition === \"goBack\") {\n            navigation.goBack();\n            return;\n          }\n          if (!NavigationTarget2)\n            return;\n          const component = NavigationTarget2();\n          const appearsFrom = transitionDirectionToSide(navigationTransitionDirection);\n          switch (navigationTransition) {\n            case NavigationTransitionType.instant:\n              navigation.instant(component);\n              break;\n            case NavigationTransitionType.fade:\n              navigation.fade(component);\n              break;\n            case NavigationTransitionType.modal:\n              navigation.modal(component, navigationTransitionOptions);\n              break;\n            case NavigationTransitionType.push:\n              navigation.push(component, { appearsFrom });\n              break;\n            case NavigationTransitionType.overlay:\n              navigation.overlay(component, {\n                ...navigationTransitionOptions,\n                appearsFrom\n              });\n              break;\n            case NavigationTransitionType.flip:\n              navigation.flip(component, { appearsFrom });\n              break;\n            case NavigationTransitionType.magicMotion:\n              navigation.magicMotion(component, {});\n              break;\n          }\n        };\n        const { onTap, ...props } = this.props;\n        if (onTap) {\n          props.onTap = (...args) => {\n            onTap.apply(this, args);\n            navigate.apply(this, args);\n          };\n        } else {\n          props.onTap = navigate;\n        }\n        return /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(BaseComponent, {\n          ...props\n        });\n      });\n    }\n  };\n  hoistNonReactStatic3(InternalWithNavigator, BaseComponent);\n  return InternalWithNavigator;\n}\nfunction transitionDirectionToSide(direction) {\n  switch (direction) {\n    case \"left\":\n      return \"right\";\n    case \"right\":\n      return \"left\";\n    case \"up\":\n      return \"bottom\";\n    case \"down\":\n      return \"top\";\n  }\n}\n\n// src/animation/Animators/PrecalculatedAnimator.ts\nvar Defaults2 = {\n  delta: 1 / 60,\n  maxValues: 1e4\n};\nvar PrecalculatedAnimator = class {\n  constructor(options) {\n    this.currentTime = 0;\n    this.options = { ...Defaults2, ...options };\n    this.animator = options.animator;\n  }\n  preCalculate() {\n    if (!this.animator.isReady()) {\n      return;\n    }\n    const { delta: delta2 } = this.options;\n    this.values = [];\n    while (!this.animator.isFinished() && this.values.length < this.options.maxValues) {\n      let value = this.animator.next(this.options.delta);\n      if (typeof value === \"object\" && value) {\n        const object = value;\n        const copy = { ...object };\n        value = copy;\n      }\n      this.values.push(value);\n    }\n    this.totalTime = this.values.length * delta2;\n  }\n  indexForTime(time3) {\n    return Math.max(0, Math.min(this.values.length - 1, Math.round(this.values.length * (time3 / this.totalTime)) - 1));\n  }\n  setFrom(value) {\n    this.animator.setFrom(value);\n    this.preCalculate();\n  }\n  setTo(end) {\n    this.animator.setTo(end);\n    this.preCalculate();\n  }\n  isReady() {\n    return this.values !== void 0 && this.values.length > 0 && this.totalTime > 0;\n  }\n  next(delta2) {\n    this.currentTime += delta2;\n    const index = this.indexForTime(this.currentTime);\n    return this.values[index];\n  }\n  isFinished() {\n    return this.totalTime === 0 || this.currentTime >= this.totalTime;\n  }\n  get endValue() {\n    this.preCalculate();\n    const index = this.indexForTime(this.totalTime);\n    return this.values.length > 0 ? this.values[index] : this.animator.next(0);\n  }\n};\n\n// src/animation/Animators/BezierAnimator.ts\nvar Bezier;\n(function(Bezier2) {\n  Bezier2[\"Linear\"] = \"linear\";\n  Bezier2[\"Ease\"] = \"ease\";\n  Bezier2[\"EaseIn\"] = \"ease-in\";\n  Bezier2[\"EaseOut\"] = \"ease-out\";\n  Bezier2[\"EaseInOut\"] = \"ease-in-out\";\n})(Bezier || (Bezier = {}));\nvar BezierDefaults = {\n  curve: Bezier.Ease,\n  duration: 1\n};\nfunction controlPointsForCurve(curve) {\n  switch (curve) {\n    case Bezier.Linear:\n      return [0, 0, 1, 1];\n    case Bezier.Ease:\n      return [0.25, 0.1, 0.25, 1];\n    case Bezier.EaseIn:\n      return [0.42, 0, 1, 1];\n    case Bezier.EaseOut:\n      return [0, 0, 0.58, 1];\n    case Bezier.EaseInOut:\n      return [0.42, 0, 0.58, 1];\n  }\n}\nvar BezierAnimator = class {\n  constructor(options, interpolation) {\n    this.interpolation = interpolation;\n    this.progress = 0;\n    this.next = (delta2) => {\n      const { duration } = this.options;\n      this.progress += delta2 / duration;\n      const value = this.unitBezier.solve(this.progress, this.solveEpsilon(duration));\n      this.current = this.interpolator(value);\n      return this.current;\n    };\n    this.options = { ...BezierDefaults, ...options };\n    let controlPoints;\n    if (typeof this.options.curve === \"string\") {\n      controlPoints = controlPointsForCurve(this.options.curve);\n    } else {\n      controlPoints = this.options.curve;\n    }\n    const [p1x, p1y, p2x, p2y] = controlPoints;\n    this.unitBezier = new UnitBezier(Point(p1x, p1y), Point(p2x, p2y));\n  }\n  setFrom(value) {\n    this.current = value;\n    this.updateInterpolator();\n  }\n  setTo(value) {\n    this.destination = value;\n    this.updateInterpolator();\n  }\n  isReady() {\n    return this.interpolator !== void 0;\n  }\n  updateInterpolator() {\n    if (this.current === void 0 || this.destination === void 0) {\n      return;\n    }\n    this.interpolator = this.interpolation.interpolate(this.current, this.destination);\n  }\n  isFinished() {\n    return this.progress >= 1;\n  }\n  solveEpsilon(duration) {\n    return 1 / (200 * duration);\n  }\n};\nvar UnitBezier = class {\n  constructor(point1, point2) {\n    this.c = Point.multiply(point1, 3);\n    this.b = Point.subtract(Point.multiply(Point.subtract(point2, point1), 3), this.c);\n    this.a = Point.subtract(Point.subtract(Point(1, 1), this.c), this.b);\n  }\n  solve(x, epsilon2) {\n    return this.sampleY(this.solveForT(x, epsilon2));\n  }\n  sampleX(t) {\n    return ((this.a.x * t + this.b.x) * t + this.c.x) * t;\n  }\n  sampleY(t) {\n    return ((this.a.y * t + this.b.y) * t + this.c.y) * t;\n  }\n  sampleDerivativeX(t) {\n    return (3 * this.a.x * t + 2 * this.b.x) * t + this.c.x;\n  }\n  solveForT(x, epsilon2) {\n    let t0, t1, t2, x2, d2, i;\n    t2 = x;\n    for (i = 0; i < 8; ++i) {\n      x2 = this.sampleX(t2) - x;\n      if (Math.abs(x2) < epsilon2)\n        return t2;\n      d2 = this.sampleDerivativeX(t2);\n      if (Math.abs(d2) < epsilon2)\n        break;\n      t2 = t2 - x2 / d2;\n    }\n    t0 = 0;\n    t1 = 1;\n    t2 = x;\n    if (t2 < t0)\n      return t0;\n    if (t2 > t1)\n      return t1;\n    while (t0 < t1) {\n      x2 = this.sampleX(t2);\n      if (Math.abs(x2 - x) < epsilon2)\n        return t2;\n      if (x > x2)\n        t0 = t2;\n      else\n        t1 = t2;\n      t2 = (t1 - t0) * 0.5 + t0;\n    }\n    return t2;\n  }\n};\n\n// src/animation/FramerAnimation.ts\nvar DefaultDeprecatedAnimationOptions = {\n  precalculate: false,\n  colorModel: ColorMixModelType.HUSL\n};\nvar FramerAnimation = class {\n  constructor(target, from, to, animatorClass, options, driverClass = MainLoopAnimationDriver) {\n    this.playStateSource = \"idle\";\n    this.readyPromise = Promise.resolve();\n    this.resetFinishedPromise();\n    const deprecatedAnimationOptions = { ...DefaultDeprecatedAnimationOptions };\n    const animatorOptions = {};\n    if (options) {\n      Object.assign(deprecatedAnimationOptions, options);\n      Object.assign(animatorOptions, options);\n    }\n    let interpolation;\n    if (deprecatedAnimationOptions.customInterpolation) {\n      interpolation = deprecatedAnimationOptions.customInterpolation;\n    } else {\n      interpolation = new ValueInterpolation(options);\n    }\n    let animator;\n    if (!animatorClass) {\n      animator = new BezierAnimator({}, interpolation);\n    } else {\n      animator = new animatorClass(animatorOptions, interpolation);\n    }\n    if (deprecatedAnimationOptions.precalculate) {\n      animator = new PrecalculatedAnimator({ animator });\n    }\n    animator.setFrom(from);\n    animator.setTo(to);\n    const updateCallback = (value) => {\n      FramerAnimation.driverCallbackHandler(target, value);\n    };\n    const finishedCallback = (isFinished) => {\n      if (isFinished) {\n        FramerAnimation.driverCallbackHandler(target, to);\n        if (this.playStateSource === \"running\") {\n          this.playStateValue = \"finished\";\n        }\n      }\n    };\n    this.driver = new driverClass(animator, updateCallback, finishedCallback);\n  }\n  static driverCallbackHandler(target, value) {\n    if (isAnimatable2(target) || isMotionValue2(target)) {\n      target.set(value);\n    } else {\n      const targetObject = target;\n      Animatable.transaction((update) => {\n        for (const key6 in targetObject) {\n          const targetValue = targetObject[key6];\n          if (isAnimatable2(targetValue)) {\n            update(targetValue, value[key6]);\n          } else {\n            targetObject[key6] = value[key6];\n          }\n        }\n      });\n    }\n  }\n  get playStateValue() {\n    return this.playStateSource;\n  }\n  set playStateValue(value) {\n    if (value !== this.playStateSource) {\n      const oldValue = value;\n      this.playStateSource = value;\n      switch (value) {\n        case \"idle\":\n          if (oldValue === \"running\") {\n            this.oncancel && this.oncancel();\n          }\n          this.readyResolve && this.readyResolve();\n          this.resetReadyPromise();\n          break;\n        case \"finished\":\n          if (oldValue === \"idle\") {\n            console.warn(\"Bad state transition\");\n            break;\n          }\n          this.onfinish && this.onfinish();\n          this.finishedResolve && this.finishedResolve();\n          break;\n        case \"running\":\n          this.resetReadyPromise();\n          break;\n      }\n      if (oldValue === \"finished\") {\n        this.resetFinishedPromise();\n      }\n      if (value === \"finished\") {\n        this.playStateValue = \"idle\";\n      }\n    }\n  }\n  get playState() {\n    return this.playStateValue;\n  }\n  resetReadyPromise() {\n    this.readyResolve = null;\n    this.readyPromise = new Promise((resolve, reject) => {\n      this.readyResolve = resolve;\n    });\n  }\n  get ready() {\n    return this.readyPromise;\n  }\n  resetFinishedPromise() {\n    this.finishedResolve = null;\n    this.finishedReject = null;\n    this.finishedPromise = new Promise((resolve, reject) => {\n      this.finishedResolve = resolve;\n      this.finishedReject = reject;\n    });\n    this.finishedPromise.catch((reason) => {\n    });\n  }\n  get finished() {\n    return this.finishedPromise;\n  }\n  play() {\n    this.playStateValue = \"running\";\n    this.driver.play();\n  }\n  cancel() {\n    if (this.playStateValue !== \"running\") {\n      return;\n    }\n    this.driver.cancel();\n    if (this.playState !== \"idle\") {\n      const reason = \"AbortError\";\n      this.finishedReject && this.finishedReject(reason);\n    }\n    this.playStateValue = \"idle\";\n  }\n  finish() {\n    if (this.playStateSource === \"running\") {\n      this.playStateValue = \"finished\";\n      this.driver.finish();\n    }\n  }\n  isFinished() {\n    return this.playStateValue === \"finished\";\n  }\n};\n\n// src/animation/animate.ts\nfunction deprecatedAnimate(from, to, animator, options) {\n  deprecationWarning(\"animate()\", \"2.0.0\", \"the new animation API (https://www.framer.com/api/animation/)\");\n  const target = from;\n  let fromValue;\n  if (isAnimatable2(from) || isMotionValue2(from)) {\n    fromValue = from.get();\n  } else {\n    fromValue = Animatable.objectToValues(from);\n  }\n  const animation = new FramerAnimation(target, fromValue, to, animator, options);\n  animation.play();\n  return animation;\n}\nfunction animate3(from, to, animatorOrTransition, options) {\n  return isAnimatable2(from) ? deprecatedAnimate(from, to, animatorOrTransition, options) : animate2(from, to, animatorOrTransition);\n}\n(function(animate4) {\n  function spring2(from, to, options) {\n    return animate4(from, to, SpringAnimator, options);\n  }\n  animate4.spring = spring2;\n  function bezier(from, to, options) {\n    return animate4(from, to, BezierAnimator, options);\n  }\n  animate4.bezier = bezier;\n  function linear2(from, to, options) {\n    return animate4.bezier(from, to, { ...options, curve: Bezier.Linear });\n  }\n  animate4.linear = linear2;\n  function ease(from, to, options) {\n    return animate4.bezier(from, to, { ...options, curve: Bezier.Ease });\n  }\n  animate4.ease = ease;\n  function easeIn2(from, to, options) {\n    return animate4.bezier(from, to, { ...options, curve: Bezier.EaseIn });\n  }\n  animate4.easeIn = easeIn2;\n  function easeOut2(from, to, options) {\n    return animate4.bezier(from, to, { ...options, curve: Bezier.EaseOut });\n  }\n  animate4.easeOut = easeOut2;\n  function easeInOut2(from, to, options) {\n    return animate4.bezier(from, to, { ...options, curve: Bezier.EaseInOut });\n  }\n  animate4.easeInOut = easeInOut2;\n})(animate3 || (animate3 = {}));\n\n// src/render/utils/getConfigFromURL.ts\nfunction getConfigFromPreviewURL(windowURLString = safeWindow.location.href) {\n  if (!windowURLString) {\n    throw new Error(`getConfigFromURL() called without url argument (location.href = \"${safeWindow.location.href}\")`);\n  }\n  const params = new URL(windowURLString).searchParams;\n  const imageBaseURL = params.get(\"imageBaseURL\") || \"\";\n  const projectURL = params.get(\"projectURL\") || \"\";\n  const showConsole = params.get(\"console\") === \"1\";\n  const disableDevice = params.get(\"device\") === \"0\";\n  return { imageBaseURL, projectURL, showConsole, disableDevice };\n}\nfunction getConfigFromVekterURL(windowURLString = safeWindow.location.href) {\n  if (!windowURLString) {\n    throw new Error(`getConfigFromURL() called without url argument (location.href = \"${safeWindow.location.href}\")`);\n  }\n  const hash2 = decodeURIComponent(new URL(windowURLString).hash.slice(1));\n  const [documentURL, imageBaseURL, projectURL] = hash2.split(\"#&#\");\n  return { documentURL, imageBaseURL, projectURL };\n}\n\n// src/render/assetResolver/serverURL.ts\nfunction parseURL(url, base) {\n  try {\n    return typeof base === \"undefined\" ? new URL(url) : new URL(url, base);\n  } catch (err) {\n    return null;\n  }\n}\nvar flatten = (arrays) => [].concat.apply([], arrays);\nfunction joinPaths(paths) {\n  let res = \"\";\n  for (const path of paths) {\n    if (!path)\n      continue;\n    if (res.length > 0 && !res.endsWith(\"/\")) {\n      res += \"/\";\n    }\n    if (Array.isArray(path)) {\n      res += joinPaths(path);\n    } else {\n      res += encodeURIComponent(path).replace(/%2F/g, \"/\");\n    }\n  }\n  return res;\n}\nfunction serverURL(...paths) {\n  const notEmptyPaths = flatten(paths).filter(Boolean);\n  if (notEmptyPaths.length === 1 && parseURL(notEmptyPaths[0])) {\n    return notEmptyPaths[0];\n  }\n  const path = joinPaths(paths);\n  const resolvedAsset = runtime.assetResolver(path, {\n    isFramerResourceURL: true,\n    isExport: RenderTarget.current() === RenderTarget.export\n  });\n  return resolvedAsset || \"\";\n}\n\n// src/utils/internalId.ts\nvar keys = new Map();\nvar InternalID = class {\n  constructor(id) {\n    this.id = id;\n    this._link = null;\n    this._urllink = null;\n  }\n  add(str) {\n    return InternalID.forKey(this.id + str);\n  }\n  toString() {\n    return this.id;\n  }\n  get link() {\n    const res = this._link;\n    if (res)\n      return res;\n    return this._link = \"#\" + this.id;\n  }\n  get urlLink() {\n    const res = this._urllink;\n    if (res)\n      return res;\n    return this._urllink = \"url(#\" + this.id + \")\";\n  }\n  static forKey(key6) {\n    let res = keys.get(key6);\n    if (res)\n      return res;\n    res = new InternalID(\"a\" + (1e3 + keys.size) + \"z\");\n    keys.set(key6, res);\n    return res;\n  }\n};\n\n// src/render/utils/elementPropertiesForGradient.ts\nfunction elementPropertiesForLinearGradient(gradient, id) {\n  return {\n    id: `id${id}g${LinearGradient.hash(gradient)}`,\n    angle: gradient.angle - 90,\n    stops: gradientColorStops(gradient).map((stop) => ({\n      color: stop.value,\n      alpha: ConvertColor.getAlpha(stop.value) * gradient.alpha,\n      position: stop.position\n    }))\n  };\n}\nfunction elementPropertiesForRadialGradient(gradient, id) {\n  return {\n    id: `id${id}g${RadialGradient.hash(gradient)}`,\n    widthFactor: gradient.widthFactor,\n    heightFactor: gradient.heightFactor,\n    centerAnchorX: gradient.centerAnchorX,\n    centerAnchorY: gradient.centerAnchorY,\n    stops: gradientColorStops(gradient).map((stop) => ({\n      color: stop.value,\n      alpha: ConvertColor.getAlpha(stop.value) * gradient.alpha,\n      position: stop.position\n    }))\n  };\n}\n\n// src/render/utils/dom.ts\nvar frameFromElement = (element) => {\n  const frame2 = Rect.fromRect(element.getBoundingClientRect());\n  frame2.x = frame2.x + safeWindow.scrollX;\n  frame2.y = frame2.y + safeWindow.scrollY;\n  return frame2;\n};\nvar frameFromElements = (elements) => {\n  return Rect.merge(...elements.map(frameFromElement));\n};\nvar convertToPageFrame = (frame2, element) => {\n  const point = convertToPagePoint(frame2, element);\n  return {\n    x: point.x,\n    y: point.y,\n    width: frame2.width,\n    height: frame2.height\n  };\n};\nvar convertFromPageFrame = (frame2, element) => {\n  const point = convertFromPagePoint(frame2, element);\n  return {\n    x: point.x,\n    y: point.y,\n    width: frame2.width,\n    height: frame2.height\n  };\n};\nvar getPageFrame = (element) => {\n  const rect = element.getBoundingClientRect();\n  return {\n    x: rect.left + safeWindow.scrollX,\n    y: rect.top + safeWindow.scrollY,\n    width: rect.width,\n    height: rect.height\n  };\n};\nvar fromEventForPage = (event) => {\n  return {\n    x: event.pageX,\n    y: event.pageY\n  };\n};\nvar fromEventForClient = (event) => {\n  return {\n    x: event.clientX,\n    y: event.clientY\n  };\n};\nvar convertToPagePoint = (point, element) => {\n  const frame2 = getPageFrame(element);\n  return {\n    x: point.x + frame2.x,\n    y: point.y + frame2.y\n  };\n};\nvar convertFromPagePoint = (point, element) => {\n  const frame2 = getPageFrame(element);\n  return {\n    x: point.x - frame2.x,\n    y: point.y - frame2.y\n  };\n};\nvar dispatchKeyDownEvent = (keyCode, options = {}) => {\n  const keyboardEvent = new KeyboardEvent(\"keydown\", {\n    bubbles: true,\n    keyCode,\n    ...options\n  });\n  const activeElement = document.activeElement;\n  if (activeElement) {\n    activeElement.dispatchEvent(keyboardEvent);\n  }\n};\nvar DOM = {\n  frameFromElement,\n  frameFromElements,\n  convertToPageFrame,\n  convertFromPageFrame,\n  getPageFrame,\n  fromEventForPage,\n  fromEventForClient,\n  convertToPagePoint,\n  convertFromPagePoint\n};\n\n// src/render/traits/Shape.ts\nvar key4 = \"calculatedPaths\";\nfunction withShape(target) {\n  return key4 in target;\n}\n\n// src/render/utils/gradientForShape.tsx\nfunction gradientForShape(nodeId, node) {\n  if (LinearGradient.isLinearGradient(node.fill)) {\n    return elementPropertiesForLinearGradient(node.fill, nodeId);\n  }\n  if (RadialGradient.isRadialGradient(node.fill)) {\n    return elementPropertiesForRadialGradient(node.fill, nodeId);\n  }\n  return void 0;\n}\n\n// src/render/utils/throttle.ts\nfunction throttle(fn, time3) {\n  let previous = 0;\n  let timeout;\n  const later = (...args) => {\n    previous = Date.now();\n    timeout = void 0;\n    fn(...args);\n  };\n  return (...args) => {\n    const now = Date.now();\n    const remaining = time3 - (now - previous);\n    if (remaining <= 0 || remaining > time3) {\n      if (timeout) {\n        safeWindow.clearTimeout(timeout);\n        timeout = void 0;\n      }\n      previous = now;\n      fn(...args);\n    } else if (!timeout) {\n      timeout = safeWindow.setTimeout(later, remaining, ...args);\n    }\n  };\n}\n\n// ../app/assets/src/assetReference.ts\nvar mediaType = \"framer/asset-reference,\";\nfunction isAssetReference(value) {\n  return value.startsWith(`data:${mediaType}`);\n}\n\n// src/render/utils/imageUrlForAsset.ts\nfunction imageUrlForAsset(asset, size2) {\n  var _a;\n  if (/^\\w+:/.test(asset) && !isAssetReference(asset))\n    return asset;\n  if (typeof size2 !== \"number\")\n    size2 = void 0;\n  else if (size2 <= 512)\n    size2 = 512;\n  else if (size2 <= 1024)\n    size2 = 1024;\n  else if (size2 <= 2048)\n    size2 = 2048;\n  else\n    size2 = 4096;\n  const isExport = RenderTarget.current() === RenderTarget.export;\n  return (_a = runtime.assetResolver(asset, { size: size2, isExport })) != null ? _a : \"\";\n}\n\n// src/render/utils/imagePatternPropsForFill.tsx\nfunction imagePatternPropsForFill(fill, frame2, id) {\n  fill = Animatable.get(fill, \"#09F\");\n  if (!BackgroundImage.isImageObject(fill))\n    return void 0;\n  if (!fill.pixelWidth || !fill.pixelHeight)\n    return void 0;\n  const imageWidth = fill.pixelWidth;\n  const imageHeight = fill.pixelHeight;\n  let transform2;\n  const { fit } = fill;\n  if (fit === \"fill\" || fit === \"fit\" || !fit) {\n    let scaleX = 1;\n    let scaleY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    const imageRatio = imageWidth / imageHeight;\n    const realWidth = frame2.height * imageRatio;\n    const realHeight = frame2.width / imageRatio;\n    const validScaleX = realWidth / frame2.width;\n    const validScaleY = realHeight / frame2.height;\n    if (fit === \"fill\" || !fit ? validScaleY > validScaleX : validScaleY < validScaleX) {\n      scaleY = validScaleY;\n      offsetY = (1 - validScaleY) / 2;\n    } else {\n      scaleX = validScaleX;\n      offsetX = (1 - validScaleX) / 2;\n    }\n    transform2 = `translate(${offsetX}, ${offsetY}) scale(${scaleX}, ${scaleY})`;\n  }\n  const imageId = `id${id}g${\"-fillImage\"}`;\n  return { id: imageId, path: fill.src, transform: transform2 };\n}\n\n// src/render/componentLoader/definition.ts\nfunction isDesignDefinition(d) {\n  return d.type === \"master\";\n}\nfunction isOverride(d) {\n  return d.type === \"override\";\n}\nfunction isReactDefinition(d) {\n  return d.type !== \"master\";\n}\n\n// src/render/componentLoader/package.ts\nvar localPackageFallbackIdentifier = \"|local|\";\n\n// src/render/utils/annotateTypeOnStringify.ts\nfunction annotateTypeOnStringify(ctor, typeName) {\n  const existingToJSON = ctor.prototype.toJSON;\n  ctor.prototype.toJSON = function() {\n    const base = existingToJSON ? existingToJSON.apply(this) : this;\n    return Object.assign({}, base, { __type__: typeName });\n  };\n  return ctor;\n}\nfunction isOfAnnotatedType(object, typeName) {\n  return object && object.__type__ && object.__type__ === typeName;\n}\n\n// src/render/types/PathSegment.ts\nvar PathSegment = class {\n  constructor(value) {\n    this.__class = \"PathSegment\";\n    this.x = 0;\n    this.y = 0;\n    this.handleMirroring = \"straight\";\n    this.handleOutX = 0;\n    this.handleOutY = 0;\n    this.handleInX = 0;\n    this.handleInY = 0;\n    this.radius = 0;\n    if (value) {\n      Object.assign(this, value);\n    }\n  }\n  merge(value) {\n    return Object.assign(Object.create(Object.getPrototypeOf(this)), this, value);\n  }\n};\nPathSegment.displayName = \"WithClassDiscriminatorMixin(PathSegment)\";\nPathSegment.prototype.__class = \"PathSegment\";\n(function(PathSegment2) {\n  PathSegment2.point = (pathSegment) => {\n    return { x: pathSegment.x, y: pathSegment.y };\n  };\n  PathSegment2.handleOut = (pathSegment) => {\n    return { x: pathSegment.handleOutX, y: pathSegment.handleOutY };\n  };\n  PathSegment2.handleIn = (pathSegment) => {\n    return { x: pathSegment.handleInX, y: pathSegment.handleInY };\n  };\n  PathSegment2.calculatedHandleOut = (pathSegment) => {\n    switch (pathSegment.handleMirroring) {\n      case \"symmetric\":\n      case \"disconnected\":\n      case \"asymmetric\":\n        return Point.add(PathSegment2.point(pathSegment), PathSegment2.handleOut(pathSegment));\n      default:\n        return { x: pathSegment.x, y: pathSegment.y };\n    }\n  };\n  PathSegment2.calculatedHandleIn = (pathSegment) => {\n    switch (pathSegment.handleMirroring) {\n      case \"symmetric\":\n        return Point.subtract(PathSegment2.point(pathSegment), PathSegment2.handleOut(pathSegment));\n      case \"disconnected\":\n      case \"asymmetric\":\n        return Point.add(PathSegment2.point(pathSegment), PathSegment2.handleIn(pathSegment));\n      default:\n        return PathSegment2.point(pathSegment);\n    }\n  };\n  PathSegment2.curveDefault = (points, index) => {\n    if (points.length > 2) {\n      let pointBefore;\n      let pointAfter;\n      if (index === 0) {\n        pointBefore = points[points.length - 1];\n      } else {\n        pointBefore = points[index - 1];\n      }\n      if (index === points.length - 1) {\n        pointAfter = points[0];\n      } else {\n        pointAfter = points[index + 1];\n      }\n      const delta2 = Point.subtract(PathSegment2.point(pointAfter), PathSegment2.point(pointBefore));\n      return { x: delta2.x / 4, y: delta2.y / 4 };\n    }\n    return { x: 10, y: 10 };\n  };\n})(PathSegment || (PathSegment = {}));\n\n// src/render/traits/Path.ts\nvar key5 = \"pathSegments\";\nfunction withPath(target) {\n  return key5 in target;\n}\nvar pathDefaults = {\n  pathSegments: [],\n  pathClosed: false\n};\nfunction toSVGPath(withPaths, translate = { x: 0, y: 0 }, canvasMode = RenderTarget.canvas) {\n  let pathElements = [];\n  let paths = [];\n  if (Array.isArray(withPaths)) {\n    paths = withPaths;\n  } else {\n    paths = [withPaths];\n  }\n  paths.forEach((path, index) => {\n    const { pathClosed, pathSegments } = path;\n    const segmentCount = pathSegments.length;\n    if (segmentCount === 0)\n      return \"\";\n    for (let i = 0; i < segmentCount; i++) {\n      const segment = pathSegments[i];\n      let nextSegment;\n      let prevSegment;\n      const isFirstSegment = i === 0;\n      const isLastSegment = i === segmentCount - 1;\n      if (!isLastSegment) {\n        nextSegment = pathSegments[i + 1];\n      } else if (pathClosed) {\n        nextSegment = pathSegments[0];\n      }\n      if (!isFirstSegment) {\n        prevSegment = pathSegments[i - 1];\n      } else if (pathClosed) {\n        prevSegment = pathSegments[segmentCount - 1];\n      }\n      if (i === 0) {\n        pathElements.push(\"M\");\n      } else if (prevSegment && isStraightCurve(prevSegment, segment)) {\n        pathElements.push(\"L\");\n      }\n      pathElements.push(segment.x + translate.x, segment.y + translate.y);\n      if (nextSegment && !isStraightCurve(segment, nextSegment)) {\n        const handleOut = PathSegment.calculatedHandleOut(segment);\n        const handleIn = PathSegment.calculatedHandleIn(nextSegment);\n        pathElements.push(\"C\", handleOut.x + translate.x, handleOut.y + translate.y, handleIn.x + translate.x, handleIn.y + translate.y);\n      }\n      if (isLastSegment && nextSegment) {\n        if (isStraightCurve(segment, nextSegment)) {\n          pathElements.push(\"Z\");\n        } else {\n          pathElements.push(nextSegment.x + translate.x, nextSegment.y + translate.y, \"Z\");\n        }\n      }\n    }\n  });\n  if (canvasMode === RenderTarget.export || canvasMode === RenderTarget.preview) {\n    pathElements = pathElements.map((value) => isFiniteNumber(value) ? roundedNumberString(value, 3) : value);\n  }\n  return pathElements.join(\" \");\n}\nfunction isStraightCurve(fromSegment, toSegment) {\n  const fromStraight = fromSegment.handleMirroring === \"straight\" || fromSegment.handleOutX === 0 && fromSegment.handleOutY === 0;\n  const toStraight = toSegment.handleMirroring === \"straight\" || toSegment.handleInX === 0 && toSegment.handleInY === 0;\n  return fromStraight && toStraight;\n}\n\n// src/render/types/Size.ts\nfunction Size(width, height) {\n  return { width, height };\n}\n(function(Size2) {\n  Size2.equals = (sizeA, sizeB) => {\n    if (sizeA === sizeB)\n      return true;\n    if (!sizeA || !sizeB)\n      return false;\n    return sizeA.width === sizeB.width && sizeA.height === sizeB.height;\n  };\n  Size2.update = (fromSize, toSize, keepAspectRatio = false) => {\n    let { width, height } = fromSize;\n    const sizeRatio = width / height;\n    width = toSize.width !== void 0 ? toSize.width : width;\n    height = toSize.height !== void 0 ? toSize.height : height;\n    if (keepAspectRatio) {\n      if (toSize.width === void 0 && toSize.height !== void 0) {\n        width = toSize.height * sizeRatio;\n      }\n      if (toSize.width !== void 0 && toSize.height === void 0 && sizeRatio !== 0) {\n        height = toSize.width / sizeRatio;\n      }\n    }\n    return { width, height };\n  };\n  function subtract(sizeA, sizeB) {\n    return {\n      width: Math.max(0, sizeA.width - sizeB.width),\n      height: Math.max(0, sizeA.height - sizeB.height)\n    };\n  }\n  Size2.subtract = subtract;\n  Size2.zero = Size2(0, 0);\n  Size2.isZero = function(size2) {\n    return size2 === Size2.zero || size2.width === 0 && size2.height === 0;\n  };\n  Size2.defaultIfZero = function(width, height, size2) {\n    if (Size2.isZero(size2)) {\n      return Size2(width, height);\n    }\n    return size2;\n  };\n})(Size || (Size = {}));\n\n// src/render/types/Line.ts\nfunction Line(a2, b2) {\n  return { a: a2, b: b2 };\n}\n(function(Line2) {\n  function intersection(lineA, lineB) {\n    const x1 = lineA.a.x;\n    const y1 = lineA.a.y;\n    const x2 = lineA.b.x;\n    const y2 = lineA.b.y;\n    const x3 = lineB.a.x;\n    const y3 = lineB.a.y;\n    const x4 = lineB.b.x;\n    const y4 = lineB.b.y;\n    const d = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\n    if (d === 0) {\n      return null;\n    }\n    const xi = ((x3 - x4) * (x1 * y2 - y1 * x2) - (x1 - x2) * (x3 * y4 - y3 * x4)) / d;\n    const yi = ((y3 - y4) * (x1 * y2 - y1 * x2) - (y1 - y2) * (x3 * y4 - y3 * x4)) / d;\n    return { x: xi, y: yi };\n  }\n  Line2.intersection = intersection;\n  Line2.isOrthogonal = (line) => {\n    return line.a.x === line.b.x || line.a.y === line.b.y;\n  };\n  Line2.perpendicular = (line, pointOnLine) => {\n    const deltaX = line.a.x - line.b.x;\n    const deltaY = line.a.y - line.b.y;\n    const pointB = Point(pointOnLine.x - deltaY, pointOnLine.y + deltaX);\n    return Line2(pointB, pointOnLine);\n  };\n  function projectPoint(line, point) {\n    const perp = Line2.perpendicular(line, point);\n    return intersection(line, perp);\n  }\n  Line2.projectPoint = projectPoint;\n})(Line || (Line = {}));\n\n// src/render/presentation/Image.tsx\n\n\nvar Image2 = (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(function Image3(props, ref) {\n  const { background, children, ...rest } = props;\n  const style = { ...rest.style };\n  if (background) {\n    delete style.background;\n  }\n  return /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(motion.div, {\n    ...rest,\n    style,\n    ref\n  }, background && background.src ? /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(BackgroundImageComponent, {\n    image: background\n  }) : null, children);\n});\n\n// src/render/presentation/SVG.tsx\n\n\n// src/render/presentation/ImagePatternElement.tsx\n\nvar ImagePatternElement = class extends react__WEBPACK_IMPORTED_MODULE_0__.Component {\n  render() {\n    const { id, path, transform: transform2 } = this.props;\n    const xlinkHref = imageUrlForAsset(path);\n    return /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"pattern\", {\n      id,\n      width: \"100%\",\n      height: \"100%\",\n      patternContentUnits: \"objectBoundingBox\"\n    }, /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"image\", {\n      key: xlinkHref,\n      width: 1,\n      height: 1,\n      xlinkHref,\n      preserveAspectRatio: \"none\",\n      transform: transform2\n    }));\n  }\n};\n\n// src/render/presentation/SVG.tsx\nfunction SVG(props) {\n  const parentSize = useParentSize();\n  const layoutId = useLayoutId2(props);\n  const layoutRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n  useMeasureLayout(props, layoutRef);\n  return /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(SVGComponent, {\n    ...props,\n    innerRef: layoutRef,\n    parentSize,\n    layoutId\n  });\n}\nfunction sizeSVG(container, props) {\n  var _a, _b;\n  const div = container.current;\n  if (!div)\n    return;\n  const { withExternalLayout, parentSize } = props;\n  const canUseCalculatedOnCanvasSize = !withExternalLayout && constraintsEnabled(props) && parentSize !== ParentSizeState.Disabled && parentSize !== ParentSizeState.DisabledForCurrentLevel;\n  if (canUseCalculatedOnCanvasSize)\n    return;\n  const svg = div.firstElementChild;\n  if (!svg || !(svg instanceof SVGSVGElement)) {\n    return;\n  }\n  const { intrinsicWidth, intrinsicHeight, _constraints } = props;\n  if (((_a = svg.viewBox.baseVal) == null ? void 0 : _a.width) === 0 && ((_b = svg.viewBox.baseVal) == null ? void 0 : _b.height) === 0 && isFiniteNumber(intrinsicWidth) && isFiniteNumber(intrinsicHeight)) {\n    svg.setAttribute(\"viewBox\", `0 0 ${intrinsicWidth} ${intrinsicHeight}`);\n  }\n  if (_constraints && _constraints.aspectRatio) {\n    svg.setAttribute(\"preserveAspectRatio\", \"\");\n  } else {\n    svg.setAttribute(\"preserveAspectRatio\", \"none\");\n  }\n  svg.setAttribute(\"width\", \"100%\");\n  svg.setAttribute(\"height\", \"100%\");\n}\nvar _SVGComponent = class extends Layer {\n  constructor() {\n    super(...arguments);\n    this.container = (0,react__WEBPACK_IMPORTED_MODULE_0__.createRef)();\n    this.svgElement = (0,react__WEBPACK_IMPORTED_MODULE_0__.createRef)();\n  }\n  static frame(props) {\n    return calculateRect(props, props.parentSize || ParentSizeState.Unknown);\n  }\n  getPrefixedSVG(svg, id) {\n    if (this.previouslyPrefixedSVG && svg === this.previouslyPrefixedSVG.svg && id === this.previouslyPrefixedSVG.id) {\n      return this.previouslyPrefixedSVGResult;\n    }\n    const prefixedSVG = prefixIdsInSVG(svg, id);\n    this.previouslyPrefixedSVGResult = prefixedSVG;\n    this.previouslyPrefixedSVG = { svg, id };\n    return prefixedSVG;\n  }\n  get frame() {\n    return calculateRect(this.props, this.props.parentSize || ParentSizeState.Unknown);\n  }\n  componentDidMount() {\n    sizeSVG(this.container, this.props);\n  }\n  componentDidUpdate(prevProps) {\n    super.componentDidUpdate(prevProps);\n    const { fill } = this.props;\n    if (BackgroundImage.isImageObject(fill) && BackgroundImage.isImageObject(prevProps.fill) && fill.src !== prevProps.fill.src) {\n      resetSetStyle(this.svgElement.current, \"fill\", null, false);\n    }\n    sizeSVG(this.container, this.props);\n  }\n  collectLayout(style, innerStyle) {\n    if (this.props.withExternalLayout) {\n      innerStyle.width = innerStyle.height = \"inherit\";\n      return;\n    }\n    const frame2 = this.frame;\n    const { rotation, intrinsicWidth, intrinsicHeight, width, height } = this.props;\n    const rotate = Animatable.getNumber(rotation);\n    style.opacity = isFiniteNumber(this.props.opacity) ? this.props.opacity : 1;\n    if (RenderTarget.hasRestrictions() && frame2) {\n      Object.assign(style, {\n        transform: `translate(${frame2.x}px, ${frame2.y}px) rotate(${rotate.toFixed(4)}deg)`,\n        width: `${frame2.width}px`,\n        height: `${frame2.height}px`\n      });\n      if (constraintsEnabled(this.props)) {\n        style.position = \"absolute\";\n      }\n      const xFactor = frame2.width / (intrinsicWidth || 1);\n      const yFactor = frame2.height / (intrinsicHeight || 1);\n      innerStyle.transformOrigin = \"top left\";\n      const { zoom, target } = RenderEnvironment;\n      if (target === RenderTarget.export) {\n        const zoomFactor = zoom > 1 ? zoom : 1;\n        innerStyle.transform = `scale(${xFactor * zoomFactor}, ${yFactor * zoomFactor})`;\n        innerStyle.zoom = 1 / zoomFactor;\n      } else {\n        innerStyle.transform = `scale(${xFactor}, ${yFactor})`;\n      }\n      if (intrinsicWidth && intrinsicHeight) {\n        innerStyle.width = intrinsicWidth;\n        innerStyle.height = intrinsicHeight;\n      }\n    } else {\n      const { left, right, top, bottom } = this.props;\n      Object.assign(style, {\n        left,\n        right,\n        top,\n        bottom,\n        width,\n        height,\n        rotate\n      });\n      Object.assign(innerStyle, {\n        left: 0,\n        top: 0,\n        bottom: 0,\n        right: 0,\n        position: \"absolute\"\n      });\n    }\n  }\n  render() {\n    var _a;\n    if (safeWindow[\"perf\"])\n      safeWindow[\"perf\"].nodeRender();\n    const {\n      id,\n      visible,\n      style,\n      fill,\n      svg,\n      intrinsicHeight,\n      intrinsicWidth,\n      layoutId,\n      className,\n      variants,\n      transition,\n      withExternalLayout,\n      innerRef\n    } = this.props;\n    if (!withExternalLayout && (!visible || !id))\n      return null;\n    const identifier = (_a = id != null ? id : layoutId) != null ? _a : \"svg\";\n    injectComponentCSSRules();\n    const frame2 = this.frame;\n    const size2 = frame2 || { width: intrinsicWidth || 100, height: intrinsicHeight || 100 };\n    const outerStyle = { ...style, imageRendering: \"pixelated\" };\n    const innerStyle = {};\n    this.collectLayout(outerStyle, innerStyle);\n    collectOpacityFromProps(this.props, outerStyle);\n    collectFiltersFromProps(this.props, outerStyle);\n    Layer.applyWillChange(this.props, outerStyle, false);\n    let fillElement = null;\n    if (typeof fill === \"string\" || Color.isColorObject(fill)) {\n      const fillColor = Color.isColorObject(fill) ? fill.initialValue || Color.toRgbString(fill) : fill;\n      outerStyle.fill = fillColor;\n      outerStyle.color = fillColor;\n    } else if (LinearGradient.isLinearGradient(fill)) {\n      const gradient = fill;\n      const gradientId = `${encodeURI(id || \"\")}g${LinearGradient.hash(gradient)}`;\n      outerStyle.fill = `url(#${gradientId})`;\n      const elementProperties = elementPropertiesForLinearGradient(gradient, identifier);\n      fillElement = /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"svg\", {\n        ref: this.svgElement,\n        xmlns: \"http://www.w3.org/2000/svg\",\n        width: \"100%\",\n        height: \"100%\",\n        style: { position: \"absolute\" }\n      }, /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"linearGradient\", {\n        id: gradientId,\n        gradientTransform: `rotate(${elementProperties.angle}, 0.5, 0.5)`\n      }, elementProperties.stops.map((stop, idx) => {\n        return /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"stop\", {\n          key: idx,\n          offset: stop.position,\n          stopColor: stop.color,\n          stopOpacity: stop.alpha\n        });\n      })));\n    } else if (RadialGradient.isRadialGradient(fill)) {\n      const gradient = fill;\n      const gradientId = `${encodeURI(id || \"\")}g${RadialGradient.hash(gradient)}`;\n      outerStyle.fill = `url(#${gradientId})`;\n      const elementProperties = elementPropertiesForRadialGradient(gradient, identifier);\n      fillElement = /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"svg\", {\n        ref: this.svgElement,\n        xmlns: \"http://www.w3.org/2000/svg\",\n        width: \"100%\",\n        height: \"100%\",\n        style: { position: \"absolute\" }\n      }, /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"radialGradient\", {\n        id: gradientId,\n        cy: gradient.centerAnchorY,\n        cx: gradient.centerAnchorX,\n        r: gradient.widthFactor\n      }, elementProperties.stops.map((stop, idx) => {\n        return /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"stop\", {\n          key: idx,\n          offset: stop.position,\n          stopColor: stop.color,\n          stopOpacity: stop.alpha\n        });\n      })));\n    } else if (BackgroundImage.isImageObject(fill)) {\n      const imagePattern = imagePatternPropsForFill(fill, size2, identifier);\n      if (imagePattern) {\n        outerStyle.fill = `url(#${imagePattern.id})`;\n        fillElement = /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"svg\", {\n          ref: this.svgElement,\n          xmlns: \"http://www.w3.org/2000/svg\",\n          xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n          width: \"100%\",\n          height: \"100%\",\n          style: { position: \"absolute\" }\n        }, /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"defs\", null, /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(ImagePatternElement, {\n          ...imagePattern\n        })));\n      }\n    }\n    const dataProps = {\n      \"data-framer-component-type\": \"SVG\"\n    };\n    const hasTransformTemplate = !frame2;\n    if (hasTransformTemplate) {\n      Object.assign(dataProps, layoutHintDataPropsForCenter(this.props.center));\n    }\n    const content = /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, fillElement, /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"div\", {\n      key: BackgroundImage.isImageObject(fill) ? fill.src : \"\",\n      className: \"svgContainer\",\n      style: innerStyle,\n      ref: this.container,\n      dangerouslySetInnerHTML: { __html: this.getPrefixedSVG(svg, identifier) }\n    }));\n    return /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(motion.div, {\n      ...dataProps,\n      layoutId,\n      transformTemplate: hasTransformTemplate ? transformTemplate(this.props.center) : void 0,\n      id,\n      ref: innerRef,\n      style: outerStyle,\n      className,\n      variants,\n      transition\n    }, content);\n  }\n};\nvar SVGComponent = _SVGComponent;\nSVGComponent.supportsConstraints = true;\nSVGComponent.defaultSVGProps = {\n  left: void 0,\n  right: void 0,\n  top: void 0,\n  bottom: void 0,\n  style: void 0,\n  _constraints: {\n    enabled: true,\n    aspectRatio: null\n  },\n  parentSize: ParentSizeState.Unknown,\n  rotation: 0,\n  visible: true,\n  svg: \"\",\n  shadows: []\n};\nSVGComponent.defaultProps = {\n  ...Layer.defaultProps,\n  ..._SVGComponent.defaultSVGProps\n};\nfunction prefixIdsInSVG(svg, prefix) {\n  const domParser = new DOMParser();\n  try {\n    const doc = domParser.parseFromString(svg, \"image/svg+xml\");\n    const el = doc.getElementsByTagName(\"svg\")[0];\n    if (!el)\n      return svg;\n    const sanitizedPrefix = sanitizeString(prefix);\n    recursivelyPrefixId(el, sanitizedPrefix);\n    return el.outerHTML;\n  } catch (error) {\n    throw Error(`Failed to parse SVG: ${error}`);\n  }\n}\nfunction sanitizeString(str) {\n  return str.replace(/[^a-z0-9\\-_:.]|^[^a-z]+/gi, \"\");\n}\nfunction recursivelyPrefixId(el, prefix) {\n  prefixId(el, prefix);\n  const childNodes = Array.from(el.children);\n  childNodes.forEach((node) => {\n    recursivelyPrefixId(node, prefix);\n  });\n}\nfunction prefixId(el, prefix) {\n  const attributes = el.getAttributeNames();\n  attributes.forEach((attr) => {\n    const value = el.getAttribute(attr);\n    if (!value)\n      return;\n    if (attr === \"id\") {\n      el.setAttribute(attr, `${prefix}_${value}`);\n    }\n    if (attr === \"href\" || attr === \"xlink:href\") {\n      const [base, fragmentIdentifier] = value.split(\"#\");\n      if (base)\n        return;\n      el.setAttribute(attr, `#${prefix}_${fragmentIdentifier}`);\n      return;\n    }\n    const URL_REF = \"url(#\";\n    if (value.includes(URL_REF)) {\n      const prefixedValue = value.replace(URL_REF, `${URL_REF}${prefix}_`);\n      el.setAttribute(attr, prefixedValue);\n    }\n  });\n}\n\n// src/render/presentation/Text.tsx\n\n\n\n// src/render/fonts/fonts.ts\nfunction convertToObject(descriptors) {\n  return Object.fromEntries(descriptors.map((descriptor) => [\n    descriptor[0],\n    Object.fromEntries(descriptor[1].map((member) => [\n      member[0],\n      {\n        selector: member[1],\n        weight: member[2]\n      }\n    ]))\n  ]));\n}\nvar safeFonts = {\n  Arial: {\n    Regular: { selector: \"Arial\", weight: void 0 },\n    Black: { selector: \"Arial-Black\", weight: void 0 },\n    Narrow: { selector: \"Arial Narrow\", weight: void 0 },\n    \"Rounded Bold\": { selector: \"Arial Rounded MT Bold\", weight: void 0 }\n  },\n  Avenir: {\n    Book: { selector: \"Avenir\", weight: void 0 },\n    Light: { selector: \"Avenir-Light\", weight: void 0 },\n    Medium: { selector: \"Avenir-Medium\", weight: void 0 },\n    Heavy: { selector: \"Avenir-Heavy\", weight: void 0 },\n    Black: { selector: \"Avenir-Black\", weight: void 0 }\n  },\n  \"Avenir Next\": {\n    Regular: { selector: \"Avenir Next\", weight: void 0 },\n    \"Ultra Light\": { selector: \"AvenirNext-UltraLight\", weight: void 0 },\n    Medium: { selector: \"AvenirNext-Medium\", weight: void 0 },\n    \"Demi Bold\": { selector: \"AvenirNext-DemiBold\", weight: void 0 },\n    Heavy: { selector: \"AvenirNext-Heavy\", weight: void 0 }\n  },\n  \"Avenir Next Condensed\": {\n    Regular: { selector: \"Avenir Next Condensed\", weight: void 0 },\n    \"Ultra Light\": { selector: \"AvenirNextCondensed-UltraLight\", weight: void 0 },\n    Medium: { selector: \"AvenirNextCondensed-Medium\", weight: void 0 },\n    \"Demi Bold\": { selector: \"AvenirNextCondensed-DemiBold\", weight: void 0 },\n    Heavy: { selector: \"AvenirNextCondensed-Heavy\", weight: void 0 }\n  },\n  Baskerville: {\n    Regular: { selector: \"Baskerville\", weight: void 0 },\n    \"Semi Bold\": { selector: \"Baskerville-SemiBold\", weight: void 0 }\n  },\n  \"Bodoni 72\": {\n    Book: { selector: \"Bodoni 72\", weight: void 0 },\n    Oldstyle: { selector: \"Bodoni 72 Oldstyle\", weight: void 0 },\n    Smallcaps: { selector: \"Bodoni 72 Smallcaps\", weight: void 0 }\n  },\n  Courier: { Regular: { selector: \"Courier\", weight: void 0 } },\n  \"Courier New\": { Regular: { selector: \"Courier New\", weight: void 0 } },\n  Futura: {\n    Medium: { selector: \"Futura\", weight: void 0 },\n    Condensed: { selector: \"Futura-CondensedMedium\", weight: void 0 },\n    \"Condensed ExtraBold\": { selector: \"Futura-CondensedExtraBold\", weight: void 0 }\n  },\n  Georgia: { Regular: { selector: \"Georgia\", weight: void 0 } },\n  \"Gill Sans\": {\n    Regular: { selector: \"Gill Sans\", weight: void 0 },\n    Light: { selector: \"GillSans-Light\", weight: void 0 },\n    SemiBold: { selector: \"GillSans-SemiBold\", weight: void 0 },\n    UltraBold: { selector: \"GillSans-UltraBold\", weight: void 0 }\n  },\n  Helvetica: {\n    Regular: { selector: \"Helvetica\", weight: void 0 },\n    Light: { selector: \"Helvetica-Light\", weight: void 0 },\n    Bold: { selector: \"Helvetica-Bold\", weight: void 0 },\n    Oblique: { selector: \"Helvetica-Oblique\", weight: void 0 },\n    \"Light Oblique\": { selector: \"Helvetica-LightOblique\", weight: void 0 },\n    \"Bold Oblique\": { selector: \"Helvetica-BoldOblique\", weight: void 0 }\n  },\n  \"Helvetica Neue\": {\n    Regular: { selector: \"Helvetica Neue\", weight: void 0 },\n    UltraLight: { selector: \"HelveticaNeue-UltraLight\", weight: void 0 },\n    Thin: { selector: \"HelveticaNeue-Thin\", weight: void 0 },\n    Light: { selector: \"HelveticaNeue-Light\", weight: void 0 },\n    Medium: { selector: \"HelveticaNeue-Medium\", weight: void 0 },\n    Bold: { selector: \"HelveticaNeue-Bold\", weight: void 0 },\n    Italic: { selector: \"HelveticaNeue-Italic\", weight: void 0 },\n    \"UltraLight Italic\": { selector: \"HelveticaNeue-UltraLightItalic\", weight: void 0 },\n    \"Thin Italic\": { selector: \"HelveticaNeue-ThinItalic\", weight: void 0 },\n    \"Light Italic\": { selector: \"HelveticaNeue-LightItalic\", weight: void 0 },\n    \"Medium Italic\": { selector: \"HelveticaNeue-MediumItalic\", weight: void 0 },\n    \"Bold Italic\": { selector: \"HelveticaNeue-BoldItalic\", weight: void 0 },\n    \"Condensed Bold\": { selector: \"HelveticaNeue-CondensedBold\", weight: void 0 },\n    \"Condensed Black\": { selector: \"HelveticaNeue-CondensedBlack\", weight: void 0 }\n  },\n  \"Hoefler Text\": { Regular: { selector: \"Hoefler Text\", weight: void 0 } },\n  Impact: { Regular: { selector: \"Impact\", weight: void 0 } },\n  \"Lucida Grande\": { Regular: { selector: \"Lucida Grande\", weight: void 0 } },\n  Menlo: { Regular: { selector: \"Menlo\", weight: void 0 } },\n  Monaco: { Regular: { selector: \"Monaco\", weight: void 0 } },\n  Optima: {\n    Regular: { selector: \"Optima\", weight: void 0 },\n    ExtraBlack: { selector: \"Optima-ExtraBlack\", weight: void 0 }\n  },\n  Palatino: { Regular: { selector: \"Palatino\", weight: void 0 } },\n  \"SF Pro Display\": {\n    Regular: { selector: \"__SF-UI-Display-Regular__\", weight: 400 },\n    Ultralight: { selector: \"__SF-UI-Display-Ultralight__\", weight: 100 },\n    Thin: { selector: \"__SF-UI-Display-Thin__\", weight: 200 },\n    Light: { selector: \"__SF-UI-Display-Light__\", weight: 300 },\n    Medium: { selector: \"__SF-UI-Display-Medium__\", weight: 500 },\n    Semibold: { selector: \"__SF-UI-Display-Semibold__\", weight: 600 },\n    Bold: { selector: \"__SF-UI-Display-Bold__\", weight: 700 },\n    Heavy: { selector: \"__SF-UI-Display-Heavy__\", weight: 800 },\n    Black: { selector: \"__SF-UI-Display-Black__\", weight: 900 },\n    Italic: { selector: \"__SF-UI-Display-Italic__\", weight: 400 },\n    \"Ultralight Italic\": { selector: \"__SF-UI-Display-Ultralight-Italic__\", weight: 100 },\n    \"Thin Italic\": { selector: \"__SF-UI-Display-Thin-Italic__\", weight: 200 },\n    \"Light Italic\": { selector: \"__SF-UI-Display-Light-Italic__\", weight: 300 },\n    \"Medium Italic\": { selector: \"__SF-UI-Display-Medium-Italic__\", weight: 500 },\n    \"Semibold Italic\": { selector: \"__SF-UI-Display-Semibold-Italic__\", weight: 600 },\n    \"Bold Italic\": { selector: \"__SF-UI-Display-Bold-Italic__\", weight: 700 },\n    \"Heavy Italic\": { selector: \"__SF-UI-Display-Heavy-Italic__\", weight: 800 },\n    \"Black Italic\": { selector: \"__SF-UI-Display-Black-Italic__\", weight: 900 }\n  },\n  \"SF Pro Display Condensed\": {\n    Regular: { selector: \"__SF-UI-Display-Condensed-Regular__\", weight: 400 },\n    Ultralight: { selector: \"__SF-UI-Display-Condensed-Ultralight__\", weight: 100 },\n    Thin: { selector: \"__SF-UI-Display-Condensed-Thin__\", weight: 200 },\n    Light: { selector: \"__SF-UI-Display-Condensed-Light__\", weight: 300 },\n    Medium: { selector: \"__SF-UI-Display-Condensed-Medium__\", weight: 500 },\n    Semibold: { selector: \"__SF-UI-Display-Condensed-Semibold__\", weight: 600 },\n    Bold: { selector: \"__SF-UI-Display-Condensed-Bold__\", weight: 700 },\n    Heavy: { selector: \"__SF-UI-Display-Condensed-Heavy__\", weight: 800 },\n    Black: { selector: \"__SF-UI-Display-Condensed-Black__\", weight: 900 }\n  },\n  \"SF Pro Text\": {\n    Regular: { selector: \"__SF-UI-Text-Regular__\", weight: 400 },\n    Light: { selector: \"__SF-UI-Text-Light__\", weight: 200 },\n    Medium: { selector: \"__SF-UI-Text-Medium__\", weight: 500 },\n    Semibold: { selector: \"__SF-UI-Text-Semibold__\", weight: 600 },\n    Bold: { selector: \"__SF-UI-Text-Bold__\", weight: 700 },\n    Heavy: { selector: \"__SF-UI-Text-Heavy__\", weight: 800 },\n    Italic: { selector: \"__SF-UI-Text-Italic__\", weight: 400 },\n    \"Light Italic\": { selector: \"__SF-UI-Text-Light-Italic__\", weight: 200 },\n    \"Medium Italic\": { selector: \"__SF-UI-Text-Medium-Italic__\", weight: 500 },\n    \"Semibold Italic\": { selector: \"__SF-UI-Text-Semibold-Italic__\", weight: 600 },\n    \"Bold Italic\": { selector: \"__SF-UI-Text-Bold-Italic__\", weight: 700 },\n    \"Heavy Italic\": { selector: \"__SF-UI-Text-Heavy-Italic__\", weight: 800 }\n  },\n  \"SF Pro Text Condensed\": {\n    Regular: { selector: \"__SF-UI-Text-Condensed-Regular__\", weight: 400 },\n    Light: { selector: \"__SF-UI-Text-Condensed-Light__\", weight: 200 },\n    Medium: { selector: \"__SF-UI-Text-Condensed-Medium__\", weight: 500 },\n    Semibold: { selector: \"__SF-UI-Text-Condensed-Semibold__\", weight: 600 },\n    Bold: { selector: \"__SF-UI-Text-Condensed-Bold__\", weight: 700 },\n    Heavy: { selector: \"__SF-UI-Text-Condensed-Heavy__\", weight: 800 }\n  },\n  Tahoma: { Regular: { selector: \"Tahoma\", weight: void 0 } },\n  Times: { Regular: { selector: \"Times\", weight: void 0 } },\n  \"Times New Roman\": { Regular: { selector: \"Times New Roman\", weight: void 0 } },\n  Trebuchet: { Regular: { selector: \"Trebuchet MS\", weight: void 0 } },\n  Verdana: { Regular: { selector: \"Verdana\", weight: void 0 } }\n};\nvar typefaceAliases = {\n  \"__SF-Compact-Display-Regular__\": \"SFCompactDisplay-Regular|.SFCompactDisplay-Regular\",\n  \"__SF-Compact-Display-Ultralight__\": \"SFCompactDisplay-Ultralight|.SFCompactDisplay-Ultralight\",\n  \"__SF-Compact-Display-Thin__\": \"SFCompactDisplay-Thin|.SFCompactDisplay-Thin\",\n  \"__SF-Compact-Display-Light__\": \"SFCompactDisplay-Light|.SFCompactDisplay-Light\",\n  \"__SF-Compact-Display-Medium__\": \"SFCompactDisplay-Medium|.SFCompactDisplay-Medium\",\n  \"__SF-Compact-Display-Semibold__\": \"SFCompactDisplay-Semibold|.SFCompactDisplay-Semibold\",\n  \"__SF-Compact-Display-Heavy__\": \"SFCompactDisplay-Heavy|.SFCompactDisplay-Heavy\",\n  \"__SF-Compact-Display-Black__\": \"SFCompactDisplay-Black|.SFCompactDisplay-Black\",\n  \"__SF-Compact-Display-Bold__\": \"SFCompactDisplay-Bold|.SFCompactDisplay-Bold\",\n  \"__SF-UI-Text-Regular__\": \".SFNSText|SFProText-Regular|SFUIText-Regular|.SFUIText\",\n  \"__SF-UI-Text-Light__\": \".SFNSText-Light|SFProText-Light|SFUIText-Light|.SFUIText-Light\",\n  \"__SF-UI-Text-Medium__\": \".SFNSText-Medium|SFProText-Medium|SFUIText-Medium|.SFUIText-Medium\",\n  \"__SF-UI-Text-Semibold__\": \".SFNSText-Semibold|SFProText-Semibold|SFUIText-Semibold|.SFUIText-Semibold\",\n  \"__SF-UI-Text-Bold__\": \".SFNSText-Bold|SFProText-Bold|SFUIText-Bold|.SFUIText-Bold\",\n  \"__SF-UI-Text-Heavy__\": \".SFNSText-Heavy|SFProText-Heavy|.SFUIText-Heavy\",\n  \"__SF-UI-Text-Italic__\": \".SFNSText-Italic|SFProText-Italic|SFUIText-Italic|.SFUIText-Italic\",\n  \"__SF-UI-Text-Light-Italic__\": \".SFNSText-LightItalic|SFProText-LightItalic|SFUIText-LightItalic|.SFUIText-LightItalic\",\n  \"__SF-UI-Text-Medium-Italic__\": \".SFNSText-MediumItalic|SFProText-MediumItalic|SFUIText-MediumItalic|.SFUIText-MediumItalic\",\n  \"__SF-UI-Text-Semibold-Italic__\": \".SFNSText-SemiboldItalic|SFProText-SemiboldItalic|SFUIText-SemiboldItalic|.SFUIText-SemiboldItalic\",\n  \"__SF-UI-Text-Bold-Italic__\": \".SFNSText-BoldItalic|SFProText-BoldItalic|SFUIText-BoldItalic|.SFUIText-BoldItalic\",\n  \"__SF-UI-Text-Heavy-Italic__\": \".SFNSText-HeavyItalic|SFProText-HeavyItalic|.SFUIText-HeavyItalic\",\n  \"__SF-Compact-Text-Regular__\": \"SFCompactText-Regular|.SFCompactText-Regular\",\n  \"__SF-Compact-Text-Light__\": \"SFCompactText-Light|.SFCompactText-Light\",\n  \"__SF-Compact-Text-Medium__\": \"SFCompactText-Medium|.SFCompactText-Medium\",\n  \"__SF-Compact-Text-Semibold__\": \"SFCompactText-Semibold|.SFCompactText-Semibold\",\n  \"__SF-Compact-Text-Bold__\": \"SFCompactText-Bold|.SFCompactText-Bold\",\n  \"__SF-Compact-Text-Heavy__\": \"SFCompactText-Heavy|.SFCompactText-Heavy\",\n  \"__SF-Compact-Text-Italic__\": \"SFCompactText-Italic|.SFCompactText-Italic\",\n  \"__SF-Compact-Text-Light-Italic__\": \"SFCompactText-LightItalic|.SFCompactText-LightItalic\",\n  \"__SF-Compact-Text-Medium-Italic__\": \"SFCompactText-MediumItalic|.SFCompactText-MediumItalic\",\n  \"__SF-Compact-Text-Semibold-Italic__\": \"SFCompactText-SemiboldItalic|.SFCompactText-SemiboldItalic\",\n  \"__SF-Compact-Text-Bold-Italic__\": \"SFCompactText-BoldItalic|.SFCompactText-BoldItalic\",\n  \"__SF-Compact-Text-Heavy-Italic__\": \"SFCompactText-HeavyItalic|.SFCompactText-HeavyItalic\",\n  \"__SF-UI-Display-Condensed-Regular__\": \".SFNSDisplayCondensed-Regular|SFUIDisplayCondensed-Regular|.SFUIDisplayCondensed-Regular\",\n  \"__SF-UI-Display-Condensed-Ultralight__\": \".SFNSDisplayCondensed-Ultralight|SFUIDisplayCondensed-Ultralight|.SFUIDisplayCondensed-Ultralight\",\n  \"__SF-UI-Display-Condensed-Thin__\": \".SFNSDisplayCondensed-Thin|SFUIDisplayCondensed-Thin|.SFUIDisplayCondensed-Thin\",\n  \"__SF-UI-Display-Condensed-Light__\": \".SFNSDisplayCondensed-Light|SFUIDisplayCondensed-Light|.SFUIDisplayCondensed-Light\",\n  \"__SF-UI-Display-Condensed-Medium__\": \".SFNSDisplayCondensed-Medium|SFUIDisplayCondensed-Medium|.SFUIDisplayCondensed-Medium\",\n  \"__SF-UI-Display-Condensed-Semibold__\": \".SFNSDisplayCondensed-Semibold|SFUIDisplayCondensed-Semibold|.SFUIDisplayCondensed-Semibold\",\n  \"__SF-UI-Display-Condensed-Bold__\": \".SFNSDisplayCondensed-Bold|SFUIDisplayCondensed-Bold|.SFUIDisplayCondensed-Bold\",\n  \"__SF-UI-Display-Condensed-Heavy__\": \".SFNSDisplayCondensed-Heavy|SFUIDisplayCondensed-Heavy|.SFUIDisplayCondensed-Heavy\",\n  \"__SF-UI-Display-Condensed-Black__\": \".SFNSDisplayCondensed-Black|.SFUIDisplayCondensed-Black\",\n  \"__SF-UI-Display-Regular__\": \".SFNSDisplay|SFProDisplay-Regular|SFUIDisplay-Regular|.SFUIDisplay\",\n  \"__SF-UI-Display-Ultralight__\": \".SFNSDisplay-Ultralight|SFProDisplay-Ultralight|SFUIDisplay-Ultralight|.SFUIDisplay-Ultralight\",\n  \"__SF-UI-Display-Thin__\": \".SFNSDisplay-Thin|SFProDisplay-Thin|SFUIDisplay-Thin|.SFUIDisplay-Thin\",\n  \"__SF-UI-Display-Light__\": \".SFNSDisplay-Light|SFProDisplay-Light|SFUIDisplay-Light|.SFUIDisplay-Light\",\n  \"__SF-UI-Display-Medium__\": \".SFNSDisplay-Medium|SFProDisplay-Medium|SFUIDisplay-Medium|.SFUIDisplay-Medium\",\n  \"__SF-UI-Display-Semibold__\": \".SFNSDisplay-Semibold|SFProDisplay-Semibold|SFUIDisplay-Semibold|.SFUIDisplay-Semibold\",\n  \"__SF-UI-Display-Bold__\": \".SFNSDisplay-Bold|SFProDisplay-Bold|SFUIDisplay-Bold|.SFUIDisplay-Bold\",\n  \"__SF-UI-Display-Heavy__\": \".SFNSDisplay-Heavy|SFProDisplay-Heavy|SFUIDisplay-Heavy|.SFUIDisplay-Heavy\",\n  \"__SF-UI-Display-Black__\": \".SFNSDisplay-Black|SFProDisplay-Black|.SFUIDisplay-Black\",\n  \"__SF-UI-Display-Italic__\": \".SFNSDisplay-Italic|SFProDisplay-Italic|SFUIDisplay-Italic\",\n  \"__SF-UI-Display-Ultralight-Italic__\": \".SFNSDisplay-UltralightItalic|SFProDisplay-UltralightItalic|SFUIDisplay-UltralightItalic|.SFUIDisplay-UltralightItalic\",\n  \"__SF-UI-Display-Thin-Italic__\": \".SFNSDisplay-ThinItalic|SFProDisplay-ThinItalic|SFUIDisplay-ThinItalic|.SFUIDisplay-ThinItalic\",\n  \"__SF-UI-Display-Light-Italic__\": \".SFNSDisplay-LightItalic|SFProDisplay-LightItalic|SFUIDisplay-LightItalic|.SFUIDisplay-LightItalic\",\n  \"__SF-UI-Display-Medium-Italic__\": \".SFNSDisplay-MediumItalic|SFProDisplay-MediumItalic|SFUIDisplay-MediumItalic|.SFUIDisplay-MediumItalic\",\n  \"__SF-UI-Display-Semibold-Italic__\": \".SFNSDisplay-SemiboldItalic|SFProDisplay-SemiboldItalic|SFUIDisplay-SemiboldItalic|.SFUIDisplay-SemiboldItalic\",\n  \"__SF-UI-Display-Bold-Italic__\": \".SFNSDisplay-BoldItalic|SFProDisplay-BoldItalic|SFUIDisplay-BoldItalic|.SFUIDisplay-BoldItalic\",\n  \"__SF-UI-Display-Heavy-Italic__\": \".SFNSDisplay-HeavyItalic|SFProDisplay-HeavyItalic|SFUIDisplay-HeavyItalic|.SFUIDisplay-HeavyItalic\",\n  \"__SF-UI-Display-Black-Italic__\": \".SFNSDisplay-BlackItalic|SFProDisplay-BlackItalic|.SFUIDisplay-BlackItalic\",\n  \"__SF-UI-Text-Condensed-Regular__\": \".SFNSTextCondensed-Regular|SFUITextCondensed-Regular|.SFUITextCondensed-Regular\",\n  \"__SF-UI-Text-Condensed-Light__\": \".SFNSTextCondensed-Light|SFUITextCondensed-Light|.SFUITextCondensed-Light\",\n  \"__SF-UI-Text-Condensed-Medium__\": \".SFNSTextCondensed-Medium|SFUITextCondensed-Medium|.SFUITextCondensed-Medium\",\n  \"__SF-UI-Text-Condensed-Semibold__\": \".SFNSTextCondensed-Semibold|SFUITextCondensed-Semibold|.SFUITextCondensed-Semibold\",\n  \"__SF-UI-Text-Condensed-Bold__\": \".SFNSTextCondensed-Bold|SFUITextCondensed-Bold|.SFUITextCondensed-Bold\",\n  \"__SF-UI-Text-Condensed-Heavy__\": \".SFNSTextCondensed-Heavy|.SFUITextCondensed-Heavy\",\n  \"__SF-Compact-Rounded-Regular__\": \"SFCompactRounded-Regular|.SFCompactRounded-Regular\",\n  \"__SF-Compact-Rounded-Ultralight__\": \"SFCompactRounded-Ultralight|.SFCompactRounded-Ultralight\",\n  \"__SF-Compact-Rounded-Thin__\": \"SFCompactRounded-Thin|.SFCompactRounded-Thin\",\n  \"__SF-Compact-Rounded-Light__\": \"SFCompactRounded-Light|.SFCompactRounded-Light\",\n  \"__SF-Compact-Rounded-Medium__\": \"SFCompactRounded-Medium|.SFCompactRounded-Medium\",\n  \"__SF-Compact-Rounded-Semibold__\": \"SFCompactRounded-Semibold|.SFCompactRounded-Semibold\",\n  \"__SF-Compact-Rounded-Bold__\": \"SFCompactRounded-Bold|.SFCompactRounded-Bold\",\n  \"__SF-Compact-Rounded-Heavy__\": \"SFCompactRounded-Heavy|.SFCompactRounded-Heavy\",\n  \"__SF-Compact-Rounded-Black__\": \"SFCompactRounded-Black|.SFCompactRounded-Black\"\n};\nvar typefaces = typeof safeWindow !== \"undefined\" && safeWindow[\"SystemTypefaceDescriptors\"] !== void 0 ? convertToObject(safeWindow[\"SystemTypefaceDescriptors\"]) : safeFonts;\nvar defaultFontSelector = typeof safeWindow !== \"undefined\" && typeof safeWindow[\"SystemTypefaceDefaultSelector\"] === \"string\" ? safeWindow[\"SystemTypefaceDefaultSelector\"] : \"Inter\";\n\n// src/render/fonts/types.ts\nvar TypefaceSourceNames;\n(function(TypefaceSourceNames2) {\n  TypefaceSourceNames2[\"Google\"] = \"google\";\n  TypefaceSourceNames2[\"Local\"] = \"local\";\n  TypefaceSourceNames2[\"Custom\"] = \"custom\";\n})(TypefaceSourceNames || (TypefaceSourceNames = {}));\n\n// src/render/fonts/GoogleFontSource.ts\nvar googleFontSelectorPrefix = \"GF;\";\nvar GoogleFontSource = class {\n  constructor() {\n    this.name = TypefaceSourceNames.Google;\n    this.typefaces = [];\n    this.byFamily = new Map();\n  }\n  getTypefaceByFamily(family) {\n    var _a;\n    return (_a = this.byFamily.get(family)) != null ? _a : null;\n  }\n  parseSelector(selector) {\n    if (!selector.startsWith(googleFontSelectorPrefix))\n      return null;\n    const tokens = selector.split(\"-\");\n    if (tokens.length !== 2)\n      return null;\n    const family = tokens[0].replace(googleFontSelectorPrefix, \"\");\n    const variant = tokens[1];\n    return { family, variant, source: this.name };\n  }\n  createTypeface(family) {\n    const typeface = { family, fonts: [], source: this.name };\n    this.addTypeface(typeface);\n    return typeface;\n  }\n  addTypeface(typeface) {\n    this.typefaces.push(typeface);\n    this.byFamily.set(typeface.family, typeface);\n  }\n  importFonts(webFonts) {\n    let fontLocators = [];\n    webFonts.forEach((webFont) => {\n      const locators = webFont.variants.map((variant) => ({\n        source: this.name,\n        variant,\n        family: webFont.family,\n        file: webFont.files[variant].replace(\"http://\", \"https://\")\n      }));\n      fontLocators = fontLocators.concat(locators);\n    });\n    return fontLocators;\n  }\n};\n\n// src/render/fonts/LocalFontSource.ts\nvar systemTypefaceName = \"System Default\";\nvar LocalFontSource = class {\n  constructor() {\n    this.name = TypefaceSourceNames.Local;\n    this.typefaces = [];\n    this.byFamily = new Map();\n    this.typefaceAliasBySelector = new Map();\n    this.typefaceAliases = new Map();\n    this.interTypefaceSelectors = new Set();\n  }\n  getTypefaceByFamily(family) {\n    var _a;\n    return (_a = this.byFamily.get(family)) != null ? _a : null;\n  }\n  createTypeface(family) {\n    const typeface = { family, fonts: [], source: this.name };\n    this.addTypeface(typeface);\n    return typeface;\n  }\n  addTypeface(typeface) {\n    this.typefaces.push(typeface);\n    this.byFamily.set(typeface.family, typeface);\n  }\n  importFonts() {\n    const fonts = [];\n    for (const family of Object.keys(typefaces)) {\n      const members = typefaces[family];\n      if (!members)\n        continue;\n      const typeface = this.createTypeface(family);\n      for (const variant of Object.keys(members)) {\n        const member = members[variant];\n        if (!member)\n          continue;\n        const { selector, weight } = member;\n        const font = {\n          variant,\n          selector,\n          weight,\n          typeface,\n          status: \"loaded\"\n        };\n        typeface.fonts.push(font);\n      }\n      fonts.push(...typeface.fonts);\n    }\n    for (const [key6, value] of Object.entries(typefaceAliases)) {\n      this.addTypefaceAlias(key6, value);\n    }\n    const { typeface: systemTypeface, aliases } = this.getSystemTypeface();\n    this.addTypeface(systemTypeface);\n    for (const [key6, value] of aliases) {\n      this.addTypefaceAlias(key6, value);\n    }\n    fonts.push(...systemTypeface.fonts);\n    const interTypeface = this.importInterTypeface();\n    fonts.push(...interTypeface.fonts);\n    return fonts;\n  }\n  importInterTypeface() {\n    const inter = [\n      [\"Regular\", \"Inter\", void 0],\n      [\"Thin\", \"Inter-Thin\", 100],\n      [\"Extra Light\", \"Inter-ExtraLight\", 200],\n      [\"Light\", \"Inter-Light\", 300],\n      [\"Medium\", \"Inter-Medium\", 500],\n      [\"Semibold\", \"Inter-SemiBold\", 600],\n      [\"Bold\", \"Inter-Bold\", 700],\n      [\"Extra Bold\", \"Inter-ExtraBold\", 800],\n      [\"Black\", \"Inter-Black\", 900],\n      [\"Thin Italic\", \"Inter-ThinItalic\", 100],\n      [\"Extra Light Italic\", \"Inter-ExtraLightItalic\", 300],\n      [\"Light Italic\", \"Inter-LightItalic\", 300],\n      [\"Italic\", \"Inter-Italic\", void 0],\n      [\"Medium Italic\", \"Inter-MediumItalic\", 500],\n      [\"Semibold Italic\", \"Inter-SemiBoldItalic\", 600],\n      [\"Bold Italic\", \"Inter-BoldItalic\", 700],\n      [\"Extra Bold Italic\", \"Inter-ExtraBoldItalic\", 800],\n      [\"Black Italic\", \"Inter-BlackItalic\", 900]\n    ];\n    const typeface = this.createTypeface(\"Inter\");\n    for (const entry of inter) {\n      const [variant, selector, weight] = entry;\n      const font = {\n        variant,\n        selector,\n        weight,\n        typeface,\n        style: /italic/i.test(selector) ? \"italic\" : void 0\n      };\n      typeface.fonts.push(font);\n    }\n    typeface.fonts.forEach((t) => this.interTypefaceSelectors.add(t.selector));\n    return typeface;\n  }\n  addTypefaceAlias(key6, value) {\n    this.typefaceAliases.set(key6, value);\n    this.typefaceAliasBySelector.set(value, key6);\n  }\n  getSystemTypeface() {\n    const fontFamilies = this.workaroundChrome81and82(\"system-ui|-apple-system|BlinkMacSystemFont|Segoe UI|Roboto|Oxygen|Ubuntu|Cantarell|Fira Sans|Droid Sans|Helvetica Neue|sans-serif\");\n    const typeface = { family: systemTypefaceName, fonts: [], source: this.name };\n    const aliases = new Map();\n    const weights = [400, 100, 200, 300, 500, 600, 700, 800, 900];\n    const styles = [\"normal\", \"italic\"];\n    for (const style of styles) {\n      for (const weight of weights) {\n        const variant = createVariantName(weight, style);\n        const alias = `__SystemDefault-${weight}-${style}__`;\n        const font = {\n          variant,\n          selector: alias,\n          style: style === \"normal\" ? void 0 : style,\n          weight: weight === 400 ? void 0 : weight,\n          typeface,\n          status: \"loaded\"\n        };\n        typeface.fonts.push(font);\n        aliases.set(alias, fontFamilies);\n      }\n    }\n    return { typeface, aliases };\n  }\n  getTypefaceAliasBySelector(selector) {\n    return this.typefaceAliasBySelector.get(selector) || null;\n  }\n  getTypefaceSelectorByAlias(alias) {\n    return this.typefaceAliases.get(alias) || null;\n  }\n  isTypefaceAlias(value) {\n    if (value && value.match(/^__.*__$/))\n      return true;\n    return false;\n  }\n  workaroundChrome81and82(s) {\n    const userAgent = navigator.userAgent;\n    if (!userAgent.includes(\"Mac OS X 10_15\"))\n      return s;\n    if (!userAgent.includes(\"Chrome/81\") && !userAgent.includes(\"Chrome/82\"))\n      return s;\n    return `Inter|${s}`;\n  }\n};\nvar fontWeightNames = {\n  \"100\": \"Thin\",\n  \"200\": \"Extra Light\",\n  \"300\": \"Light\",\n  \"400\": \"Normal\",\n  \"500\": \"Medium\",\n  \"600\": \"Semi Bold\",\n  \"700\": \"Bold\",\n  \"800\": \"Extra Bold\",\n  \"900\": \"Black\"\n};\nfunction createVariantName(weight, style) {\n  const friendlyStyle = style === \"normal\" ? \"Regular\" : \"Italic\";\n  if (weight === 400) {\n    return friendlyStyle;\n  }\n  if (style !== \"normal\") {\n    return `${fontWeightNames[weight]} ${friendlyStyle}`;\n  }\n  return `${fontWeightNames[weight]}`;\n}\n\n// src/render/fonts/utils.ts\nfunction parseVariant(variant) {\n  if (variant === \"regular\")\n    return { style: \"normal\", weight: 400 };\n  const res = /([0-9]*)([a-z]*)/.exec(variant);\n  if (!res)\n    return null;\n  const weight = parseInt(res[1] || \"400\");\n  const style = res[2] || \"normal\";\n  return { weight, style };\n}\n\n// src/render/fonts/CustomFontSource.ts\nvar customFontSelectorPrefix = \"CUSTOM;\";\nfunction getCustomFontName(fileName, properties) {\n  if (!properties)\n    return fileName.substring(0, fileName.lastIndexOf(\".\"));\n  const fontFamily = properties.font.preferredFamily === \"\" ? properties.font.fontFamily : properties.font.preferredFamily;\n  const variant = properties.font.preferredSubFamily === \"\" ? properties.font.fontSubFamily : properties.font.preferredSubFamily;\n  return `${fontFamily} ${variant}`;\n}\nvar CustomFontSource = class {\n  constructor() {\n    this.name = TypefaceSourceNames.Custom;\n    this.typefaces = [];\n    this.byFamily = new Map();\n    this.assetsByFamily = new Map();\n  }\n  importFonts(assets) {\n    this.typefaces.length = 0;\n    this.byFamily.clear();\n    this.assetsByFamily.clear();\n    const fonts = [];\n    assets.forEach((asset) => {\n      var _a;\n      if (!this.isValidCustomFontAsset(asset)) {\n        return;\n      }\n      const fontName = getCustomFontName(asset.name, asset.properties);\n      const typeface = this.createTypeface(fontName);\n      const font = {\n        typeface,\n        selector: `${customFontSelectorPrefix}${fontName}`,\n        variant: this.inferVariantName(fontName),\n        postscriptName: (_a = asset.properties) == null ? void 0 : _a.font.postscriptName,\n        file: asset.url\n      };\n      typeface.fonts.push(font);\n      typeface.owner = asset.ownerType === \"team\" ? \"team\" : \"project\";\n      this.assetsByFamily.set(fontName, asset);\n      fonts.push(...typeface.fonts);\n    });\n    return fonts;\n  }\n  isValidCustomFontAsset(asset) {\n    var _a, _b;\n    return asset.mimeType.startsWith(\"font/\") && asset.properties && \"font\" in asset.properties && ((_a = asset.properties) == null ? void 0 : _a.kind) === \"font\" && \"fontFamily\" in ((_b = asset.properties) == null ? void 0 : _b.font);\n  }\n  inferVariantName(family) {\n    const possibleValues = [\n      \"thin\",\n      \"ultra light\",\n      \"extra light\",\n      \"light\",\n      \"normal\",\n      \"medium\",\n      \"semi bold\",\n      \"bold\",\n      \"extra bold\",\n      \"black\"\n    ];\n    const possibleValuesWithItalics = [...possibleValues.map((value) => `${value} italic`), ...possibleValues];\n    const lowerCaseFamily = family.toLowerCase();\n    const tokens = [...lowerCaseFamily.split(\" \"), ...lowerCaseFamily.split(\"-\"), ...lowerCaseFamily.split(\"_\")];\n    const foundToken = possibleValuesWithItalics.find((value) => tokens.includes(value) || tokens.includes(value.replace(/\\s+/g, \"\")));\n    if (foundToken)\n      return foundToken.replace(/(^\\w|\\s\\w)/g, (char) => char.toUpperCase());\n    return \"Regular\";\n  }\n  createTypeface(family) {\n    const existingTypeface = this.byFamily.get(family);\n    if (existingTypeface)\n      return existingTypeface;\n    const typeface = {\n      source: this.name,\n      family,\n      fonts: []\n    };\n    this.addTypeface(typeface);\n    return typeface;\n  }\n  addTypeface(typeface) {\n    this.typefaces.push(typeface);\n    this.byFamily.set(typeface.family, typeface);\n  }\n  parseSelector(selector) {\n    if (!selector.startsWith(customFontSelectorPrefix))\n      return null;\n    const tokens = selector.split(customFontSelectorPrefix);\n    const locator = { source: \"custom\", family: tokens[1] };\n    return locator;\n  }\n  getFontBySelector(selector, createFont = true) {\n    const locator = this.parseSelector(selector);\n    if (!locator)\n      return null;\n    if (!createFont && !this.byFamily.get(locator.family))\n      return null;\n    return this.getTypefaceByFamily(locator.family).fonts[0];\n  }\n  getTypefaceByFamily(family) {\n    const foundTypeface = this.byFamily.get(family);\n    if (foundTypeface)\n      return foundTypeface;\n    const typeface = {\n      source: \"custom\",\n      family,\n      fonts: []\n    };\n    typeface.fonts.push({\n      selector: `${customFontSelectorPrefix}${family}`,\n      variant: this.inferVariantName(family),\n      typeface\n    });\n    return typeface;\n  }\n};\n\n// src/render/fonts/loadFont.ts\nvar import_fontfaceobserver = __toModule(require_fontfaceobserver_standalone());\nvar FONT_LOADING_TIMEOUT = 5e3;\nvar MAX_RETRIES = 3;\nvar FontLoadingError = class extends Error {\n  constructor(message) {\n    super(message);\n    this.name = \"FontLoadingError\";\n  }\n};\nvar fontRequests = new Map();\nvar fontReadyPromises = new Map();\nvar loadFont = (data, doc) => loadFontWithRetries(data, doc);\nasync function loadFontWithRetries(data, doc, attempt = 0) {\n  const { family, url } = data;\n  const weight = data.weight || 500;\n  const style = data.style || \"normal\";\n  const requestId = `${family}-${style}-${weight}-${url}`;\n  if (!fontRequests.has(requestId) || attempt > 0) {\n    const fontFace = new FontFace(family, `url(${url})`, {\n      weight: weight == null ? void 0 : weight.toString(),\n      style\n    });\n    const readyPromise = fontFace.load().then(() => {\n      doc.fonts.add(fontFace);\n      return isFontReady(family, style, weight);\n    }).catch((e) => {\n      if (e.name !== \"NetworkError\") {\n        throw e;\n      }\n      if (attempt < MAX_RETRIES) {\n        return loadFontWithRetries(data, doc, attempt + 1);\n      }\n      throw new FontLoadingError(`Font loading failed after ${attempt} retries due to network error`);\n    });\n    fontRequests.set(requestId, readyPromise);\n  }\n  await fontRequests.get(requestId);\n}\nasync function isFontReady(family, style, weight) {\n  const readyPromiseId = `${family}-${style}-${weight}`;\n  if (!fontReadyPromises.has(readyPromiseId)) {\n    const observer = new import_fontfaceobserver.default(family, {\n      style,\n      weight\n    });\n    const readyPromise = observer.load(null, FONT_LOADING_TIMEOUT);\n    fontReadyPromises.set(readyPromiseId, readyPromise);\n  }\n  try {\n    await fontReadyPromises.get(readyPromiseId);\n  } catch (e) {\n    throw new FontLoadingError(`Failed to check if font is ready (${FONT_LOADING_TIMEOUT}ms timeout exceeded)`);\n  }\n}\n\n// src/render/fonts/fontStore.ts\nvar LoadFontResult;\n(function(LoadFontResult2) {\n  LoadFontResult2[LoadFontResult2[\"AlreadyLoaded\"] = 0] = \"AlreadyLoaded\";\n  LoadFontResult2[LoadFontResult2[\"Loaded\"] = 1] = \"Loaded\";\n})(LoadFontResult || (LoadFontResult = {}));\nvar FontStore = class {\n  constructor() {\n    this.bySelector = new Map();\n    this.loadedSelectors = new Set();\n    this.createGoogleFont = (locator) => {\n      const { source, family, variant, file } = locator;\n      let typeface = this.getTypeface(locator);\n      if (!typeface) {\n        typeface = this[source].createTypeface(family);\n      }\n      const variantInfo = parseVariant(variant) || {};\n      const { weight, style } = variantInfo;\n      const selector = `GF;${family}-${variant}`;\n      const font = {\n        typeface,\n        variant,\n        selector,\n        weight,\n        style,\n        file\n      };\n      typeface.fonts.push(font);\n      return font;\n    };\n    this.local = new LocalFontSource();\n    this.google = new GoogleFontSource();\n    this.custom = new CustomFontSource();\n    this.bySelector = new Map();\n    this.importLocalFonts();\n    this.defaultFont = this.getFontBySelector(defaultFontSelector);\n    if (this.defaultFont) {\n      this.loadFont(this.defaultFont);\n    }\n  }\n  addFont(font) {\n    this.bySelector.set(font.selector, font);\n  }\n  getAvailableFonts() {\n    return Array.from(this.bySelector.values());\n  }\n  importLocalFonts() {\n    this.local.importFonts().forEach((font) => {\n      this.addFont(font);\n      if (!this.local.interTypefaceSelectors.has(font.selector)) {\n        this.loadFont(font);\n      }\n    });\n  }\n  async importGoogleFonts() {\n    if (!this.getGoogleFontsListPromise) {\n      this.getGoogleFontsListPromise = runtime.fetchGoogleFontsList();\n      const googleFonts = await this.getGoogleFontsListPromise;\n      this.google.importFonts(googleFonts).forEach((locator) => {\n        const font = this.createGoogleFont(locator);\n        this.addFont(font);\n      });\n    }\n    return this.getGoogleFontsListPromise;\n  }\n  importCustomFonts(assets) {\n    this.bySelector.forEach((_, key6) => {\n      if (key6.startsWith(customFontSelectorPrefix)) {\n        this.bySelector.delete(key6);\n      }\n    });\n    this.custom.importFonts(assets).forEach((font) => this.addFont(font));\n  }\n  getTypeface(info) {\n    const typeface = this[info.source].getTypefaceByFamily(info.family);\n    return typeface;\n  }\n  getFontBySelector(selector, createFont = true) {\n    if (selector.startsWith(customFontSelectorPrefix)) {\n      return this.custom.getFontBySelector(selector, createFont);\n    }\n    return this.bySelector.get(selector) || null;\n  }\n  getDraftPropertiesBySelector(selector) {\n    const font = this.getFontBySelector(selector);\n    if (font) {\n      return {\n        style: font.style,\n        weight: font.weight,\n        variant: font.variant,\n        family: font.typeface.family,\n        source: font.typeface.source\n      };\n    }\n    const locator = this.google.parseSelector(selector);\n    if (locator) {\n      const fontVariant = parseVariant(locator.variant);\n      if (fontVariant) {\n        return {\n          style: fontVariant.style,\n          weight: fontVariant.weight,\n          variant: locator.variant,\n          family: locator.family,\n          source: TypefaceSourceNames.Google\n        };\n      }\n    }\n    return null;\n  }\n  isSelectorLoaded(selector) {\n    return this.loadedSelectors.has(selector);\n  }\n  async loadTypeface(typeface) {\n    await Promise.all(typeface.fonts.map((f) => this.loadFont(f)));\n  }\n  async loadFont(font) {\n    if (this.isSelectorLoaded(font.selector)) {\n      return 0;\n    }\n    if (font.typeface.source === TypefaceSourceNames.Local) {\n      if (this.local.interTypefaceSelectors.has(font.selector) && true) {\n        await isFontReady(font.typeface.family, font.style, font.weight);\n      }\n      this.loadedSelectors.add(font.selector);\n      return 1;\n    }\n    if (!font.file) {\n      return Promise.reject(`Unable to load font: ${font.selector}`);\n    }\n    await loadFont({\n      family: font.typeface.family,\n      url: font.file,\n      weight: font.weight,\n      style: font.style\n    }, document);\n    this.loadedSelectors.add(font.selector);\n    return 1;\n  }\n  async loadWebFontsFromSelectors(selectors) {\n    if (selectors.some((s) => s.startsWith(googleFontSelectorPrefix))) {\n      await this.importGoogleFonts();\n    }\n    const fonts = selectors.map((s) => this.bySelector.get(s)).filter((f) => !!f);\n    return Promise.allSettled(fonts.map((f) => this.loadFont(f)));\n  }\n};\nvar fontStore = new FontStore();\nPromise.allSettled = Promise.allSettled || ((promises) => Promise.all(promises.map((p) => p.then((v) => ({ status: \"fulfilled\", value: v })).catch((e) => ({ status: \"rejected\", reason: e })))));\n\n// src/render/utils/isShallowEqualArray.ts\nfunction isShallowEqualArray(a2, b2) {\n  return a2.length === b2.length && a2.every((v, i) => v === b2[i]);\n}\n\n// src/render/presentation/Text.tsx\nfunction Text(props) {\n  var _a;\n  const parentSize = useParentSize();\n  const layoutId = useLayoutId2(props);\n  const layoutRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n  useMeasureLayout(props, layoutRef);\n  const { fonts, __fromCanvasComponent } = props;\n  const prevFontsRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)([]);\n  const fontsDidChange = !isShallowEqualArray((_a = prevFontsRef.current) != null ? _a : [], fonts != null ? fonts : []);\n  prevFontsRef.current = fonts;\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (!fontsDidChange || !fonts)\n      return;\n    fontStore.loadWebFontsFromSelectors(fonts).then((results) => {\n      if (!__fromCanvasComponent || !layoutRef.current || RenderTarget.current() !== RenderTarget.canvas)\n        return;\n      const didLoadNewFonts = results.some((result) => result.status === \"fulfilled\" && result.value === LoadFontResult.Loaded);\n      if (!didLoadNewFonts)\n        return;\n      measureClosestComponentContainer(layoutRef.current);\n    });\n  }, [fonts]);\n  return /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(TextComponent, {\n    ...props,\n    innerRef: layoutRef,\n    layoutId,\n    parentSize\n  });\n}\nvar _TextComponent = class extends Layer {\n  constructor() {\n    super(...arguments);\n    this.renderMain = (inCodeComponent) => {\n      if (safeWindow[\"perf\"])\n        safeWindow[\"perf\"].nodeRender();\n      const {\n        font,\n        visible,\n        alignment,\n        willChangeTransform,\n        opacity,\n        id,\n        layoutId,\n        className,\n        transition,\n        variants,\n        name,\n        innerRef,\n        __fromCanvasComponent,\n        widthType,\n        heightType,\n        _usesDOMRect,\n        autoSize,\n        style: styleProp\n      } = this.props;\n      const frame2 = this.frame;\n      if (!visible) {\n        return null;\n      }\n      injectComponentCSSRules();\n      const isHidden2 = this.props.isEditable && this.props.environment() === RenderTarget.canvas;\n      const justifyContent = convertVerticalAlignment(this.props.verticalAlignment);\n      const style = {\n        outline: \"none\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent,\n        opacity: isHidden2 ? 0 : opacity,\n        flexShrink: 0\n      };\n      const dataProps = {\n        \"data-framer-component-type\": \"Text\",\n        \"data-framer-name\": name\n      };\n      if (autoSize) {\n        dataProps[\"data-framer-component-text-autosized\"] = \"true\";\n      }\n      this.collectLayout(style, inCodeComponent);\n      collectFiltersFromProps(this.props, style);\n      collectTextShadowsForProps(this.props, style);\n      if (style.opacity === 1 || style.opacity === void 0) {\n        delete style.opacity;\n      }\n      if (willChangeTransform) {\n        forceLayerBackingWithCSSProperties(style);\n      }\n      let rawHTML = this.props.rawHTML;\n      const text = this.getOverrideText() || this.props.text;\n      if (isString2(text)) {\n        if (rawHTML) {\n          rawHTML = replaceDraftHTMLWithText(rawHTML, text);\n        } else {\n          rawHTML = `<p style=\"font: ${font}\">${text}</p>`;\n        }\n      }\n      if (this.props.style) {\n        Object.assign(style, this.props.style);\n      }\n      const isDOMLayoutAutoSized = _usesDOMRect && (widthType === DimensionType.Auto || heightType === DimensionType.Auto);\n      const hasTransformTemplate = !frame2 || !RenderTarget.hasRestrictions() || __fromCanvasComponent || isDOMLayoutAutoSized;\n      if (hasTransformTemplate) {\n        Object.assign(dataProps, layoutHintDataPropsForCenter(this.props.center));\n      }\n      if (rawHTML) {\n        style.textAlign = alignment;\n        style.lineHeight = \"1px\";\n        style.fontSize = \"0px\";\n        return /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(motion.div, {\n          layoutId,\n          id,\n          ...dataProps,\n          style: { ...style, ...styleProp },\n          transformTemplate: hasTransformTemplate ? transformTemplate(this.props.center) : void 0,\n          dangerouslySetInnerHTML: { __html: rawHTML },\n          \"data-center\": this.props.center,\n          className,\n          transition,\n          variants,\n          ref: innerRef\n        });\n      }\n    };\n  }\n  get frame() {\n    return calculateRect(this.props, this.props.parentSize || ParentSizeState.Unknown, false);\n  }\n  getOverrideText() {\n    const { _forwardedOverrideId, _forwardedOverrides, id } = this.props;\n    const forwardedOverrideId = _forwardedOverrideId != null ? _forwardedOverrideId : id;\n    if (forwardedOverrideId && _forwardedOverrides) {\n      const text = _forwardedOverrides[forwardedOverrideId];\n      if (isString2(text)) {\n        return text;\n      }\n    }\n  }\n  render() {\n    return /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(ComponentContainerContext.Consumer, null, this.renderMain);\n  }\n  collectLayout(style, inCodeComponent) {\n    if (this.props.withExternalLayout)\n      return;\n    const frame2 = this.frame;\n    const {\n      rotation,\n      autoSize,\n      positionSticky,\n      positionStickyTop,\n      positionStickyRight,\n      positionStickyBottom,\n      positionStickyLeft,\n      width: externalWidth,\n      height: externalHeight,\n      _usesDOMRect\n    } = this.props;\n    const rotate = Animatable.getNumber(rotation);\n    const isDOMLayoutAutoSized = _usesDOMRect && (externalWidth === \"auto\" || externalHeight === \"auto\");\n    if (frame2 && !isDOMLayoutAutoSized && RenderTarget.hasRestrictions()) {\n      Object.assign(style, {\n        transform: `translate(${frame2.x}px, ${frame2.y}px) rotate(${rotate.toFixed(4)}deg)`,\n        width: autoSize ? \"auto\" : `${frame2.width}px`,\n        minWidth: `${frame2.width}px`,\n        height: `${frame2.height}px`\n      });\n    } else {\n      const { left, right, top, bottom } = this.props;\n      let width;\n      let height;\n      if (autoSize) {\n        width = \"auto\";\n        height = \"auto\";\n      } else {\n        if (!isFiniteNumber(left) || !isFiniteNumber(right)) {\n          width = externalWidth;\n        }\n        if (!isFiniteNumber(top) || !isFiniteNumber(bottom)) {\n          height = externalHeight;\n        }\n      }\n      Object.assign(style, {\n        left,\n        right,\n        top,\n        bottom,\n        width,\n        height,\n        rotate\n      });\n    }\n    if (positionSticky) {\n      const onCanvas = RenderTarget.current() === RenderTarget.canvas;\n      if (!onCanvas || inCodeComponent) {\n        style.position = \"sticky\";\n        style.willChange = \"transform\";\n        style.zIndex = 1;\n        style.top = positionStickyTop;\n        style.right = positionStickyRight;\n        style.bottom = positionStickyBottom;\n        style.left = positionStickyLeft;\n      }\n    }\n  }\n};\nvar TextComponent = _TextComponent;\nTextComponent.supportsConstraints = true;\nTextComponent.defaultTextProps = {\n  opacity: void 0,\n  left: void 0,\n  right: void 0,\n  top: void 0,\n  bottom: void 0,\n  _constraints: {\n    enabled: true,\n    aspectRatio: null\n  },\n  rotation: 0,\n  visible: true,\n  alignment: void 0,\n  verticalAlignment: \"top\",\n  shadows: [],\n  font: \"16px \" + deviceFont()\n};\nTextComponent.defaultProps = {\n  ...Layer.defaultProps,\n  ..._TextComponent.defaultTextProps,\n  isEditable: false,\n  environment: RenderTarget.current,\n  withExternalLayout: false\n};\nvar textContentRegex = /(<span [^>]+>).*<\\/span>/s;\nfunction replaceDraftHTMLWithText(rawHTML, text) {\n  return rawHTML.replace(textContentRegex, (_, span) => span + text + \"</span>\");\n}\nfunction convertVerticalAlignment(verticalAlignment) {\n  switch (verticalAlignment) {\n    case \"top\":\n      return \"flex-start\";\n    case \"center\":\n      return \"center\";\n    case \"bottom\":\n      return \"flex-end\";\n  }\n}\n\n// src/render/presentation/Vector.tsx\n\n\n// src/render/utils/transformString.ts\nfunction transformString(transform2) {\n  if (transform2 === void 0) {\n    return void 0;\n  }\n  const { x, y, rotation, width, height } = transform2;\n  let result;\n  if (x !== 0 || y !== 0) {\n    result = `translate(${roundedNumberString(x, 3)} ${roundedNumberString(y, 3)})`;\n  }\n  if (rotation !== 0) {\n    const roundedRotation = roundedNumberString(rotation, 4);\n    const roundedWidth = roundedNumberString(width / 2, 3);\n    const roundedHeight = roundedNumberString(height / 2, 3);\n    const rotationString = `rotate(${roundedRotation} ${roundedWidth} ${roundedHeight})`;\n    result = result ? `${result} ${rotationString}` : rotationString;\n  }\n  return result;\n}\n\n// src/render/presentation/SVGRoot.tsx\n\nvar SVGRoot = class extends react__WEBPACK_IMPORTED_MODULE_0__.Component {\n  render() {\n    const { children, frame: frame2 } = this.props;\n    const { width, height } = frame2;\n    const fx = Math.floor(frame2.x);\n    const fy = Math.floor(frame2.y);\n    const svgStyle = {\n      position: \"absolute\",\n      width: Math.ceil(width),\n      height: Math.ceil(height),\n      overflow: \"visible\",\n      display: \"block\",\n      transform: `translate(${fx}px, ${fy}px)`\n    };\n    Layer.applyWillChange(this.props, svgStyle, false);\n    return /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"svg\", {\n      width: \"100%\",\n      height: \"100%\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n      style: svgStyle\n    }, children);\n  }\n};\n\n// src/render/presentation/GradientElement.tsx\n\nvar LinearGradientElement = class extends react__WEBPACK_IMPORTED_MODULE_0__.Component {\n  render() {\n    const { id, angle, stops } = this.props;\n    return /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"linearGradient\", {\n      id,\n      gradientTransform: `rotate(${angle}, 0.5, 0.5)`\n    }, stops.map((stop, idx) => {\n      return /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"stop\", {\n        key: idx,\n        offset: stop.position,\n        stopColor: stop.color,\n        stopOpacity: stop.alpha\n      });\n    }));\n  }\n};\nvar RadialGradientElement = class extends react__WEBPACK_IMPORTED_MODULE_0__.Component {\n  render() {\n    const { centerAnchorX, centerAnchorY, id, widthFactor, heightFactor, stops } = this.props;\n    return /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"radialGradient\", {\n      id,\n      cy: centerAnchorY,\n      cx: centerAnchorX,\n      r: widthFactor,\n      gradientTransform: `translate(${centerAnchorX}, ${centerAnchorY}) scale(1 ${heightFactor / widthFactor}) translate(-${centerAnchorX}, -${centerAnchorY})`\n    }, stops.map((stop, idx) => {\n      return /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"stop\", {\n        key: idx,\n        offset: stop.position,\n        stopColor: stop.color,\n        stopOpacity: stop.alpha\n      });\n    }));\n  }\n};\n\n// src/render/utils/createTransformValues.ts\nfunction createTransformValues(baseTransform, mode) {\n  let { x, y } = baseTransform;\n  const { width, height, rotation } = baseTransform;\n  if (mode === \"resetXYKeepFraction\") {\n    x = x - Math.floor(x);\n    y = y - Math.floor(y);\n  } else if (mode === \"resetXY\") {\n    x = 0;\n    y = 0;\n  }\n  return { x, y, width, height, rotation };\n}\nfunction getTransformMode(isRootVectorNode, includeTransform) {\n  if (includeTransform !== void 0) {\n    if (includeTransform) {\n      return \"asIs\";\n    }\n  } else {\n    if (!isRootVectorNode) {\n      return \"asIs\";\n    }\n  }\n  if (isRootVectorNode) {\n    return \"resetXYKeepFraction\";\n  } else {\n    return \"resetXY\";\n  }\n}\nfunction transformValues2(rect, rotation, isRootVectorNode, includeTransform) {\n  const transformMode = getTransformMode(isRootVectorNode, includeTransform);\n  const baseTransform = { ...rect, rotation };\n  const transform2 = createTransformValues(baseTransform, transformMode);\n  return transform2;\n}\n\n// src/render/types/svgElementAttributeDefaults.ts\nvar svgElementAttributeDefaults = {\n  stroke: \"none\",\n  strokeWidth: 1,\n  strokeLinecap: \"butt\",\n  strokeLinejoin: \"miter\",\n  strokeMiterlimit: 4,\n  strokeDasharray: \"0\",\n  strokeDashoffset: 0,\n  strokeOpacity: 1,\n  fill: \"black\",\n  fillRule: \"nonzero\",\n  fillOpacity: 1\n};\n\n// src/render/presentation/Vector.tsx\nvar _Vector = class extends Layer {\n  render() {\n    var _a, _b;\n    if (safeWindow[\"perf\"])\n      safeWindow[\"perf\"].nodeRender();\n    const {\n      opacity,\n      calculatedPath,\n      d,\n      insideStroke,\n      shapeId,\n      strokeEnabled,\n      strokeClipId,\n      strokeWidth,\n      idAttribute,\n      rect,\n      shadows,\n      strokeAlpha,\n      name,\n      includeTransform,\n      isRootVectorNode,\n      rotation,\n      id,\n      lineCap,\n      lineJoin,\n      strokeColor,\n      strokeMiterLimit,\n      strokeDashArray,\n      strokeDashOffset,\n      fill,\n      variants,\n      transition\n    } = this.props;\n    if (!id || !shapeId || !strokeClipId)\n      return null;\n    const rotate = (_b = (_a = this.props.rotate) != null ? _a : rotation) != null ? _b : 0;\n    const { target } = RenderEnvironment;\n    const transform2 = transformValues2(rect, rotate, isRootVectorNode, includeTransform);\n    let vectorFill;\n    let fillAlpha = 0;\n    let imagePattern;\n    let linearGradient;\n    let radialGradient;\n    if (typeof fill === \"string\" || Color.isColorObject(fill)) {\n      const fillColor = Color.isColorObject(fill) ? fill.initialValue || Color.toRgbString(fill) : fill;\n      if (fillColor !== \"transparent\") {\n        vectorFill = fillColor;\n        fillAlpha = ConvertColor.getAlpha(vectorFill);\n      }\n    } else if (LinearGradient.isLinearGradient(fill)) {\n      linearGradient = elementPropertiesForLinearGradient(fill, id);\n      vectorFill = `url(#${linearGradient.id})`;\n      fillAlpha = 1;\n    } else if (RadialGradient.isRadialGradient(fill)) {\n      radialGradient = elementPropertiesForRadialGradient(fill, id);\n      vectorFill = `url(#${radialGradient.id})`;\n      fillAlpha = 1;\n    } else if (BackgroundImage.isImageObject(fill)) {\n      imagePattern = imagePatternPropsForFill(fill, transform2, id);\n      if (imagePattern) {\n        vectorFill = `url(#${imagePattern.id})`;\n        fillAlpha = 1;\n      }\n    }\n    if (vectorFill === svgElementAttributeDefaults.fill) {\n      vectorFill = void 0;\n    }\n    if (vectorFill === void 0) {\n      vectorFill = \"transparent\";\n    }\n    const fillEnabled = vectorFill !== void 0 && vectorFill !== \"transparent\" && fillAlpha !== 0;\n    if (!fillEnabled && !strokeEnabled) {\n      fillAlpha = 1;\n    }\n    let mainElement;\n    let strokeClipPath = null;\n    let shapeReference = null;\n    let strokeElement = null;\n    let pathTranslate;\n    let elementTransform;\n    const translatePaths = target === RenderTarget.export;\n    if (transform2.rotation === 0 && translatePaths) {\n      pathTranslate = transform2;\n    } else {\n      pathTranslate = { x: 0, y: 0 };\n      elementTransform = transformString(transform2);\n    }\n    const pathAttributes = {\n      d: d != null ? d : toSVGPath(calculatedPath, pathTranslate, target),\n      transform: elementTransform\n    };\n    const svgStrokeAttributes = {};\n    if (strokeEnabled && strokeWidth !== 0) {\n      svgStrokeAttributes.strokeWidth = strokeWidth;\n      svgStrokeAttributes.stroke = strokeColor;\n      svgStrokeAttributes.strokeLinecap = lineCap;\n      svgStrokeAttributes.strokeLinejoin = lineJoin;\n      if (lineJoin === \"miter\") {\n        svgStrokeAttributes.strokeMiterlimit = strokeMiterLimit;\n      }\n      svgStrokeAttributes.strokeDasharray = strokeDashArray;\n      if (strokeDashOffset !== 0) {\n        svgStrokeAttributes.strokeDashoffset = strokeDashOffset;\n      }\n    }\n    for (const key6 in svgElementAttributeDefaults) {\n      if (svgStrokeAttributes[key6] === svgElementAttributeDefaults[key6]) {\n        svgStrokeAttributes[key6] = void 0;\n      }\n    }\n    const internalShapeId = InternalID.forKey(shapeId);\n    const internalStrokeClipId = InternalID.forKey(strokeClipId);\n    const shadow = shadowForShape(shadows, rect, internalShapeId, fillAlpha, strokeAlpha, strokeWidth, internalStrokeClipId, svgStrokeAttributes);\n    const currentName = target === RenderTarget.preview ? name || void 0 : void 0;\n    if (shadow.insetElement !== null || shadow.outsetElement !== null || insideStroke) {\n      pathAttributes.id = internalShapeId.id;\n      shapeReference = /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(motion.path, {\n        ...{ ...pathAttributes },\n        variants,\n        transition\n      });\n      if (shadow.needsStrokeClip || insideStroke) {\n        strokeClipPath = /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"clipPath\", {\n          id: internalStrokeClipId.id\n        }, /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"use\", {\n          xlinkHref: internalShapeId.link\n        }));\n      }\n      if (shadow.insetElement !== null && strokeEnabled && strokeWidth && strokeWidth > 0) {\n        mainElement = /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"use\", {\n          xlinkHref: internalShapeId.link,\n          fill: vectorFill,\n          strokeOpacity: \"0\",\n          name: currentName\n        });\n        strokeElement = /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"use\", {\n          xlinkHref: internalShapeId.link,\n          clipPath: internalStrokeClipId.urlLink,\n          fill: \"transparent\",\n          ...svgStrokeAttributes,\n          strokeWidth\n        });\n      } else {\n        mainElement = /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"use\", {\n          xlinkHref: internalShapeId.link,\n          fill: vectorFill,\n          clipPath: internalStrokeClipId.urlLink,\n          ...svgStrokeAttributes,\n          strokeWidth,\n          name: currentName\n        });\n      }\n    } else {\n      pathAttributes.id = idAttribute;\n      mainElement = /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(motion.path, {\n        ...{\n          ...pathAttributes,\n          fill: vectorFill,\n          ...svgStrokeAttributes\n        },\n        name: currentName,\n        variants,\n        transition\n      });\n    }\n    const imagePatternElement = imagePattern ? /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(ImagePatternElement, {\n      ...imagePattern\n    }) : void 0;\n    let gradient;\n    if (linearGradient) {\n      gradient = /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(LinearGradientElement, {\n        ...linearGradient\n      });\n    } else if (radialGradient) {\n      gradient = /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(RadialGradientElement, {\n        ...radialGradient\n      });\n    }\n    let defs = null;\n    if (shapeReference || strokeClipPath || shadow.definition && shadow.definition.length || gradient || imagePatternElement) {\n      defs = /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"defs\", null, shapeReference, strokeClipPath, shadow.definition, gradient, imagePatternElement);\n    }\n    const opacityValue = opacity != null ? opacity : variants ? 1 : void 0;\n    if (defs === null && shadow.outsetElement === null && shadow.insetElement === null && strokeElement === null) {\n      mainElement = /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(motion.path, {\n        ...{\n          ...pathAttributes,\n          fill: vectorFill,\n          ...svgStrokeAttributes\n        },\n        opacity: opacityValue,\n        variants,\n        transition,\n        name: currentName\n      });\n      return this.renderElement(mainElement);\n    } else {\n      return this.renderElement(/* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(motion.g, {\n        opacity: opacityValue,\n        variants,\n        transition\n      }, defs, shadow.outsetElement, mainElement, shadow.insetElement, strokeElement));\n    }\n  }\n  renderElement(element) {\n    var _a, _b;\n    const { isRootVectorNode, width, height, rect, willChangeTransform } = this.props;\n    const frame2 = (_b = (_a = this.props.frame) != null ? _a : rect) != null ? _b : { x: 0, y: 0, width: 100, height: 100 };\n    if (!isRootVectorNode)\n      return element;\n    return /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(SVGRoot, {\n      ...{ frame: frame2, width, height, willChangeTransform }\n    }, element);\n  }\n};\nvar Vector = _Vector;\nVector.defaultVectorProps = {\n  isRootVectorNode: false,\n  name: null,\n  includeTransform: void 0,\n  defaultFillColor: void 0,\n  defaultStrokeColor: void 0,\n  defaultStrokeWidth: void 0,\n  defaultStrokeAlignment: \"center\",\n  width: 100,\n  height: 100,\n  rotation: 0,\n  rotate: void 0,\n  frame: void 0,\n  opacity: void 0,\n  calculatedPath: [],\n  d: void 0,\n  shapeId: void 0,\n  insideStroke: false,\n  strokeEnabled: true,\n  strokeClipId: void 0,\n  strokeWidth: void 0,\n  idAttribute: void 0,\n  transition: void 0,\n  shadows: [],\n  strokeAlpha: 1,\n  rect: { x: 0, y: 0, width: 0, height: 0 },\n  lineCap: \"butt\",\n  strokeColor: \"#0AF\",\n  lineJoin: \"miter\",\n  strokeMiterLimit: 4,\n  strokeDashArray: \"0\",\n  strokeDashOffset: 0,\n  fill: \"rgba(0,170,255,0.5)\"\n};\nVector.defaultProps = {\n  ...Layer.defaultProps,\n  ..._Vector.defaultVectorProps\n};\n\n// src/render/presentation/VectorGroup.tsx\n\nvar _VectorGroup = class extends Layer {\n  render() {\n    if (safeWindow[\"perf\"])\n      safeWindow[\"perf\"].nodeRender();\n    const {\n      id,\n      name: nameProp,\n      opacity,\n      visible,\n      targetName,\n      defaultName,\n      children,\n      includeTransform,\n      x,\n      y,\n      width,\n      height,\n      rotation,\n      isRootVectorNode\n    } = this.props;\n    if (!visible)\n      return null;\n    const { target } = RenderEnvironment;\n    const rect = { x, y, width, height };\n    const transform2 = transformValues2(rect, rotation, isRootVectorNode, includeTransform);\n    const addNames = target === RenderTarget.preview;\n    let name = void 0;\n    if (addNames) {\n      if (targetName) {\n        name = targetName;\n      } else if (nameProp) {\n        name = nameProp;\n      } else {\n        name = defaultName;\n      }\n    }\n    return this.renderElement(/* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\", {\n      transform: transformString(transform2),\n      ...{ id, name, opacity }\n    }, children));\n  }\n  renderElement(element) {\n    const { isRootVectorNode, width, height, frame: frame2, willChangeTransform } = this.props;\n    if (!isRootVectorNode) {\n      return element;\n    }\n    return /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(SVGRoot, {\n      ...{ frame: frame2, width, height, willChangeTransform }\n    }, element);\n  }\n};\nvar VectorGroup = _VectorGroup;\nVectorGroup.defaultVectorGroupProps = {\n  name: void 0,\n  opacity: void 0,\n  visible: true,\n  x: 0,\n  y: 0,\n  rotation: 0,\n  width: 100,\n  height: 100,\n  targetName: void 0,\n  defaultName: \"\",\n  isRootVectorNode: false,\n  includeTransform: void 0,\n  frame: { x: 0, y: 0, width: 100, height: 100 }\n};\nVectorGroup.defaultProps = {\n  ...Layer.defaultProps,\n  ..._VectorGroup.defaultVectorGroupProps\n};\n\n// src/render/presentation/DeprecatedComponentContainer.tsx\n\nvar _DeprecatedComponentContainer = class extends Layer {\n  constructor() {\n    super(...arguments);\n    this.state = {};\n  }\n  componentDidCatch(error, info) {\n    let stack = info.componentStack.split(\"\\n\").filter((line) => line.length !== 0);\n    let currentIndex = 0;\n    for (const line of stack) {\n      if (line.startsWith(`    in ${this.constructor.name}`)) {\n        break;\n      }\n      currentIndex++;\n    }\n    stack = stack.slice(0, currentIndex);\n    this.setState({\n      lastError: {\n        children: this.props.children,\n        name: error.name,\n        message: error.message,\n        componentStack: stack\n      }\n    });\n  }\n  renderErrorPlaceholder(file, error) {\n    const { RenderPlaceholder } = runtime;\n    return /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(FrameWithMotion, {\n      ...this.props,\n      background: null\n    }, /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(RenderPlaceholder, {\n      error: { error, file }\n    }));\n  }\n  render() {\n    var _a, _b;\n    if (safeWindow[\"perf\"])\n      safeWindow[\"perf\"].nodeRender();\n    let { children } = this.props;\n    const { componentIdentifier, innerRef } = this.props;\n    const { lastError: error } = this.state;\n    const noChildren = !children || Array.isArray(children) && children.filter((c2) => c2).length === 0;\n    if (noChildren) {\n      const errorComponent = runtime.componentLoader.errorForIdentifier(componentIdentifier);\n      if (errorComponent) {\n        return this.renderErrorPlaceholder(errorComponent.file, errorComponent.error);\n      }\n    }\n    if (error && error.children === children) {\n      const component = runtime.componentLoader.componentForIdentifier(componentIdentifier);\n      const file = component ? component.file : \"???\";\n      return this.renderErrorPlaceholder(file, error.message);\n    }\n    (_b = (_a = safeWindow)[\"__checkComponentBudget__\"]) == null ? void 0 : _b.call(_a);\n    let frameProps = this.props;\n    if (RenderTarget.current() !== RenderTarget.canvas) {\n      const {\n        left,\n        right,\n        top,\n        bottom,\n        center,\n        centerX,\n        centerY,\n        aspectRatio,\n        parentSize,\n        width,\n        height,\n        rotation,\n        opacity,\n        visible,\n        _constraints,\n        _initialStyle,\n        name,\n        positionSticky,\n        positionStickyTop,\n        positionStickyRight,\n        positionStickyBottom,\n        positionStickyLeft,\n        componentIdentifier: originalComponentIdentifier,\n        children: originalChildren,\n        style,\n        duplicatedFrom,\n        widthType,\n        heightType,\n        ...childProps\n      } = frameProps;\n      children = react__WEBPACK_IMPORTED_MODULE_0__.Children.map(originalChildren, (child) => {\n        var _a2;\n        if (!isReactChild(child) || !isReactElement(child)) {\n          return child;\n        }\n        if (!isPageOrScroll(originalComponentIdentifier)) {\n          return /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(LayoutGroupContext.Provider, {\n            value: (_a2 = this.props.__layoutId) != null ? _a2 : null\n          }, /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(AnimateSharedLayout, null, /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(AutomaticLayoutIds, {\n            enabled: false\n          }, (0,react__WEBPACK_IMPORTED_MODULE_0__.cloneElement)(child, childProps))));\n        }\n        return (0,react__WEBPACK_IMPORTED_MODULE_0__.cloneElement)(child, childProps);\n      });\n      frameProps = {\n        style,\n        _constraints,\n        _initialStyle,\n        left,\n        right,\n        top,\n        bottom,\n        center,\n        centerX,\n        centerY,\n        aspectRatio,\n        parentSize,\n        width,\n        height,\n        rotation,\n        visible,\n        name,\n        duplicatedFrom,\n        id: frameProps.id,\n        layoutId: this.props.__layoutId,\n        widthType,\n        heightType,\n        positionSticky,\n        positionStickyTop,\n        positionStickyRight,\n        positionStickyBottom,\n        positionStickyLeft\n      };\n    }\n    return /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(ComponentContainerContext.Provider, {\n      value: true\n    }, /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(FrameWithMotion, {\n      \"data-framer-component-container\": true,\n      background: null,\n      overflow: \"visible\",\n      ref: innerRef,\n      ...frameProps\n    }, children));\n  }\n};\nvar DeprecatedComponentContainer = _DeprecatedComponentContainer;\nDeprecatedComponentContainer.supportsConstraints = true;\nDeprecatedComponentContainer.defaultComponentContainerProps = {\n  style: {},\n  visible: true,\n  componentIdentifier: \"\"\n};\nDeprecatedComponentContainer.defaultProps = {\n  ...Layer.defaultProps,\n  ..._DeprecatedComponentContainer.defaultComponentContainerProps\n};\nDeprecatedComponentContainer.contextType = ComponentContainerContext;\nfunction isPageOrScroll(identifier) {\n  if (!identifier)\n    return false;\n  if (identifier === \"framer/Page\")\n    return true;\n  if (identifier === \"framer/Scroll\")\n    return true;\n  return false;\n}\n\n// src/render/presentation/PresentationTree.ts\nfunction convertPresentationTree(node, converter, componentDefinitionProvider, getCachedNode, skipCodeComponentPropsCache = false) {\n  const cachedNode = getCachedNode && getCachedNode(node);\n  if (cachedNode)\n    return cachedNode;\n  let children;\n  if (isCodeComponentContainerPresentation(node)) {\n    children = convertCodeComponentContainer(componentDefinitionProvider, node, converter, getCachedNode, skipCodeComponentPropsCache);\n  } else if (node.children) {\n    children = node.children.map((n) => convertPresentationTree(n, converter, componentDefinitionProvider, getCachedNode, skipCodeComponentPropsCache));\n  }\n  return converter(node, children);\n}\nfunction isCodeComponentContainerPresentation(value) {\n  return !!value.codeComponentIdentifier;\n}\nfunction convertCodeComponentContainer(componentDefinitionProvider, node, converter, getCachedNode, skipCodeComponentPropsCache = false) {\n  const codeComponentChildren = node.getComponentChildren ? node.getComponentChildren(componentDefinitionProvider) : [];\n  const codeComponentSlots = node.getComponentSlotChildren ? node.getComponentSlotChildren(componentDefinitionProvider) : {};\n  let codeComponentPresentation;\n  const props = node.getCodeComponentProps ? node.getCodeComponentProps(componentDefinitionProvider, { skipCache: skipCodeComponentPropsCache }) : void 0;\n  if (node.cache.codeComponentPresentation) {\n    codeComponentPresentation = node.cache.codeComponentPresentation;\n    if (!isShallowEqualArray(codeComponentPresentation.children, codeComponentChildren)) {\n      codeComponentPresentation.cache.reactElement = null;\n      codeComponentPresentation.children = codeComponentChildren;\n    }\n    if (!isEqual(codeComponentPresentation.props, props)) {\n      codeComponentPresentation.cache.reactElement = null;\n      codeComponentPresentation.cache.props = null;\n      codeComponentPresentation.props = props;\n    }\n  } else {\n    const { id: containerId, codeComponentIdentifier: identifier, codeComponentPackageVersion } = node;\n    node.cache.codeComponentPresentation = codeComponentPresentation = new CodeComponentPresentation(containerId + identifier, identifier, codeComponentPackageVersion, props, codeComponentChildren);\n  }\n  codeComponentPresentation.props.placeholders = node.cache.placeholders;\n  const slotKeys = Object.keys(codeComponentSlots);\n  if (slotKeys.length) {\n    codeComponentPresentation.props = { ...codeComponentPresentation.props };\n    codeComponentPresentation.props.__slotKeys = slotKeys;\n    for (const slotKey of slotKeys) {\n      const slotChildren = codeComponentSlots[slotKey].map((child) => convertPresentationTree(child, converter, componentDefinitionProvider, getCachedNode, skipCodeComponentPropsCache));\n      codeComponentPresentation.props[slotKey] = slotChildren;\n    }\n  }\n  return [\n    converter(codeComponentPresentation, codeComponentPresentation.children.map((child) => convertPresentationTree(child, converter, componentDefinitionProvider, getCachedNode, skipCodeComponentPropsCache)))\n  ];\n}\nvar CodeComponentPresentation = class {\n  constructor(id, componentIdentifier, packageVersion, props, children, codeOverrideIdentifier) {\n    this.id = id;\n    this.componentIdentifier = componentIdentifier;\n    this.packageVersion = packageVersion;\n    this.props = props;\n    this.children = children;\n    this.codeOverrideIdentifier = codeOverrideIdentifier;\n    this.cache = {};\n  }\n  getProps() {\n    return {\n      ...this.props,\n      id: this.id,\n      key: this.id\n    };\n  }\n  rect(parentSize) {\n    return { x: 0, y: 0, width: 0, height: 0 };\n  }\n};\n\n// src/components/useNavigation.ts\n\nfunction useNavigation() {\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(NavigationContext);\n}\n\n// src/render/style/getCSSTextColorFromStyle.ts\nfunction _getCSSTextColorFromStyle(css) {\n  let color2;\n  if (typeof css[\"webkitTextFillColor\"] === \"string\") {\n    color2 = css[\"webkitTextFillColor\"];\n  }\n  if (typeof css.WebkitTextFillColor === \"string\") {\n    color2 = css.WebkitTextFillColor;\n  }\n  if (typeof css.color === \"string\") {\n    color2 = css.color;\n  }\n  if (color2) {\n    return ConvertColor.toRgbString(color2);\n  }\n}\n\n// src/render/DesignComponentWrapper.tsx\n\n\n// src/deprecated/WithOverride.tsx\n\n\n\n// src/deprecated/DataObserver.tsx\n\n\n// src/data/Data.ts\nfunction Data(initial = {}) {\n  const data = ObservableObject(initial, false, false);\n  Data.addData(data);\n  return data;\n}\n(function(Data2) {\n  Data2._stores = [];\n  function addData(data) {\n    Data2._stores.push(data);\n  }\n  Data2.addData = addData;\n  function reset() {\n    Data2._stores.forEach((target) => ObservableObject.resetObject(target));\n  }\n  Data2.reset = reset;\n  function addObserver(target, observer) {\n    return ObservableObject.addObserver(target, observer);\n  }\n  Data2.addObserver = addObserver;\n})(Data || (Data = {}));\n\n// src/deprecated/DataObserver.tsx\nvar initialState = { update: 0 };\nvar DataObserverContext = (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(initialState);\nfunction useObserveData() {\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(DataObserverContext);\n}\nvar DataObserver = class extends react__WEBPACK_IMPORTED_MODULE_0__.Component {\n  constructor() {\n    super(...arguments);\n    this.observers = [];\n    this.state = initialState;\n    this.taskAdded = false;\n    this.frameTask = () => {\n      this.setState({ update: this.state.update + 1 });\n      this.taskAdded = false;\n    };\n    this.observer = () => {\n      if (this.taskAdded)\n        return;\n      this.taskAdded = true;\n      MainLoop.addFrameTask(this.frameTask);\n    };\n  }\n  componentWillUnmount() {\n    this.observers.map((cancel) => cancel());\n    Data.reset();\n  }\n  render() {\n    const { children } = this.props;\n    this.observers.map((cancel) => cancel());\n    this.observers = [];\n    Data._stores.forEach((d) => {\n      const observer = Data.addObserver(d, this.observer);\n      this.observers.push(observer);\n    });\n    return /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(DataObserverContext.Provider, {\n      value: { ...this.state }\n    }, children);\n  }\n};\n\n// src/deprecated/convertColorProps.ts\nfunction convertColorObject(prop) {\n  if (typeof prop === \"string\" || isMotionValue2(prop)) {\n    return prop;\n  } else if (LinearGradient.isLinearGradient(prop)) {\n    return LinearGradient.toCSS(prop);\n  } else if (RadialGradient.isRadialGradient(prop)) {\n    return RadialGradient.toCSS(prop);\n  } else if (Color.isColorObject(prop)) {\n    return Color.toRgbString(prop);\n  }\n  return prop;\n}\nfunction convertColorProps(props) {\n  if (props.background || props.color) {\n    const converted = Object.assign({}, props);\n    if (props.background) {\n      converted.background = convertColorObject(props.background);\n    }\n    if (props.color) {\n      converted.color = convertColorObject(props.color);\n    }\n    return converted;\n  }\n  return props;\n}\n\n// src/deprecated/WithOverride.tsx\nvar hoistNonReactStatic4 = require_hoist_non_react_statics_cjs();\nfunction WithOverride(Component19, override) {\n  const useOverride = typeof override === \"function\" ? (props) => override(convertColorProps(props)) : () => convertColorProps(override);\n  const ComponentWithOverride = function(props) {\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(DataObserverContext);\n    const overrideProps = useOverride(props);\n    const { style, ...rest } = props;\n    return /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Component19, {\n      ...rest,\n      ...overrideProps,\n      _initialStyle: style\n    });\n  };\n  hoistNonReactStatic4(ComponentWithOverride, Component19);\n  ComponentWithOverride[\"displayName\"] = `WithOverride(${Component19.displayName || Component19.name})`;\n  return ComponentWithOverride;\n}\n\n// src/render/DesignComponentWrapper.tsx\nvar _CanvasStore = class {\n  constructor() {\n    this.canvas = { children: [] };\n    this.listeners = [];\n    this.ids = [];\n  }\n  static shared(data) {\n    if (data) {\n      const store = new _CanvasStore();\n      store.setCanvas(data);\n      return store;\n    }\n    if (!_CanvasStore.__shared) {\n      _CanvasStore.__shared = new _CanvasStore();\n    }\n    return _CanvasStore.__shared;\n  }\n  updateNode(presentationNode) {\n    const id = presentationNode.props.id;\n    let children = this.canvas.children;\n    if (!children) {\n      this.canvas.children = children = [];\n    }\n    let found = false;\n    for (let i = 0; i < children.length; i++) {\n      const child = children[i];\n      if (child.props.id === id) {\n        found = true;\n        children[i] = presentationNode;\n        break;\n      }\n    }\n    if (!found) {\n      children.push(presentationNode);\n    }\n    this.setCanvas(this.canvas);\n  }\n  setCanvas(canvas) {\n    if (!canvas.children)\n      return;\n    this.canvas = canvas;\n    this.listeners.forEach((l, at) => {\n      const id = this.ids[at];\n      const data = findNodeFor(canvas, id);\n      l.setState({ data });\n    });\n  }\n  registerListener(listener, idOrName) {\n    this.listeners.push(listener);\n    this.ids.push(idOrName);\n    return findNodeFor(this.canvas, idOrName);\n  }\n  removeListener(listener) {\n    const at = this.listeners.indexOf(listener);\n    if (at === -1)\n      return;\n    this.listeners.splice(at, 1);\n    this.ids.splice(at, 1);\n  }\n};\nvar CanvasStore = _CanvasStore;\nCanvasStore.__shared = null;\nvar builtInComponents = { Frame, Vector, Stack, VectorGroup, SVG, Text, DeprecatedComponentContainer };\nvar DesignComponent = class extends react__WEBPACK_IMPORTED_MODULE_0__.Component {\n  _typeForName(name) {\n    const builtIn = builtInComponents[name];\n    if (builtIn)\n      return builtIn;\n    const codeComponent = runtime.componentLoader.componentForIdentifier(name);\n    if (codeComponent && isReactDefinition(codeComponent)) {\n      return codeComponent.class;\n    }\n    return Frame;\n  }\n  _renderData(presentation, componentProps, topLevelProps) {\n    safeWindow[\"__checkBudget__\"]();\n    const { componentClass, name } = presentation;\n    let { props, children } = presentation;\n    props = { ...props, _constraints: { enabled: false } };\n    const type = this._typeForName(componentClass);\n    if (!type)\n      return null;\n    if (topLevelProps) {\n      const { style, ...rest } = props;\n      props = { ...rest, ...topLevelProps, _initialStyle: style };\n    }\n    if (!props.size && props._sizeOfMasterOnCanvas) {\n      if (!props.width) {\n        props.width = props._sizeOfMasterOnCanvas.width;\n      }\n      if (!props.height) {\n        props.height = props._sizeOfMasterOnCanvas.height;\n      }\n    }\n    if (name && componentProps.hasOwnProperty(name)) {\n      if (componentClass === \"Text\") {\n        const text = componentProps[name];\n        if (text) {\n          props = { ...props, text: componentProps[name] };\n        }\n      } else {\n        const orig = props.background;\n        const background = { src: componentProps[name], fit: orig.fit };\n        props = { ...props, background };\n      }\n    }\n    const c2 = children && children.map((child) => this._renderData(child, componentProps, void 0));\n    children = children ? c2 : [];\n    return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(type, props, children);\n  }\n  render() {\n    safeWindow[\"__checkBudget__\"]();\n    const data = this.state.data;\n    if (!data) {\n      throw new Error(\"Unable to connect to canvas data store.\");\n    }\n    return this._renderData(this.state.data, this.props, this.props);\n  }\n};\nfunction isNode2(id, presentation) {\n  const { name, props } = presentation;\n  return props && props.id === id || name === id;\n}\nfunction findNodeFor(presentation, id) {\n  if (!presentation)\n    return null;\n  if (isNode2(id, presentation)) {\n    return presentation;\n  }\n  const { children } = presentation;\n  if (!children || !isArray(children))\n    return null;\n  for (const child of children) {\n    if (isNode2(id, child)) {\n      return child;\n    }\n  }\n  for (const child of children) {\n    const result = findNodeFor(child, id);\n    if (result)\n      return result;\n  }\n  return null;\n}\nfunction createDesignComponent(canvasStore, id, propertyControls, width = 200, height = 200) {\n  var _a;\n  return _a = class extends DesignComponent {\n    static rect(props) {\n      const constraintValues = ConstraintValues.fromProperties(props);\n      return ConstraintValues.toRect(constraintValues, props.parentSize || null, null);\n    }\n    static minSize(props, parentSize) {\n      const constraintValues = ConstraintValues.fromProperties(props);\n      return ConstraintValues.toMinSize(constraintValues, parentSize || null);\n    }\n    static size(props, parentSize, freeSpace) {\n      const constraintValues = ConstraintValues.fromProperties(props);\n      return ConstraintValues.toSize(constraintValues, parentSize || null, null, freeSpace);\n    }\n    constructor(props, context) {\n      super(props, context);\n      const data = canvasStore.registerListener(this, id);\n      this.state = { data };\n    }\n    render() {\n      const maybeRenderWithProvider = (renderNode) => {\n        const nodeId = nodeIdFromString(id);\n        if (!this.state.data && renderNode) {\n          safeWindow[\"__checkBudget__\"]();\n          const el = renderNode(nodeId);\n          if (el && (0,react__WEBPACK_IMPORTED_MODULE_0__.isValidElement)(el) && typeof el.type !== \"string\") {\n            return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(WithOverride(el.type, this.props), el.props);\n          }\n        }\n        return super.render();\n      };\n      return /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(RenderNodeContext.Consumer, null, maybeRenderWithProvider);\n    }\n    componentWillUnmount() {\n      canvasStore.removeListener(this);\n    }\n  }, _a.displayName = `DesignComponent(${id})`, _a.propertyControls = propertyControls, _a.supportsConstraints = true, _a.defaultProps = {\n    _sizeOfMasterOnCanvas: {\n      width,\n      height\n    }\n  }, _a;\n}\nvar RenderNodeContext = (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(null);\nvar RenderNodeProvider = RenderNodeContext.Provider;\n\n// src/render/utils/withGeneratedLayoutId.tsx\n\nvar withGeneratedLayoutId = (Component19) => (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)((props, ref) => {\n  const layoutId = useLayoutId2(props);\n  return /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Component19, {\n    layoutId,\n    ...props,\n    layoutIdKey: void 0,\n    duplicatedFrom: void 0,\n    ref\n  });\n});\n\n// src/data/useData/index.ts\n\n\n// src/data/useData/store.ts\nfunction bindActionsToStore(get, set, actions) {\n  const boundActions = {};\n  for (const key6 in actions) {\n    boundActions[key6] = (data) => set(actions[key6](get(), data));\n  }\n  return boundActions;\n}\nfunction createStore(initialState2, unboundActions) {\n  let state = initialState2;\n  let version2 = 0;\n  const subscribers = new Set();\n  const notifySubscriber = (sub) => sub(version2);\n  const get = () => state;\n  const set = (latestState) => {\n    version2++;\n    state = latestState;\n    subscribers.forEach(notifySubscriber);\n  };\n  const actions = unboundActions ? bindActionsToStore(get, set, unboundActions) : set;\n  return {\n    get,\n    set,\n    getVersion: () => version2,\n    getActions: () => actions,\n    subscribe: (sub) => {\n      subscribers.add(sub);\n      return () => subscribers.delete(sub);\n    }\n  };\n}\n\n// src/data/useData/index.ts\nvar defaultId = Symbol(\"default\");\nvar DataContext = (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(defaultId);\nfunction createData(defaultState2, actions) {\n  const stores = new Map();\n  const useData = (id, initialState2) => {\n    const contextId = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(DataContext);\n    id = id || contextId;\n    const store = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n      if (!stores.has(id)) {\n        stores.set(id, createStore(initialState2 || defaultState2, actions));\n      }\n      return stores.get(id);\n    }, [id]);\n    const [, notifyUpdates] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(store.getVersion());\n    const storeValueAtHookCallTime = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => store.get(), [store]);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n      const unsubscribe = store.subscribe(notifyUpdates);\n      if (storeValueAtHookCallTime !== store.get())\n        notifyUpdates(store.getVersion());\n      return unsubscribe;\n    }, [store, storeValueAtHookCallTime]);\n    return [store.get(), store.getActions()];\n  };\n  return useData;\n}\n\n// src/utils/addActionControls.ts\nfunction addActionControls(action, title, controls) {\n  runtime.addActionControls(action, title, controls);\n}\n\n// src/data/PropertyStore.ts\nfunction PropertyStore(initial = {}, makeAnimatables = false) {\n  deprecationWarning(\"PropertyStore\", \"1.0.0\", \"Data() or ObservableObject()\");\n  return ObservableObject(initial, makeAnimatables);\n}\n(function(PropertyStore2) {\n  function addObserver(target, observer) {\n    return ObservableObject.addObserver(target, observer);\n  }\n  PropertyStore2.addObserver = addObserver;\n})(PropertyStore || (PropertyStore = {}));\n\n// src/utils/network.ts\nfunction loadJSON(url) {\n  return fetch(url, { mode: \"cors\" }).then((res) => res.json());\n}\n\n// src/utils/inspectObjectType.ts\nfunction inspectObjectType(item) {\n  let className;\n  if ((item.constructor !== null ? item.constructor.name : void 0) !== null && (item.constructor !== null ? item.constructor.name : void 0) !== \"Object\") {\n    return item.constructor.name;\n  }\n  const extract = function(str) {\n    if (!str) {\n      return null;\n    }\n    const regex = /\\[object (\\w+)\\]/;\n    const match = regex.exec(str);\n    if (match) {\n      return match[1];\n    }\n    return null;\n  };\n  if (item.toString) {\n    className = extract(item.toString());\n    if (className) {\n      return className;\n    }\n  }\n  if (item.constructor !== null ? item.constructor.toString : void 0) {\n    className = extract(item.constructor !== null ? item.constructor.toString() : void 0);\n    if (className) {\n      return className.replace(\"Constructor\", \"\");\n    }\n  }\n  return \"Object\";\n}\n\n// src/utils/inspect.ts\nfunction inspect(item, max, l) {\n  if (max === void 0) {\n    max = 5;\n  }\n  if (l === void 0) {\n    l = 0;\n  }\n  if (item === null) {\n    return \"null\";\n  }\n  if (item === void 0) {\n    return \"undefined\";\n  }\n  if (isFunction(item.toInspect)) {\n    return item.toInspect();\n  }\n  if (isString2(item)) {\n    return `\"${item}\"`;\n  }\n  if (isNumber(item)) {\n    return `${item}`;\n  }\n  if (isFunction(item)) {\n    let code = item.toString().slice(\"function \".length).replace(/\\n/g, \"\").replace(/\\s+/g, \" \");\n    const limit = 50;\n    if (code.length > limit && l > 0) {\n      code = `${code.slice(0, +limit + 1 || void 0).trim()}\\u2026 }`;\n    }\n    return `<Function ${code}>`;\n  }\n  if (isArray(item)) {\n    if (l > max) {\n      return \"[...]\";\n    }\n    return `[${item.map((i) => inspect(i, max, (l || 0) + 1)).join(\", \")}]`;\n  }\n  if (isObject(item)) {\n    let objectInfo;\n    const objectType = inspectObjectType(item);\n    if (/HTML\\w+?Element/.test(objectType)) {\n      return `<${objectType}>`;\n    }\n    if (l > max) {\n      objectInfo = \"{...}\";\n    } else {\n      const itemKeys = Object.keys(item);\n      objectInfo = `{${itemKeys.map((k) => `${k}:${inspect(item[k], max, (l || 0) + 1)}`).join(\", \")}}`;\n    }\n    if (objectType === \"Object\") {\n      return objectInfo;\n    }\n    return `<${objectType} ${objectInfo}>`;\n  }\n  return `${item}`;\n}\n\n// src/utils/print.ts\nfunction print(...args) {\n  const line = args.map((arg) => {\n    return inspect(arg);\n  }).join(\", \");\n  console.log(line);\n}\n\n// src/utils/addFonts.ts\nfunction addFonts(component, fonts) {\n  Object.assign(component, { fonts });\n}\nfunction getFonts(component) {\n  const fonts = component.fonts;\n  return fonts || [];\n}\n\n// src/version.ts\nvar version = \"1.3.6\";\n\n// src/animation/Motion/MotionSetup.tsx\n\n\n// src/animation/Motion/autoValueHandlers.ts\nvar correctBorderScale = (axis) => ({\n  process: (latest, { delta: delta2, treeScale }) => {\n    if (typeof latest === \"string\")\n      latest = parseFloat(latest);\n    if (latest === 0)\n      return \"0px\";\n    let corrected = Math.round(latest / delta2[axis].scale / treeScale[axis]);\n    corrected = Math.max(corrected, 1);\n    return corrected + \"px\";\n  }\n});\n\n// src/animation/Motion/MotionSetup.tsx\naddScaleCorrection({\n  borderTopWidth: correctBorderScale(\"y\"),\n  borderLeftWidth: correctBorderScale(\"x\"),\n  borderRightWidth: correctBorderScale(\"x\"),\n  borderBottomWidth: correctBorderScale(\"y\")\n});\nfunction MotionSetup({ children }) {\n  return /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, children);\n}\n\n// src/animation/Motion/startAnimation.ts\nfunction startAnimation2(_key, value, target, transition = {}) {\n  warnOnce(`\"startAnimation\" is unsupported. Use \"animate\" instead: https://www.framer.com/api/motion/utilities/#animate`);\n  return new Promise((resolve) => {\n    animate2(value, target, {\n      ...transition,\n      onComplete: () => resolve()\n    });\n  });\n}\n\n// src/modules/useAddVariantProps.ts\n\nfunction useAddVariantProps(baseVariant, gestureVariant, variantProps2) {\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((id) => {\n    var _a, _b, _c;\n    if (!variantProps2)\n      return {};\n    if (!baseVariant)\n      return {};\n    if (gestureVariant) {\n      return Object.assign({}, (_a = variantProps2[baseVariant]) == null ? void 0 : _a[id], (_b = variantProps2[gestureVariant]) == null ? void 0 : _b[id]);\n    }\n    return ((_c = variantProps2[baseVariant]) == null ? void 0 : _c[id]) || {};\n  }, [baseVariant, gestureVariant, variantProps2]);\n}\n\n// src/modules/useVariantState.ts\n\nfunction createGestureVariant(variant, type) {\n  return `${variant}-${type}`;\n}\nfunction nextVariant(allVariants, currentVariant) {\n  const index = allVariants.indexOf(currentVariant);\n  let nextIndex = index + 1;\n  if (nextIndex >= allVariants.length) {\n    nextIndex = 0;\n  }\n  return allVariants[nextIndex];\n}\nvar VariantSelector;\n(function(VariantSelector2) {\n  VariantSelector2[\"Variant\"] = \"v\";\n})(VariantSelector || (VariantSelector = {}));\nfunction getGesture(enabledGestures, isHovered, isPressed) {\n  const { hover, pressed } = enabledGestures || {};\n  if (pressed && isPressed)\n    return \"pressed\";\n  if (hover && isHovered)\n    return \"hover\";\n}\nfunction createVariantClassName(baseVariant, variantClassNames) {\n  const mappedClassName = variantClassNames[baseVariant];\n  if (mappedClassName)\n    return mappedClassName;\n  return `framer-${VariantSelector.Variant}-${baseVariant}`;\n}\nvar CycleVariantState = Symbol(\"cycle\");\nfunction useVariantState({\n  variant,\n  defaultVariant: externalDefaultVariant,\n  transitions: externalTransitions,\n  enabledGestures: externalEnabledGestures,\n  cycleOrder: externalCycleOrder = [],\n  variantProps: variantProps2 = {},\n  variantClassNames = {}\n}) {\n  const forceUpdate = useForceUpdate2();\n  const internalState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)({\n    isHovered: false,\n    isPressed: false,\n    baseVariant: variant != null ? variant : externalDefaultVariant,\n    gestureVariant: void 0,\n    defaultVariant: externalDefaultVariant,\n    enabledGestures: externalEnabledGestures,\n    cycleOrder: externalCycleOrder,\n    transitions: externalTransitions\n  });\n  const resolveNextVariant = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((nextBaseVariant = internalState.current.defaultVariant) => {\n    const {\n      baseVariant: baseVariant2,\n      gestureVariant: gestureVariant2,\n      isPressed: isPressed2,\n      isHovered: isHovered2,\n      defaultVariant: defaultVariant2,\n      enabledGestures: enabledGestures2\n    } = internalState.current;\n    const gesture = getGesture(enabledGestures2 == null ? void 0 : enabledGestures2[nextBaseVariant], isHovered2, isPressed2);\n    const nextGestureVariant = gesture ? createGestureVariant(nextBaseVariant, gesture) : void 0;\n    if (nextBaseVariant !== baseVariant2 || nextGestureVariant !== gestureVariant2) {\n      internalState.current.baseVariant = nextBaseVariant || defaultVariant2;\n      internalState.current.gestureVariant = nextGestureVariant;\n      forceUpdate();\n    }\n  }, [forceUpdate]);\n  const setGestureState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(({ isHovered: isHovered2, isPressed: isPressed2 }) => {\n    if (isHovered2 !== void 0)\n      internalState.current.isHovered = isHovered2;\n    if (isPressed2 !== void 0)\n      internalState.current.isPressed = isPressed2;\n    resolveNextVariant(internalState.current.baseVariant);\n  }, [resolveNextVariant]);\n  const setVariant = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((proposedVariant) => {\n    const { defaultVariant: defaultVariant2, cycleOrder, baseVariant: baseVariant2 } = internalState.current;\n    const nextBaseVariant = proposedVariant === CycleVariantState ? nextVariant(cycleOrder || [], baseVariant2 || defaultVariant2) : proposedVariant;\n    resolveNextVariant(nextBaseVariant || defaultVariant2);\n  }, [resolveNextVariant]);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect)(() => {\n    if (variant !== internalState.current.baseVariant)\n      setVariant(variant);\n  }, [variant, setVariant]);\n  const { baseVariant } = internalState.current;\n  const transition = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n    const { transitions } = internalState.current;\n    if (!transitions)\n      return void 0;\n    if (baseVariant) {\n      const variantTransition = transitions[baseVariant];\n      if (variantTransition)\n        return variantTransition;\n    }\n    return transitions.default;\n  }, [baseVariant]);\n  const variants = [];\n  const { gestureVariant, defaultVariant, enabledGestures, isHovered, isPressed } = internalState.current;\n  if (baseVariant && baseVariant !== defaultVariant)\n    variants.push(baseVariant);\n  if (gestureVariant)\n    variants.push(gestureVariant);\n  const addVariantProps = useAddVariantProps(baseVariant, gestureVariant, variantProps2);\n  return {\n    variants,\n    baseVariant,\n    gestureVariant,\n    transition,\n    setVariant,\n    setGestureState,\n    addVariantProps,\n    classNames: cx(createVariantClassName(baseVariant, variantClassNames), getGesture(enabledGestures == null ? void 0 : enabledGestures[baseVariant], isHovered, isPressed))\n  };\n}\n\n// src/modules/withCSS.tsx\n\nvar withCSS = (Component19, escapedCSS) => (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)((props, ref) => {\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect)(() => {\n    const css = Array.isArray(escapedCSS) ? escapedCSS : escapedCSS.split(\"\\n\");\n    css.forEach((rule) => rule && setDocumentStyles(rule));\n  }, []);\n  return /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Component19, {\n    ...props,\n    ref\n  });\n});\n\n// src/modules/Container.tsx\n\nfunction Providers({ children, layoutId, ...props }) {\n  const context = useConstant2(createBatcher);\n  const outerLayoutId = useConstant2(() => layoutId ? `${layoutId}-container` : void 0);\n  return /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(motion.div, {\n    layoutId: outerLayoutId,\n    ...props\n  }, /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(ComponentContainerContext.Provider, {\n    value: true\n  }, /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(SharedLayoutContext.Provider, {\n    value: context\n  }, /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(AutomaticLayoutIds, {\n    enabled: false\n  }, /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(LayoutGroupContext.Provider, {\n    value: layoutId != null ? layoutId : null\n  }, react__WEBPACK_IMPORTED_MODULE_0__.Children.map(children, (child) => {\n    return (0,react__WEBPACK_IMPORTED_MODULE_0__.isValidElement)(child) ? (0,react__WEBPACK_IMPORTED_MODULE_0__.cloneElement)(child, { layoutId }) : child;\n  }))))));\n}\nvar Container = withGeneratedLayoutId(Providers);\n\n// src/modules/callEach.ts\nvar callEach = (...fns) => fns.forEach((fn) => fn && fn());\n\n// src/modules/useOnVariantChange.ts\n\n\n// src/modules/useIsOnFramerCanvas.ts\nfunction useIsOnFramerCanvas() {\n  return RenderTarget.current() === RenderTarget.canvas;\n}\n\n// src/modules/useOnVariantChange.ts\nfunction callbackForVariant(map, variant) {\n  if (map[variant])\n    return map[variant];\n  if (variant in map)\n    return void 0;\n  return map.default;\n}\nfunction useOnVariantChange(variant, callbackMap) {\n  const isOnFramerCanvas = useIsOnFramerCanvas();\n  if (isOnFramerCanvas)\n    return;\n  const isInCurrentTargetRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(true);\n  useOnCurrentTargetChange((isInTarget) => {\n    if (!isInCurrentTargetRef.current && isInTarget) {\n      const callback = callbackForVariant(callbackMap, variant);\n      if (callback)\n        callback();\n    }\n    isInCurrentTargetRef.current = isInTarget;\n  }, [callbackMap]);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (isInCurrentTargetRef.current) {\n      const callback = callbackForVariant(callbackMap, variant);\n      if (callback)\n        callback();\n    }\n  }, [variant, callbackMap]);\n}\nfunction useOnAppear(callback) {\n  useOnVariantChange(\"default\", { default: callback });\n}\n\n// src/modules/useActiveVariantCallback.ts\n\nfunction rejectPending(pendingTimers, pendingPromises) {\n  pendingTimers.forEach((t) => clearTimeout(t));\n  pendingTimers.clear();\n  pendingPromises.forEach((reject) => reject && reject(\"Callback cancelled by variant change\"));\n  pendingPromises.clear();\n}\nfunction createSet() {\n  return new Set();\n}\nfunction useActiveVariantCallback(baseVariant) {\n  const pendingPromises = useConstant2(createSet);\n  const pendingTimers = useConstant2(createSet);\n  useOnCurrentTargetChange(() => {\n    return () => rejectPending(pendingTimers, pendingPromises);\n  });\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    return () => rejectPending(pendingTimers, pendingPromises);\n  }, [pendingPromises, pendingTimers]);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    rejectPending(pendingTimers, pendingPromises);\n  }, [baseVariant, pendingPromises, pendingTimers]);\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)({\n    activeVariantCallback: (callback) => (...args) => {\n      return new Promise((resolve, reject) => {\n        pendingPromises.add(reject);\n        return callback(...args).then(resolve);\n      }).catch(() => {\n      });\n    },\n    delay: async (callback, msDelay) => {\n      await new Promise((resolve) => pendingTimers.add(globalThis.setTimeout(() => resolve(true), msDelay)));\n      callback();\n    }\n  }).current;\n}\nfunction useActiveTargetCallback() {\n  const value = useActiveVariantCallback(void 0);\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)({\n    activeTargetCallback: value.activeVariantCallback,\n    delay: value.delay\n  }).current;\n}\n\n// src/modules/useNavigate.tsx\n\nfunction lazy2(factory) {\n  const LazyComponent = (0,react__WEBPACK_IMPORTED_MODULE_0__.lazy)(factory);\n  let factoryPromise;\n  let LoadedComponent;\n  const Component19 = (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(function LazyWithPreload(props, ref) {\n    return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(LoadedComponent != null ? LoadedComponent : LazyComponent, Object.assign(ref ? { ref } : {}, props));\n  });\n  Component19.preload = () => {\n    if (!factoryPromise) {\n      factoryPromise = factory().then((module) => {\n        LoadedComponent = module.default;\n      });\n    }\n    return factoryPromise;\n  };\n  return Component19;\n}\nfunction useNavigate({ preload } = {}) {\n  const navigation = useNavigation();\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (!navigation)\n      return;\n    preload == null ? void 0 : preload.forEach((component) => \"preload\" in component && component.preload());\n  }, []);\n  if (!navigation)\n    return () => {\n    };\n  return async (target, options = {}) => {\n    if (target === \"previous\") {\n      navigation.goBack();\n      return false;\n    }\n    const { appearsFrom, backdropColor, animation } = options;\n    if (!target)\n      return;\n    switch (options.transition) {\n      case \"instant\":\n        navigation.instant(target);\n        break;\n      case \"fade\":\n        navigation.fade(target, { animation });\n        break;\n      case \"push\":\n        navigation.push(target, { appearsFrom, animation });\n        break;\n      case \"modal\":\n        navigation.modal(target, { backdropColor, animation });\n        break;\n      case \"overlay\":\n        navigation.overlay(target, { appearsFrom, backdropColor, animation });\n        break;\n      case \"flip\":\n        navigation.flip(target, { appearsFrom, animation });\n        break;\n      case \"magicMotion\":\n        navigation.magicMotion(target, { animation });\n        break;\n    }\n    return false;\n  };\n}\n\n// src/modules/LayoutGroup.tsx\n\n\nvar LayoutGroup = ({\n  id,\n  children\n}) => {\n  const parentLayoutId = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(LayoutGroupContext);\n  if (!id)\n    return /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, children);\n  const combinedLayoutId = parentLayoutId && parentLayoutId !== id ? `${parentLayoutId}-${id}` : id;\n  return /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(LayoutGroupContext.Provider, {\n    value: combinedLayoutId\n  }, children);\n};\n\n// src/modules/useHotkey.ts\n\nvar modifierDefaults = {\n  altKey: false,\n  ctrlKey: false,\n  metaKey: false,\n  shiftKey: false\n};\nfunction createShortcutDefinition(shortcut) {\n  const keys2 = shortcut.split(\"+\");\n  const key6 = keys2.pop();\n  if (!key6)\n    return void 0;\n  const modifiers = {};\n  for (const modifier of keys2) {\n    modifiers[`${modifier}Key`] = true;\n  }\n  return {\n    ...modifierDefaults,\n    ...modifiers,\n    key: key6\n  };\n}\nfunction useHotkey(shortcut, callback) {\n  const inTarget = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(true);\n  const shortcutDefinition = useConstant2(() => createShortcutDefinition(shortcut));\n  useOnCurrentTargetChange((isCurrentTarget, isOverlayed) => {\n    inTarget.current = isCurrentTarget && !isOverlayed;\n    return () => inTarget.current = false;\n  });\n  const eventHandler = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((event) => {\n    if (!shortcutDefinition)\n      return;\n    if (!inTarget.current)\n      return;\n    if (!Object.keys(shortcutDefinition).every((key6) => shortcutDefinition[key6] === event[key6]))\n      return;\n    event.preventDefault();\n    callback();\n  }, [shortcutDefinition, callback]);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    document.addEventListener(\"keydown\", eventHandler);\n    return () => document.removeEventListener(\"keydown\", eventHandler);\n  }, [eventHandler]);\n}\n\n// src/modules/useGamepad.ts\n\nfunction isFramerGamepadKeydownData(value) {\n  return isObject(value) && value.mapping !== void 0;\n}\nfunction createGamepadPoller() {\n  const callbacks2 = new Set();\n  let isConnected = false;\n  let isPolling = null;\n  let lastKey = null;\n  const startPolling = () => {\n    const input = getFirstAvailableGamepadInput();\n    if (!input)\n      return;\n    const { gamepad, key: key6 } = input;\n    const { mapping, id } = gamepad;\n    if (key6 && lastKey !== key6)\n      callbacks2.forEach((callback) => callback({ key: key6, mapping, id }));\n    lastKey = key6;\n    isPolling = window.requestAnimationFrame(startPolling);\n  };\n  const handleConnection = () => {\n    if (isConnected || isPolling)\n      return;\n    startPolling();\n    isConnected = true;\n  };\n  const stopPolling = () => {\n    if (!isPolling)\n      return;\n    window.cancelAnimationFrame(isPolling);\n    isPolling = null;\n  };\n  const handleDisconnection = () => {\n    if (!isConnected)\n      return;\n    stopPolling();\n    isConnected = false;\n  };\n  const setupAndStartPolling = () => {\n    if (isPolling)\n      return;\n    const gamepad = getFirstAvailableGamepadInput();\n    if (!gamepad) {\n      window.addEventListener(\"gamepadconnected\", handleConnection);\n      return;\n    }\n    window.addEventListener(\"gamepaddisconnected\", handleDisconnection);\n    isConnected = true;\n    startPolling();\n  };\n  const cleanupAndStopPolling = () => {\n    if (!isPolling)\n      return;\n    window.removeEventListener(\"gamepadconnected\", handleConnection);\n    window.removeEventListener(\"gamepaddisconnected\", handleDisconnection);\n    stopPolling();\n  };\n  return {\n    register(callback) {\n      if (callbacks2.size === 0)\n        setupAndStartPolling();\n      callbacks2.add(callback);\n    },\n    unregister(callback) {\n      callbacks2.delete(callback);\n      if (callbacks2.size === 0)\n        cleanupAndStopPolling();\n    }\n  };\n}\nvar GamepadContext = (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(createGamepadPoller());\nfunction getFirstAvailableGamepadInput() {\n  let firstConnectedGamepad = null;\n  const gamepads = navigator.getGamepads();\n  for (const gamepad of gamepads) {\n    if (!gamepad)\n      continue;\n    if (!firstConnectedGamepad) {\n      firstConnectedGamepad = gamepad;\n    }\n    const axis = scanPressedAxis(gamepad);\n    if (axis !== null)\n      return { gamepad, key: axis };\n    const button = scanPressedButton(gamepad);\n    if (button !== null)\n      return { gamepad, key: button };\n  }\n  if (firstConnectedGamepad)\n    return { gamepad: firstConnectedGamepad, key: null };\n  return null;\n}\nfunction scanPressedAxis(gamepad) {\n  for (const [idx, axis] of gamepad.axes.entries()) {\n    if (idx > 3)\n      return null;\n    if (axis <= -0.5)\n      return `Axis ${idx}-`;\n    if (axis > 0.5)\n      return `Axis ${idx}+`;\n  }\n  return null;\n}\nfunction scanPressedButton(gamepad) {\n  for (const [idx, button] of gamepad.buttons.entries()) {\n    if (isButtonPressed(button))\n      return `Button ${idx}`;\n  }\n  return null;\n}\nfunction isButtonPressed(button) {\n  return button.pressed === true || button.value > 0;\n}\nfunction useGamepad(key6, callback, options = { mapping: \"standard\" }) {\n  const context = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(GamepadContext);\n  const mapping = useConstant2(() => options.mapping);\n  const cb2 = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((input) => {\n    if (key6 === input.key && mapping === input.mapping)\n      callback();\n  }, [key6, mapping, callback]);\n  useOnCurrentTargetChange((isInTarget, isOverlayed) => {\n    const isActive = isInTarget && !isOverlayed;\n    if (isActive) {\n      context.register(cb2);\n    } else {\n      context.unregister(cb2);\n    }\n    return () => context.unregister(cb2);\n  }, []);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    return () => context.unregister(cb2);\n  }, [cb2, context]);\n}\n\n// src/index.ts\nif (false) {}\n\n/*! *****************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n//# sourceMappingURL=framer.debug.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/framer/build/esm/framer.debug.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/components/Button.tsx":
/*!***********************************!*\
  !*** ./src/components/Button.tsx ***!
  \***********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Button)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var framer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! framer */ \"(app-pages-browser)/./node_modules/framer/build/esm/framer.debug.js\");\n/* harmony import */ var framer_motion__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! framer-motion */ \"(app-pages-browser)/./node_modules/framer-motion/dist/es/value/use-motion-value.mjs\");\n/* harmony import */ var _SimpleGlobalState__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./SimpleGlobalState */ \"(app-pages-browser)/./src/components/SimpleGlobalState.tsx\");\n\nvar _s = $RefreshSig$();\n\n\n\n\n/**\n * @framerSupportedLayoutWidth any-prefer-fixed\n * @framerSupportedLayoutHeight auto\n */ function Button(props) {\n    _s();\n    const { text = \"Button\", variant = \"primary\", size = \"medium\", disabled = false, loading = false, fullWidth = false, externalDisabled = false, linkedForm, linkedFormId = \"\", showIcon = false, icon, iconPosition = \"left\", iconSize = 16, iconColor = \"#FFFFFF\", backgroundColor = \"#000000\", textColor = \"#FFFFFF\", borderColor = \"#000000\", hoverBackgroundColor = \"#333333\", hoverTextColor = \"#FFFFFF\", hoverBorderColor = \"#333333\", borderRadius = \"8px\", padding = \"12px 24px\", font, onClick } = props;\n    const [isHovered, setIsHovered] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    // Motion values for linking\n    const disabledMotion = (0,framer_motion__WEBPACK_IMPORTED_MODULE_4__.useMotionValue)(disabled || externalDisabled);\n    const formDataMotion = (0,framer_motion__WEBPACK_IMPORTED_MODULE_4__.useMotionValue)({\n        hasContent: false,\n        value: \"\"\n    });\n    const isDisabled = disabled || externalDisabled;\n    // Component linking system\n    // const { createLink } = useComponentLink({\n    //     id: componentId,\n    //     type: 'button',\n    //     data: {\n    //         disabled: isDisabled,\n    //         text,\n    //         variant,\n    //         hasContent: false // Will be updated by linked form\n    //     },\n    //     onDataUpdate: (data) => {\n    //         // Handle updates from linked form\n    //         if (data.hasContent !== undefined) {\n    //             // Update button state based on form content\n    //             console.log('Button received form update:', data)\n    //         }\n    //     }\n    // })\n    // Auto-link with form if ID is provided\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"Button.useEffect\": ()=>{\n            if (linkedFormId && linkedFormId.trim() !== '') {\n                // Subscribe to form updates\n                const handleFormUpdate = {\n                    \"Button.useEffect.handleFormUpdate\": (formData)=>{\n                        // Update button state based on form data\n                        console.log('Button received form update:', formData);\n                    }\n                }[\"Button.useEffect.handleFormUpdate\"];\n                (0,_SimpleGlobalState__WEBPACK_IMPORTED_MODULE_3__.subscribeToComponent)(linkedFormId, handleFormUpdate);\n                return ({\n                    \"Button.useEffect\": ()=>{\n                        (0,_SimpleGlobalState__WEBPACK_IMPORTED_MODULE_3__.unsubscribeFromComponent)(linkedFormId, handleFormUpdate);\n                    }\n                })[\"Button.useEffect\"];\n            }\n        }\n    }[\"Button.useEffect\"], [\n        linkedFormId\n    ]);\n    // Sync with linked form if provided (legacy method)\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"Button.useEffect\": ()=>{\n            if (linkedForm && linkedForm.get) {\n                const formData = linkedForm.get();\n                if (formData) {\n                    disabledMotion.set(formData.disabled || false);\n                    formDataMotion.set({\n                        hasContent: formData.hasContent || false,\n                        value: formData.value || \"\"\n                    });\n                }\n            }\n        }\n    }[\"Button.useEffect\"], [\n        linkedForm,\n        disabledMotion,\n        formDataMotion\n    ]);\n    const handleClick = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"Button.useCallback[handleClick]\": ()=>{\n            if (!isDisabled && !loading && onClick) {\n                (0,react__WEBPACK_IMPORTED_MODULE_1__.startTransition)({\n                    \"Button.useCallback[handleClick]\": ()=>onClick()\n                }[\"Button.useCallback[handleClick]\"]);\n            }\n        }\n    }[\"Button.useCallback[handleClick]\"], [\n        isDisabled,\n        loading,\n        onClick\n    ]);\n    const handleMouseEnter = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"Button.useCallback[handleMouseEnter]\": ()=>{\n            (0,react__WEBPACK_IMPORTED_MODULE_1__.startTransition)({\n                \"Button.useCallback[handleMouseEnter]\": ()=>setIsHovered(true)\n            }[\"Button.useCallback[handleMouseEnter]\"]);\n        }\n    }[\"Button.useCallback[handleMouseEnter]\"], []);\n    const handleMouseLeave = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"Button.useCallback[handleMouseLeave]\": ()=>{\n            (0,react__WEBPACK_IMPORTED_MODULE_1__.startTransition)({\n                \"Button.useCallback[handleMouseLeave]\": ()=>setIsHovered(false)\n            }[\"Button.useCallback[handleMouseLeave]\"]);\n        }\n    }[\"Button.useCallback[handleMouseLeave]\"], []);\n    const getVariantStyles = ()=>{\n        // Define variant-specific colors\n        const getVariantColors = ()=>{\n            switch(variant){\n                case \"primary\":\n                    return {\n                        bg: \"#000000\",\n                        text: \"#FFFFFF\",\n                        border: \"#000000\",\n                        hoverBg: \"#333333\",\n                        hoverText: \"#FFFFFF\",\n                        hoverBorder: \"#333333\"\n                    };\n                case \"secondary\":\n                    return {\n                        bg: \"#F5F5F5\",\n                        text: \"#000000\",\n                        border: \"#F5F5F5\",\n                        hoverBg: \"#E5E5E5\",\n                        hoverText: \"#000000\",\n                        hoverBorder: \"#E5E5E5\"\n                    };\n                case \"outline\":\n                    return {\n                        bg: \"transparent\",\n                        text: \"#000000\",\n                        border: \"#000000\",\n                        hoverBg: \"#000000\",\n                        hoverText: \"#FFFFFF\",\n                        hoverBorder: \"#000000\"\n                    };\n                case \"ghost\":\n                    return {\n                        bg: \"transparent\",\n                        text: \"#000000\",\n                        border: \"transparent\",\n                        hoverBg: \"#F5F5F5\",\n                        hoverText: \"#000000\",\n                        hoverBorder: \"transparent\"\n                    };\n                case \"danger\":\n                    return {\n                        bg: \"#FF4444\",\n                        text: \"#FFFFFF\",\n                        border: \"#FF4444\",\n                        hoverBg: \"#CC3333\",\n                        hoverText: \"#FFFFFF\",\n                        hoverBorder: \"#CC3333\"\n                    };\n                default:\n                    return {\n                        bg: backgroundColor,\n                        text: textColor,\n                        border: borderColor,\n                        hoverBg: hoverBackgroundColor,\n                        hoverText: hoverTextColor,\n                        hoverBorder: hoverBorderColor\n                    };\n            }\n        };\n        const colors = getVariantColors();\n        const baseStyles = {\n            backgroundColor: isDisabled ? \"#CCCCCC\" : colors.bg,\n            color: isDisabled ? \"#666666\" : colors.text,\n            border: \"1px solid \".concat(isDisabled ? \"#CCCCCC\" : colors.border)\n        };\n        if (isHovered && !isDisabled) {\n            return {\n                ...baseStyles,\n                backgroundColor: colors.hoverBg,\n                color: colors.hoverText,\n                border: \"1px solid \".concat(colors.hoverBorder)\n            };\n        }\n        return baseStyles;\n    };\n    const getSizeMultiplier = ()=>{\n        switch(size){\n            case \"small\":\n                return 0.75;\n            case \"large\":\n                return 1.25;\n            default:\n                return 1;\n        }\n    };\n    const parsePadding = ()=>{\n        const paddingValues = padding.split(' ').map((p)=>parseInt(p.replace('px', '')));\n        const [top, right, bottom, left] = paddingValues.length === 1 ? [\n            paddingValues[0],\n            paddingValues[0],\n            paddingValues[0],\n            paddingValues[0]\n        ] : paddingValues.length === 2 ? [\n            paddingValues[0],\n            paddingValues[1],\n            paddingValues[0],\n            paddingValues[1]\n        ] : paddingValues.length === 4 ? paddingValues : [\n            12,\n            24,\n            12,\n            24\n        ] // fallback\n        ;\n        const multiplier = getSizeMultiplier();\n        return {\n            paddingTop: \"\".concat(top * multiplier, \"px\"),\n            paddingRight: \"\".concat(right * multiplier, \"px\"),\n            paddingBottom: \"\".concat(bottom * multiplier, \"px\"),\n            paddingLeft: \"\".concat(left * multiplier, \"px\")\n        };\n    };\n    const variantStyles = getVariantStyles();\n    const paddingStyles = parsePadding();\n    const buttonStyles = {\n        ...paddingStyles,\n        ...variantStyles,\n        borderRadius: borderRadius,\n        width: fullWidth ? \"100%\" : \"auto\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        gap: \"8px\",\n        cursor: isDisabled || loading ? \"not-allowed\" : \"pointer\",\n        transition: \"all 0.2s ease\",\n        outline: \"none\",\n        ...font,\n        fontSize: (font === null || font === void 0 ? void 0 : font.fontSize) || (size === \"small\" ? \"12px\" : size === \"large\" ? \"16px\" : \"14px\"),\n        fontWeight: (font === null || font === void 0 ? void 0 : font.fontWeight) || \"500\",\n        letterSpacing: (font === null || font === void 0 ? void 0 : font.letterSpacing) || \"0\",\n        lineHeight: (font === null || font === void 0 ? void 0 : font.lineHeight) || \"1.2em\"\n    };\n    const renderIcon = ()=>{\n        if (!showIcon || !icon) return null;\n        const iconStyle = {\n            width: \"\".concat(iconSize, \"px\"),\n            height: \"\".concat(iconSize, \"px\"),\n            color: isDisabled ? \"#666666\" : iconColor,\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\"\n        };\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            style: iconStyle,\n            children: icon\n        }, void 0, false, {\n            fileName: \"/Users/zibon/Documents/Vibe/Cursor/Framer Workshop/framer-workshop/src/components/Button.tsx\",\n            lineNumber: 282,\n            columnNumber: 16\n        }, this);\n    };\n    const renderLoadingSpinner = ()=>{\n        if (!loading) return null;\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            style: {\n                width: \"\".concat(iconSize, \"px\"),\n                height: \"\".concat(iconSize, \"px\"),\n                border: \"2px solid transparent\",\n                borderTop: \"2px solid \".concat(isDisabled ? \"#666666\" : textColor),\n                borderRadius: \"50%\",\n                animation: \"spin 1s linear infinite\"\n            }\n        }, void 0, false, {\n            fileName: \"/Users/zibon/Documents/Vibe/Cursor/Framer Workshop/framer-workshop/src/components/Button.tsx\",\n            lineNumber: 289,\n            columnNumber: 13\n        }, this);\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"style\", {\n                children: \"\\n                    @keyframes spin {\\n                        0% { transform: rotate(0deg); }\\n                        100% { transform: rotate(360deg); }\\n                    }\\n                \"\n            }, void 0, false, {\n                fileName: \"/Users/zibon/Documents/Vibe/Cursor/Framer Workshop/framer-workshop/src/components/Button.tsx\",\n                lineNumber: 304,\n                columnNumber: 13\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                style: {\n                    ...buttonStyles,\n                    ...props.style\n                },\n                onClick: handleClick,\n                onMouseEnter: handleMouseEnter,\n                onMouseLeave: handleMouseLeave,\n                disabled: isDisabled || loading,\n                type: \"button\",\n                children: [\n                    showIcon && iconPosition === \"left\" && renderIcon(),\n                    loading ? renderLoadingSpinner() : text,\n                    showIcon && iconPosition === \"right\" && renderIcon()\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/zibon/Documents/Vibe/Cursor/Framer Workshop/framer-workshop/src/components/Button.tsx\",\n                lineNumber: 312,\n                columnNumber: 13\n            }, this)\n        ]\n    }, void 0, true);\n}\n_s(Button, \"9Z0/rh1H3JzCM3+gJR0hmYHY5lg=\", false, function() {\n    return [\n        framer_motion__WEBPACK_IMPORTED_MODULE_4__.useMotionValue,\n        framer_motion__WEBPACK_IMPORTED_MODULE_4__.useMotionValue\n    ];\n});\n_c = Button;\n(0,framer__WEBPACK_IMPORTED_MODULE_2__.addPropertyControls)(Button, {\n    // === BASIC SETTINGS ===\n    text: {\n        type: framer__WEBPACK_IMPORTED_MODULE_2__.ControlType.String,\n        title: \"Text\",\n        defaultValue: \"Button\"\n    },\n    variant: {\n        type: framer__WEBPACK_IMPORTED_MODULE_2__.ControlType.Enum,\n        title: \"Variant\",\n        options: [\n            \"primary\",\n            \"secondary\",\n            \"outline\",\n            \"ghost\",\n            \"danger\",\n            \"custom\"\n        ],\n        optionTitles: [\n            \"Primary\",\n            \"Secondary\",\n            \"Outline\",\n            \"Ghost\",\n            \"Danger\",\n            \"Custom\"\n        ],\n        defaultValue: \"primary\"\n    },\n    size: {\n        type: framer__WEBPACK_IMPORTED_MODULE_2__.ControlType.Enum,\n        title: \"Size\",\n        options: [\n            \"small\",\n            \"medium\",\n            \"large\"\n        ],\n        optionTitles: [\n            \"Small\",\n            \"Medium\",\n            \"Large\"\n        ],\n        defaultValue: \"medium\"\n    },\n    disabled: {\n        type: framer__WEBPACK_IMPORTED_MODULE_2__.ControlType.Boolean,\n        title: \"Disabled\",\n        defaultValue: false,\n        enabledTitle: \"Yes\",\n        disabledTitle: \"No\"\n    },\n    externalDisabled: {\n        type: framer__WEBPACK_IMPORTED_MODULE_2__.ControlType.Boolean,\n        title: \"External Disabled\",\n        defaultValue: false,\n        enabledTitle: \"Yes\",\n        disabledTitle: \"No\"\n    },\n    linkedForm: {\n        type: framer__WEBPACK_IMPORTED_MODULE_2__.ControlType.ComponentInstance,\n        title: \"Linked Form\",\n        description: \"Link to a FormBuilder component anywhere in your project\"\n    },\n    componentId: {\n        type: framer__WEBPACK_IMPORTED_MODULE_2__.ControlType.String,\n        title: \"Component ID\",\n        defaultValue: \"button-123\",\n        description: \"Unique identifier for this button (auto-generated if empty)\"\n    },\n    linkedFormId: {\n        type: framer__WEBPACK_IMPORTED_MODULE_2__.ControlType.String,\n        title: \"Linked Form ID\",\n        defaultValue: \"\",\n        description: \"Enter the Form's Component ID to link them (works anywhere in Framer)\"\n    },\n    loading: {\n        type: framer__WEBPACK_IMPORTED_MODULE_2__.ControlType.Boolean,\n        title: \"Loading\",\n        defaultValue: false,\n        enabledTitle: \"Yes\",\n        disabledTitle: \"No\"\n    },\n    fullWidth: {\n        type: framer__WEBPACK_IMPORTED_MODULE_2__.ControlType.Boolean,\n        title: \"Full Width\",\n        defaultValue: false,\n        enabledTitle: \"Yes\",\n        disabledTitle: \"No\"\n    },\n    // === ICON SETTINGS ===\n    showIcon: {\n        type: framer__WEBPACK_IMPORTED_MODULE_2__.ControlType.Boolean,\n        title: \"Show Icon\",\n        defaultValue: false,\n        enabledTitle: \"Show\",\n        disabledTitle: \"Hide\"\n    },\n    icon: {\n        type: framer__WEBPACK_IMPORTED_MODULE_2__.ControlType.ComponentInstance,\n        title: \"Icon\",\n        hidden: (param)=>{\n            let { showIcon } = param;\n            return !showIcon;\n        }\n    },\n    iconPosition: {\n        type: framer__WEBPACK_IMPORTED_MODULE_2__.ControlType.Enum,\n        title: \"Icon Position\",\n        options: [\n            \"left\",\n            \"right\"\n        ],\n        optionTitles: [\n            \"Left\",\n            \"Right\"\n        ],\n        defaultValue: \"left\",\n        hidden: (param)=>{\n            let { showIcon } = param;\n            return !showIcon;\n        }\n    },\n    iconSize: {\n        type: framer__WEBPACK_IMPORTED_MODULE_2__.ControlType.Number,\n        title: \"Icon Size\",\n        defaultValue: 16,\n        min: 12,\n        max: 24,\n        step: 1,\n        unit: \"px\",\n        hidden: (param)=>{\n            let { showIcon } = param;\n            return !showIcon;\n        }\n    },\n    iconColor: {\n        type: framer__WEBPACK_IMPORTED_MODULE_2__.ControlType.Color,\n        title: \"Icon Color\",\n        defaultValue: \"#FFFFFF\",\n        hidden: (param)=>{\n            let { showIcon } = param;\n            return !showIcon;\n        }\n    },\n    // === CUSTOM STYLING (only shown for custom variant) ===\n    backgroundColor: {\n        type: framer__WEBPACK_IMPORTED_MODULE_2__.ControlType.Color,\n        title: \"Background\",\n        defaultValue: \"#000000\",\n        hidden: (param)=>{\n            let { variant } = param;\n            return variant !== \"custom\";\n        }\n    },\n    textColor: {\n        type: framer__WEBPACK_IMPORTED_MODULE_2__.ControlType.Color,\n        title: \"Text Color\",\n        defaultValue: \"#FFFFFF\",\n        hidden: (param)=>{\n            let { variant } = param;\n            return variant !== \"custom\";\n        }\n    },\n    borderColor: {\n        type: framer__WEBPACK_IMPORTED_MODULE_2__.ControlType.Color,\n        title: \"Border Color\",\n        defaultValue: \"#000000\",\n        hidden: (param)=>{\n            let { variant } = param;\n            return variant !== \"custom\";\n        }\n    },\n    hoverBackgroundColor: {\n        type: framer__WEBPACK_IMPORTED_MODULE_2__.ControlType.Color,\n        title: \"Hover Background\",\n        defaultValue: \"#333333\",\n        hidden: (param)=>{\n            let { variant } = param;\n            return variant !== \"custom\";\n        }\n    },\n    hoverTextColor: {\n        type: framer__WEBPACK_IMPORTED_MODULE_2__.ControlType.Color,\n        title: \"Hover Text\",\n        defaultValue: \"#FFFFFF\",\n        hidden: (param)=>{\n            let { variant } = param;\n            return variant !== \"custom\";\n        }\n    },\n    hoverBorderColor: {\n        type: framer__WEBPACK_IMPORTED_MODULE_2__.ControlType.Color,\n        title: \"Hover Border\",\n        defaultValue: \"#333333\",\n        hidden: (param)=>{\n            let { variant } = param;\n            return variant !== \"custom\";\n        }\n    },\n    // === LAYOUT & STYLING ===\n    borderRadius: {\n        type: framer__WEBPACK_IMPORTED_MODULE_2__.ControlType.BorderRadius,\n        title: \"Border Radius\",\n        defaultValue: \"8px\"\n    },\n    padding: {\n        type: framer__WEBPACK_IMPORTED_MODULE_2__.ControlType.Padding,\n        title: \"Padding\",\n        defaultValue: \"12px 24px\"\n    },\n    // === TYPOGRAPHY ===\n    font: {\n        type: framer__WEBPACK_IMPORTED_MODULE_2__.ControlType.Font,\n        title: \"Font\",\n        defaultValue: {\n            fontSize: \"14px\",\n            variant: \"Medium\",\n            letterSpacing: \"0\",\n            lineHeight: \"1.2em\"\n        },\n        controls: \"extended\",\n        defaultFontType: \"sans-serif\"\n    },\n    // === EVENTS ===\n    onClick: {\n        type: framer__WEBPACK_IMPORTED_MODULE_2__.ControlType.EventHandler,\n        title: \"On Click\"\n    }\n});\nvar _c;\n$RefreshReg$(_c, \"Button\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/Button.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/components/FormBuilderOrg.tsx":
/*!*******************************************!*\
  !*** ./src/components/FormBuilderOrg.tsx ***!
  \*******************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ FormBuilder)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var framer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! framer */ \"(app-pages-browser)/./node_modules/framer/build/esm/framer.debug.js\");\n/* harmony import */ var framer_motion__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! framer-motion */ \"(app-pages-browser)/./node_modules/framer-motion/dist/es/value/use-motion-value.mjs\");\n/* harmony import */ var _SimpleGlobalState__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./SimpleGlobalState */ \"(app-pages-browser)/./src/components/SimpleGlobalState.tsx\");\n// Form component with style customization and multiple input types including chip suggestions\n\nvar _s = $RefreshSig$();\n\n\n\n\n/**\n * @framerSupportedLayoutWidth any-prefer-fixed\n * @framerSupportedLayoutHeight auto\n */ function FormBuilder(props) {\n    _s();\n    const { fieldType = \"text\", label = \"Field Label\", showLabel = true, placeholder = \"Enter text...\", placeholderColor = \"#999999\", required = false, dropdownOptions = [\n        {\n            label: \"Option 1\",\n            value: \"option1\"\n        },\n        {\n            label: \"Option 2\",\n            value: \"option2\"\n        },\n        {\n            label: \"Option 3\",\n            value: \"option3\"\n        }\n    ], radioOptions = [\n        {\n            label: \"Choice A\",\n            value: \"a\"\n        },\n        {\n            label: \"Choice B\",\n            value: \"b\"\n        },\n        {\n            label: \"Choice C\",\n            value: \"c\"\n        }\n    ], chipSuggestions = [\n        \"Suggestion 1\",\n        \"Suggestion 2\",\n        \"Suggestion 3\",\n        \"Suggestion 4\"\n    ], backgroundColor = \"#FFFFFF\", borderColor = \"#EEEEEE\", focusColor = \"#000000\", textColor = \"#000000\", labelColor = \"#000000\", borderRadius = \"8px\", heightMode = \"fixed\", height = 40, padding = \"12px\", labelFont, inputFont, showChips = true, chipBackgroundColor = \"#F5F5F5\", chipTextColor = \"#000000\", chipSelectedBackgroundColor = \"#000000\", chipSelectedTextColor = \"#FFFFFF\", chipBorderColor = \"#EEEEEE\", chipBorderRadius = 16, chipPadding = 8, chipGap = 6, chipFont, showChipBeforeIcon = false, chipBeforeIcon, showChipAfterIcon = false, chipAfterIcon, chipIconSize = 12, showClearButton = true, clearButtonColor = \"#CCCCCC\", showBeforeIcon = false, beforeIcon, showAfterIcon = false, afterIcon, iconSize = 16, showButton = false, buttonText = \"Submit\", buttonEnabledBackground = \"#000000\", buttonEnabledText = \"#FFFFFF\", buttonDisabledBackground = \"#CCCCCC\", buttonDisabledText = \"#666666\", buttonBorderRadius = \"8px\", buttonPadding = \"12px\", buttonFont, buttonState, linkedButton, componentId = \"form-\" + Math.random().toString(36).substr(2, 9) } = props;\n    const [value, setValue] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [selectedChips, setSelectedChips] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [isFocused, setIsFocused] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    // Motion values for linking with external components\n    const buttonDisabledMotion = (0,framer_motion__WEBPACK_IMPORTED_MODULE_4__.useMotionValue)(false);\n    const hasContentMotion = (0,framer_motion__WEBPACK_IMPORTED_MODULE_4__.useMotionValue)(false);\n    // Component linking system - will be initialized after hasContent and isButtonDisabled are calculated\n    // const { createLink, updateData } = useComponentLink({\n    //     id: componentId,\n    //     type: 'form',\n    //     data: {\n    //         hasContent: false, // Will be updated in useEffect\n    //         isButtonDisabled: true, // Will be updated in useEffect\n    //         value,\n    //         selectedChips,\n    //         fieldType,\n    //         label\n    //     },\n    //     onDataUpdate: (data) => {\n    //         // Handle updates from linked components\n    //         console.log('Form received update:', data)\n    //     }\n    // })\n    // Auto-link with button if ID is provided\n    // React.useEffect(() => {\n    //     if (linkedButtonId && linkedButtonId.trim() !== '') {\n    //         createLink(linkedButtonId)\n    //     }\n    // }, [linkedButtonId, createLink])\n    const handleInputChange = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"FormBuilder.useCallback[handleInputChange]\": (newValue)=>{\n            (0,react__WEBPACK_IMPORTED_MODULE_1__.startTransition)({\n                \"FormBuilder.useCallback[handleInputChange]\": ()=>setValue(newValue)\n            }[\"FormBuilder.useCallback[handleInputChange]\"]);\n        }\n    }[\"FormBuilder.useCallback[handleInputChange]\"], []);\n    const handleChipClick = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"FormBuilder.useCallback[handleChipClick]\": (chip)=>{\n            if (fieldType === \"chips\") {\n                setSelectedChips({\n                    \"FormBuilder.useCallback[handleChipClick]\": (prev)=>prev.includes(chip) ? prev.filter({\n                            \"FormBuilder.useCallback[handleChipClick]\": (c)=>c !== chip\n                        }[\"FormBuilder.useCallback[handleChipClick]\"]) : [\n                            ...prev,\n                            chip\n                        ]\n                }[\"FormBuilder.useCallback[handleChipClick]\"]);\n            } else {\n                // For text and textarea fields, accumulate chips with comma separation\n                if (value.trim() === \"\") {\n                    setValue(chip);\n                } else {\n                    setValue({\n                        \"FormBuilder.useCallback[handleChipClick]\": (prev)=>prev + \", \" + chip\n                    }[\"FormBuilder.useCallback[handleChipClick]\"]);\n                }\n            }\n        }\n    }[\"FormBuilder.useCallback[handleChipClick]\"], [\n        fieldType,\n        value\n    ]);\n    const handleFocus = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"FormBuilder.useCallback[handleFocus]\": ()=>{\n            (0,react__WEBPACK_IMPORTED_MODULE_1__.startTransition)({\n                \"FormBuilder.useCallback[handleFocus]\": ()=>setIsFocused(true)\n            }[\"FormBuilder.useCallback[handleFocus]\"]);\n        }\n    }[\"FormBuilder.useCallback[handleFocus]\"], []);\n    const handleBlur = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"FormBuilder.useCallback[handleBlur]\": ()=>{\n            (0,react__WEBPACK_IMPORTED_MODULE_1__.startTransition)({\n                \"FormBuilder.useCallback[handleBlur]\": ()=>setIsFocused(false)\n            }[\"FormBuilder.useCallback[handleBlur]\"]);\n        }\n    }[\"FormBuilder.useCallback[handleBlur]\"], []);\n    const handleClear = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"FormBuilder.useCallback[handleClear]\": ()=>{\n            setValue(\"\");\n            setSelectedChips([]);\n        }\n    }[\"FormBuilder.useCallback[handleClear]\"], []);\n    const handleButtonClick = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"FormBuilder.useCallback[handleButtonClick]\": ()=>{\n            // Button click handler - can be customized\n            console.log(\"Form submitted with value:\", value);\n        }\n    }[\"FormBuilder.useCallback[handleButtonClick]\"], [\n        value\n    ]);\n    const getInputPadding = ()=>{\n        // Parse padding string (e.g., \"12px\" or \"12px 16px 12px 16px\")\n        const paddingValues = padding.split(' ').map((p)=>parseInt(p.replace('px', '')));\n        const [top, right, bottom, left] = paddingValues.length === 1 ? [\n            paddingValues[0],\n            paddingValues[0],\n            paddingValues[0],\n            paddingValues[0]\n        ] : paddingValues.length === 2 ? [\n            paddingValues[0],\n            paddingValues[1],\n            paddingValues[0],\n            paddingValues[1]\n        ] : paddingValues.length === 4 ? paddingValues : [\n            12,\n            12,\n            12,\n            12\n        ] // fallback\n        ;\n        let leftPadding = left;\n        let rightPadding = right;\n        if (showBeforeIcon && beforeIcon) {\n            leftPadding = left + iconSize + 8;\n        }\n        if (showAfterIcon && afterIcon) {\n            rightPadding = right + iconSize + 8;\n        }\n        if (showClearButton && value && (fieldType === \"text\" || fieldType === \"textarea\")) {\n            rightPadding = Math.max(rightPadding, right + 32);\n        }\n        return {\n            leftPadding,\n            rightPadding,\n            topPadding: top,\n            bottomPadding: bottom\n        };\n    };\n    const { leftPadding, rightPadding, topPadding, bottomPadding } = getInputPadding();\n    const inputStyles = {\n        width: \"100%\",\n        ...heightMode === \"fixed\" && {\n            height: \"\".concat(height, \"px\")\n        },\n        ...heightMode === \"fit\" && {\n            minHeight: \"\".concat(height, \"px\")\n        },\n        paddingLeft: \"\".concat(leftPadding, \"px\"),\n        paddingRight: \"\".concat(rightPadding, \"px\"),\n        paddingTop: \"\".concat(topPadding, \"px\"),\n        paddingBottom: \"\".concat(bottomPadding, \"px\"),\n        backgroundColor,\n        border: \"1px solid \".concat(isFocused ? focusColor : borderColor),\n        borderRadius: borderRadius,\n        color: textColor,\n        outline: \"none\",\n        transition: \"border-color 0.2s ease\",\n        ...inputFont,\n        fontSize: (inputFont === null || inputFont === void 0 ? void 0 : inputFont.fontSize) || \"14px\"\n    };\n    const renderIcon = (icon, position)=>{\n        if (!icon) return null;\n        // Parse padding to get left/right values\n        const paddingValues = padding.split(' ').map((p)=>parseInt(p.replace('px', '')));\n        const [, right, , left] = paddingValues.length === 1 ? [\n            paddingValues[0],\n            paddingValues[0],\n            paddingValues[0],\n            paddingValues[0]\n        ] : paddingValues.length === 2 ? [\n            paddingValues[0],\n            paddingValues[1],\n            paddingValues[0],\n            paddingValues[1]\n        ] : paddingValues.length === 4 ? paddingValues : [\n            12,\n            12,\n            12,\n            12\n        ] // fallback\n        ;\n        const iconStyle = {\n            position: \"absolute\",\n            top: \"50%\",\n            transform: \"translateY(-50%)\",\n            [position === \"before\" ? \"left\" : \"right\"]: position === \"before\" ? \"\".concat(left, \"px\") : \"\".concat(right, \"px\"),\n            width: \"\".concat(iconSize, \"px\"),\n            height: \"\".concat(iconSize, \"px\"),\n            pointerEvents: \"none\",\n            zIndex: 1\n        };\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            style: iconStyle,\n            children: icon\n        }, void 0, false, {\n            fileName: \"/Users/zibon/Documents/Vibe/Cursor/Framer Workshop/framer-workshop/src/components/FormBuilderOrg.tsx\",\n            lineNumber: 305,\n            columnNumber: 16\n        }, this);\n    };\n    const renderChipIcon = (icon)=>{\n        if (!icon) return null;\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            style: {\n                width: \"\".concat(chipIconSize, \"px\"),\n                height: \"\".concat(chipIconSize, \"px\"),\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\"\n            },\n            children: icon\n        }, void 0, false, {\n            fileName: \"/Users/zibon/Documents/Vibe/Cursor/Framer Workshop/framer-workshop/src/components/FormBuilderOrg.tsx\",\n            lineNumber: 312,\n            columnNumber: 13\n        }, this);\n    };\n    // Check if form has content for button state\n    const hasContent = value.trim().length > 0 || selectedChips.length > 0;\n    const isButtonDisabled = buttonState ? buttonState === \"disabled\" : !hasContent;\n    // Update motion values when content changes\n    react__WEBPACK_IMPORTED_MODULE_1___default().useEffect({\n        \"FormBuilder.useEffect\": ()=>{\n            hasContentMotion.set(hasContent);\n            buttonDisabledMotion.set(isButtonDisabled);\n        }\n    }[\"FormBuilder.useEffect\"], [\n        hasContent,\n        isButtonDisabled,\n        hasContentMotion,\n        buttonDisabledMotion\n    ]);\n    // Update component data when form state changes\n    react__WEBPACK_IMPORTED_MODULE_1___default().useEffect({\n        \"FormBuilder.useEffect\": ()=>{\n            (0,_SimpleGlobalState__WEBPACK_IMPORTED_MODULE_3__.setComponentData)(componentId, 'form', {\n                hasContent,\n                isButtonDisabled,\n                value,\n                selectedChips,\n                fieldType,\n                label\n            });\n        }\n    }[\"FormBuilder.useEffect\"], [\n        hasContent,\n        isButtonDisabled,\n        value,\n        selectedChips,\n        fieldType,\n        label,\n        componentId\n    ]);\n    // Sync with linked button if provided\n    react__WEBPACK_IMPORTED_MODULE_1___default().useEffect({\n        \"FormBuilder.useEffect\": ()=>{\n            if (linkedButton && linkedButton.set) {\n                linkedButton.set({\n                    disabled: isButtonDisabled,\n                    hasContent: hasContent,\n                    value: value,\n                    selectedChips: selectedChips\n                });\n            }\n        }\n    }[\"FormBuilder.useEffect\"], [\n        isButtonDisabled,\n        hasContent,\n        value,\n        selectedChips,\n        linkedButton\n    ]);\n    const renderInput = ()=>{\n        switch(fieldType){\n            case \"textarea\":\n                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    style: {\n                        position: \"relative\"\n                    },\n                    children: [\n                        showBeforeIcon && beforeIcon && renderIcon(beforeIcon, \"before\"),\n                        showAfterIcon && afterIcon && renderIcon(afterIcon, \"after\"),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"textarea\", {\n                            value: value,\n                            onChange: (e)=>handleInputChange(e.target.value),\n                            onFocus: handleFocus,\n                            onBlur: handleBlur,\n                            placeholder: placeholder,\n                            required: required,\n                            className: \"form-builder-textarea\",\n                            style: {\n                                ...inputStyles,\n                                minHeight: heightMode === \"fit\" ? \"\".concat(height, \"px\") : undefined,\n                                resize: heightMode === \"fit\" ? \"none\" : \"vertical\",\n                                fontFamily: \"inherit\"\n                            }\n                        }, void 0, false, {\n                            fileName: \"/Users/zibon/Documents/Vibe/Cursor/Framer Workshop/framer-workshop/src/components/FormBuilderOrg.tsx\",\n                            lineNumber: 371,\n                            columnNumber: 25\n                        }, this),\n                        showClearButton && value && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                            type: \"button\",\n                            onClick: handleClear,\n                            style: {\n                                position: \"absolute\",\n                                right: showAfterIcon && afterIcon ? \"\".concat(rightPadding + iconSize + 8, \"px\") : \"8px\",\n                                top: \"8px\",\n                                background: \"none\",\n                                border: \"none\",\n                                cursor: \"pointer\",\n                                color: clearButtonColor,\n                                fontSize: \"16px\",\n                                width: \"24px\",\n                                height: \"24px\",\n                                display: \"flex\",\n                                alignItems: \"center\",\n                                justifyContent: \"center\",\n                                borderRadius: \"50%\",\n                                transition: \"background-color 0.2s ease\",\n                                zIndex: 2\n                            },\n                            onMouseEnter: (e)=>{\n                                e.currentTarget.style.backgroundColor = \"#F0F0F0\";\n                            },\n                            onMouseLeave: (e)=>{\n                                e.currentTarget.style.backgroundColor = \"transparent\";\n                            },\n                            \"aria-label\": \"Clear input\",\n                            children: \"\\xd7\"\n                        }, void 0, false, {\n                            fileName: \"/Users/zibon/Documents/Vibe/Cursor/Framer Workshop/framer-workshop/src/components/FormBuilderOrg.tsx\",\n                            lineNumber: 387,\n                            columnNumber: 29\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/zibon/Documents/Vibe/Cursor/Framer Workshop/framer-workshop/src/components/FormBuilderOrg.tsx\",\n                    lineNumber: 364,\n                    columnNumber: 21\n                }, this);\n            case \"dropdown\":\n                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    style: {\n                        position: \"relative\"\n                    },\n                    children: [\n                        showBeforeIcon && beforeIcon && renderIcon(beforeIcon, \"before\"),\n                        showAfterIcon && afterIcon && renderIcon(afterIcon, \"after\"),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"select\", {\n                            value: value,\n                            onChange: (e)=>handleInputChange(e.target.value),\n                            onFocus: handleFocus,\n                            onBlur: handleBlur,\n                            required: required,\n                            \"aria-label\": placeholder,\n                            style: {\n                                ...inputStyles,\n                                cursor: \"pointer\",\n                                appearance: \"none\",\n                                backgroundImage: \"url(\\\"data:image/svg+xml;charset=UTF-8,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='\".concat(encodeURIComponent(textColor), \"' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3e%3cpolyline points='6,9 12,15 18,9'%3e%3c/polyline%3e%3c/svg%3e\\\")\"),\n                                backgroundRepeat: \"no-repeat\",\n                                backgroundPosition: showAfterIcon && afterIcon ? \"right \".concat(rightPadding + iconSize + 16, \"px center\") : \"right 12px center\",\n                                backgroundSize: \"16px\"\n                            },\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                    value: \"\",\n                                    children: placeholder\n                                }, void 0, false, {\n                                    fileName: \"/Users/zibon/Documents/Vibe/Cursor/Framer Workshop/framer-workshop/src/components/FormBuilderOrg.tsx\",\n                                    lineNumber: 456,\n                                    columnNumber: 29\n                                }, this),\n                                dropdownOptions.map((option, index)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                        value: option.value,\n                                        children: option.label\n                                    }, index, false, {\n                                        fileName: \"/Users/zibon/Documents/Vibe/Cursor/Framer Workshop/framer-workshop/src/components/FormBuilderOrg.tsx\",\n                                        lineNumber: 458,\n                                        columnNumber: 33\n                                    }, this))\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/zibon/Documents/Vibe/Cursor/Framer Workshop/framer-workshop/src/components/FormBuilderOrg.tsx\",\n                            lineNumber: 436,\n                            columnNumber: 25\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/zibon/Documents/Vibe/Cursor/Framer Workshop/framer-workshop/src/components/FormBuilderOrg.tsx\",\n                    lineNumber: 429,\n                    columnNumber: 21\n                }, this);\n            case \"radio\":\n                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    style: {\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        gap: \"8px\"\n                    },\n                    children: radioOptions.map((option, index)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                            style: {\n                                display: \"flex\",\n                                alignItems: \"center\",\n                                gap: \"8px\",\n                                cursor: \"pointer\",\n                                ...inputFont,\n                                fontSize: (inputFont === null || inputFont === void 0 ? void 0 : inputFont.fontSize) || \"14px\"\n                            },\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                    type: \"radio\",\n                                    name: \"radio-group\",\n                                    value: option.value,\n                                    checked: value === option.value,\n                                    onChange: (e)=>handleInputChange(e.target.value),\n                                    style: {\n                                        accentColor: focusColor,\n                                        width: \"16px\",\n                                        height: \"16px\"\n                                    }\n                                }, void 0, false, {\n                                    fileName: \"/Users/zibon/Documents/Vibe/Cursor/Framer Workshop/framer-workshop/src/components/FormBuilderOrg.tsx\",\n                                    lineNumber: 487,\n                                    columnNumber: 33\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                    style: {\n                                        color: textColor\n                                    },\n                                    children: option.label\n                                }, void 0, false, {\n                                    fileName: \"/Users/zibon/Documents/Vibe/Cursor/Framer Workshop/framer-workshop/src/components/FormBuilderOrg.tsx\",\n                                    lineNumber: 501,\n                                    columnNumber: 33\n                                }, this)\n                            ]\n                        }, index, true, {\n                            fileName: \"/Users/zibon/Documents/Vibe/Cursor/Framer Workshop/framer-workshop/src/components/FormBuilderOrg.tsx\",\n                            lineNumber: 476,\n                            columnNumber: 29\n                        }, this))\n                }, void 0, false, {\n                    fileName: \"/Users/zibon/Documents/Vibe/Cursor/Framer Workshop/framer-workshop/src/components/FormBuilderOrg.tsx\",\n                    lineNumber: 468,\n                    columnNumber: 21\n                }, this);\n            case \"chips\":\n                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    style: {\n                        ...inputStyles,\n                        minHeight: heightMode === \"fit\" ? \"\".concat(height, \"px\") : undefined,\n                        display: \"flex\",\n                        flexWrap: \"wrap\",\n                        gap: \"6px\",\n                        alignItems: \"center\",\n                        position: \"relative\"\n                    },\n                    onClick: handleFocus,\n                    onBlur: handleBlur,\n                    tabIndex: 0,\n                    children: [\n                        showBeforeIcon && beforeIcon && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            style: {\n                                position: \"absolute\",\n                                left: \"\".concat(leftPadding, \"px\"),\n                                top: \"50%\",\n                                transform: \"translateY(-50%)\",\n                                width: \"\".concat(iconSize, \"px\"),\n                                height: \"\".concat(iconSize, \"px\"),\n                                color: \"#000000\",\n                                pointerEvents: \"none\",\n                                zIndex: 1\n                            },\n                            children: beforeIcon\n                        }, void 0, false, {\n                            fileName: \"/Users/zibon/Documents/Vibe/Cursor/Framer Workshop/framer-workshop/src/components/FormBuilderOrg.tsx\",\n                            lineNumber: 526,\n                            columnNumber: 29\n                        }, this),\n                        showAfterIcon && afterIcon && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            style: {\n                                position: \"absolute\",\n                                right: \"\".concat(rightPadding, \"px\"),\n                                top: \"50%\",\n                                transform: \"translateY(-50%)\",\n                                width: \"\".concat(iconSize, \"px\"),\n                                height: \"\".concat(iconSize, \"px\"),\n                                color: \"#000000\",\n                                pointerEvents: \"none\",\n                                zIndex: 1\n                            },\n                            children: afterIcon\n                        }, void 0, false, {\n                            fileName: \"/Users/zibon/Documents/Vibe/Cursor/Framer Workshop/framer-workshop/src/components/FormBuilderOrg.tsx\",\n                            lineNumber: 543,\n                            columnNumber: 29\n                        }, this),\n                        selectedChips.map((chip, index)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                style: {\n                                    backgroundColor: chipSelectedBackgroundColor,\n                                    color: chipSelectedTextColor,\n                                    border: \"1px solid \".concat(chipBorderColor),\n                                    padding: \"\".concat(chipPadding, \"px \").concat(chipPadding * 1.5, \"px\"),\n                                    borderRadius: \"\".concat(chipBorderRadius, \"px\"),\n                                    display: \"flex\",\n                                    alignItems: \"center\",\n                                    gap: \"4px\",\n                                    cursor: \"pointer\",\n                                    ...chipFont,\n                                    fontSize: (chipFont === null || chipFont === void 0 ? void 0 : chipFont.fontSize) || \"12px\"\n                                },\n                                onClick: ()=>handleChipClick(chip),\n                                children: [\n                                    showChipBeforeIcon && chipBeforeIcon && renderChipIcon(chipBeforeIcon),\n                                    chip,\n                                    showChipAfterIcon && chipAfterIcon && renderChipIcon(chipAfterIcon),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                        style: {\n                                            fontSize: \"10px\"\n                                        },\n                                        children: \"\\xd7\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/zibon/Documents/Vibe/Cursor/Framer Workshop/framer-workshop/src/components/FormBuilderOrg.tsx\",\n                                        lineNumber: 585,\n                                        columnNumber: 33\n                                    }, this)\n                                ]\n                            }, index, true, {\n                                fileName: \"/Users/zibon/Documents/Vibe/Cursor/Framer Workshop/framer-workshop/src/components/FormBuilderOrg.tsx\",\n                                lineNumber: 560,\n                                columnNumber: 29\n                            }, this)),\n                        selectedChips.length === 0 && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                            style: {\n                                color: placeholderColor,\n                                fontSize: (inputFont === null || inputFont === void 0 ? void 0 : inputFont.fontSize) || \"14px\",\n                                marginLeft: showBeforeIcon && beforeIcon ? \"\".concat(leftPadding + iconSize + 8, \"px\") : \"0px\"\n                            },\n                            children: placeholder\n                        }, void 0, false, {\n                            fileName: \"/Users/zibon/Documents/Vibe/Cursor/Framer Workshop/framer-workshop/src/components/FormBuilderOrg.tsx\",\n                            lineNumber: 589,\n                            columnNumber: 29\n                        }, this),\n                        showClearButton && selectedChips.length > 0 && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                            type: \"button\",\n                            onClick: handleClear,\n                            style: {\n                                position: \"absolute\",\n                                right: showAfterIcon && afterIcon ? \"\".concat(rightPadding + iconSize + 8, \"px\") : \"8px\",\n                                top: \"8px\",\n                                background: \"none\",\n                                border: \"none\",\n                                cursor: \"pointer\",\n                                color: clearButtonColor,\n                                fontSize: \"16px\",\n                                width: \"24px\",\n                                height: \"24px\",\n                                display: \"flex\",\n                                alignItems: \"center\",\n                                justifyContent: \"center\",\n                                borderRadius: \"50%\",\n                                transition: \"background-color 0.2s ease\",\n                                zIndex: 2\n                            },\n                            onMouseEnter: (e)=>{\n                                e.currentTarget.style.backgroundColor = \"#F0F0F0\";\n                            },\n                            onMouseLeave: (e)=>{\n                                e.currentTarget.style.backgroundColor = \"transparent\";\n                            },\n                            \"aria-label\": \"Clear input\",\n                            children: \"\\xd7\"\n                        }, void 0, false, {\n                            fileName: \"/Users/zibon/Documents/Vibe/Cursor/Framer Workshop/framer-workshop/src/components/FormBuilderOrg.tsx\",\n                            lineNumber: 603,\n                            columnNumber: 29\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/zibon/Documents/Vibe/Cursor/Framer Workshop/framer-workshop/src/components/FormBuilderOrg.tsx\",\n                    lineNumber: 511,\n                    columnNumber: 21\n                }, this);\n            default:\n                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    style: {\n                        position: \"relative\"\n                    },\n                    children: [\n                        showBeforeIcon && beforeIcon && renderIcon(beforeIcon, \"before\"),\n                        showAfterIcon && afterIcon && renderIcon(afterIcon, \"after\"),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                            type: \"text\",\n                            value: value,\n                            onChange: (e)=>handleInputChange(e.target.value),\n                            onFocus: handleFocus,\n                            onBlur: handleBlur,\n                            placeholder: placeholder,\n                            required: required,\n                            className: \"form-builder-input\",\n                            style: inputStyles\n                        }, void 0, false, {\n                            fileName: \"/Users/zibon/Documents/Vibe/Cursor/Framer Workshop/framer-workshop/src/components/FormBuilderOrg.tsx\",\n                            lineNumber: 652,\n                            columnNumber: 25\n                        }, this),\n                        showClearButton && value && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                            type: \"button\",\n                            onClick: handleClear,\n                            style: {\n                                position: \"absolute\",\n                                right: showAfterIcon && afterIcon ? \"\".concat(rightPadding + iconSize + 8, \"px\") : \"8px\",\n                                top: \"8px\",\n                                background: \"none\",\n                                border: \"none\",\n                                cursor: \"pointer\",\n                                color: clearButtonColor,\n                                fontSize: \"16px\",\n                                width: \"24px\",\n                                height: \"24px\",\n                                display: \"flex\",\n                                alignItems: \"center\",\n                                justifyContent: \"center\",\n                                borderRadius: \"50%\",\n                                transition: \"background-color 0.2s ease\",\n                                zIndex: 2\n                            },\n                            onMouseEnter: (e)=>{\n                                e.currentTarget.style.backgroundColor = \"#F0F0F0\";\n                            },\n                            onMouseLeave: (e)=>{\n                                e.currentTarget.style.backgroundColor = \"transparent\";\n                            },\n                            \"aria-label\": \"Clear input\",\n                            children: \"\\xd7\"\n                        }, void 0, false, {\n                            fileName: \"/Users/zibon/Documents/Vibe/Cursor/Framer Workshop/framer-workshop/src/components/FormBuilderOrg.tsx\",\n                            lineNumber: 664,\n                            columnNumber: 29\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/zibon/Documents/Vibe/Cursor/Framer Workshop/framer-workshop/src/components/FormBuilderOrg.tsx\",\n                    lineNumber: 645,\n                    columnNumber: 21\n                }, this);\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"style\", {\n                children: \"\\n                    .form-builder-input::placeholder {\\n                        color: \".concat(placeholderColor, \" !important;\\n                    }\\n                    .form-builder-textarea::placeholder {\\n                        color: \").concat(placeholderColor, \" !important;\\n                    }\\n                \")\n            }, void 0, false, {\n                fileName: \"/Users/zibon/Documents/Vibe/Cursor/Framer Workshop/framer-workshop/src/components/FormBuilderOrg.tsx\",\n                lineNumber: 708,\n                columnNumber: 13\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                style: {\n                    ...props.style,\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    gap: \"8px\",\n                    width: \"100%\"\n                },\n                children: [\n                    showLabel && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                        style: {\n                            color: labelColor,\n                            ...labelFont,\n                            fontSize: (labelFont === null || labelFont === void 0 ? void 0 : labelFont.fontSize) || \"14px\",\n                            fontWeight: (labelFont === null || labelFont === void 0 ? void 0 : labelFont.fontWeight) || \"500\"\n                        },\n                        children: [\n                            label,\n                            required && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                style: {\n                                    color: \"#FF5588\",\n                                    marginLeft: \"2px\"\n                                },\n                                children: \"*\"\n                            }, void 0, false, {\n                                fileName: \"/Users/zibon/Documents/Vibe/Cursor/Framer Workshop/framer-workshop/src/components/FormBuilderOrg.tsx\",\n                                lineNumber: 738,\n                                columnNumber: 29\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/zibon/Documents/Vibe/Cursor/Framer Workshop/framer-workshop/src/components/FormBuilderOrg.tsx\",\n                        lineNumber: 728,\n                        columnNumber: 21\n                    }, this),\n                    renderInput(),\n                    showChips && (fieldType === \"text\" || fieldType === \"textarea\" || fieldType === \"chips\") && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        style: {\n                            display: \"flex\",\n                            flexWrap: \"wrap\",\n                            gap: \"\".concat(chipGap, \"px\"),\n                            marginTop: \"4px\"\n                        },\n                        children: chipSuggestions.map((chip, index)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                type: \"button\",\n                                onClick: ()=>handleChipClick(chip),\n                                style: {\n                                    backgroundColor: selectedChips.includes(chip) ? chipSelectedBackgroundColor : chipBackgroundColor,\n                                    color: selectedChips.includes(chip) ? chipSelectedTextColor : chipTextColor,\n                                    border: \"1px solid \".concat(chipBorderColor),\n                                    borderRadius: \"\".concat(chipBorderRadius, \"px\"),\n                                    padding: \"\".concat(chipPadding, \"px \").concat(chipPadding * 1.5, \"px\"),\n                                    cursor: \"pointer\",\n                                    transition: \"all 0.2s ease\",\n                                    outline: \"none\",\n                                    display: \"flex\",\n                                    alignItems: \"center\",\n                                    gap: \"8px\",\n                                    ...chipFont,\n                                    fontSize: (chipFont === null || chipFont === void 0 ? void 0 : chipFont.fontSize) || \"12px\"\n                                },\n                                onMouseEnter: (e)=>{\n                                    if (!selectedChips.includes(chip)) {\n                                        e.currentTarget.style.backgroundColor = \"#F0F0F0\";\n                                    }\n                                },\n                                onMouseLeave: (e)=>{\n                                    if (!selectedChips.includes(chip)) {\n                                        e.currentTarget.style.backgroundColor = chipBackgroundColor;\n                                    }\n                                },\n                                children: [\n                                    showChipBeforeIcon && chipBeforeIcon && renderChipIcon(chipBeforeIcon),\n                                    chip,\n                                    showChipAfterIcon && chipAfterIcon && renderChipIcon(chipAfterIcon)\n                                ]\n                            }, index, true, {\n                                fileName: \"/Users/zibon/Documents/Vibe/Cursor/Framer Workshop/framer-workshop/src/components/FormBuilderOrg.tsx\",\n                                lineNumber: 762,\n                                columnNumber: 33\n                            }, this))\n                    }, void 0, false, {\n                        fileName: \"/Users/zibon/Documents/Vibe/Cursor/Framer Workshop/framer-workshop/src/components/FormBuilderOrg.tsx\",\n                        lineNumber: 753,\n                        columnNumber: 25\n                    }, this),\n                    showButton && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        type: \"button\",\n                        onClick: handleButtonClick,\n                        disabled: isButtonDisabled,\n                        style: {\n                            backgroundColor: isButtonDisabled ? buttonDisabledBackground : buttonEnabledBackground,\n                            color: isButtonDisabled ? buttonDisabledText : buttonEnabledText,\n                            border: \"none\",\n                            borderRadius: buttonBorderRadius,\n                            padding: buttonPadding,\n                            cursor: isButtonDisabled ? \"not-allowed\" : \"pointer\",\n                            transition: \"all 0.2s ease\",\n                            outline: \"none\",\n                            marginTop: \"8px\",\n                            ...buttonFont,\n                            fontSize: (buttonFont === null || buttonFont === void 0 ? void 0 : buttonFont.fontSize) || \"14px\",\n                            opacity: isButtonDisabled ? 0.6 : 1\n                        },\n                        children: buttonText\n                    }, void 0, false, {\n                        fileName: \"/Users/zibon/Documents/Vibe/Cursor/Framer Workshop/framer-workshop/src/components/FormBuilderOrg.tsx\",\n                        lineNumber: 813,\n                        columnNumber: 21\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/zibon/Documents/Vibe/Cursor/Framer Workshop/framer-workshop/src/components/FormBuilderOrg.tsx\",\n                lineNumber: 718,\n                columnNumber: 13\n            }, this)\n        ]\n    }, void 0, true);\n}\n_s(FormBuilder, \"F8YxJbXMacgIFj3p0T3NR8WCPfI=\", false, function() {\n    return [\n        framer_motion__WEBPACK_IMPORTED_MODULE_4__.useMotionValue,\n        framer_motion__WEBPACK_IMPORTED_MODULE_4__.useMotionValue\n    ];\n});\n_c = FormBuilder;\n(0,framer__WEBPACK_IMPORTED_MODULE_2__.addPropertyControls)(FormBuilder, {\n    // === BASIC SETTINGS ===\n    fieldType: {\n        type: framer__WEBPACK_IMPORTED_MODULE_2__.ControlType.Enum,\n        title: \"Field Type\",\n        options: [\n            \"text\",\n            \"textarea\",\n            \"dropdown\",\n            \"radio\",\n            \"chips\"\n        ],\n        optionTitles: [\n            \"Text\",\n            \"Text Area\",\n            \"Dropdown\",\n            \"Radio\",\n            \"Chips\"\n        ],\n        defaultValue: \"text\"\n    },\n    required: {\n        type: framer__WEBPACK_IMPORTED_MODULE_2__.ControlType.Boolean,\n        title: \"Required\",\n        defaultValue: false,\n        enabledTitle: \"Yes\",\n        disabledTitle: \"No\"\n    },\n    // === LABEL SETTINGS ===\n    showLabel: {\n        type: framer__WEBPACK_IMPORTED_MODULE_2__.ControlType.Boolean,\n        title: \"Show Label\",\n        defaultValue: true,\n        enabledTitle: \"Show\",\n        disabledTitle: \"Hide\"\n    },\n    label: {\n        type: framer__WEBPACK_IMPORTED_MODULE_2__.ControlType.String,\n        title: \"Label\",\n        defaultValue: \"Field Label\",\n        hidden: (param)=>{\n            let { showLabel } = param;\n            return !showLabel;\n        }\n    },\n    labelColor: {\n        type: framer__WEBPACK_IMPORTED_MODULE_2__.ControlType.Color,\n        title: \"Label Color\",\n        defaultValue: \"#000000\",\n        hidden: (param)=>{\n            let { showLabel } = param;\n            return !showLabel;\n        }\n    },\n    labelFont: {\n        type: framer__WEBPACK_IMPORTED_MODULE_2__.ControlType.Font,\n        title: \"Label Font\",\n        defaultValue: {\n            fontSize: \"14px\",\n            variant: \"Medium\",\n            letterSpacing: \"-0.01em\",\n            lineHeight: \"1.2em\"\n        },\n        controls: \"extended\",\n        defaultFontType: \"sans-serif\",\n        hidden: (param)=>{\n            let { showLabel } = param;\n            return !showLabel;\n        }\n    },\n    // === FIELD-SPECIFIC OPTIONS ===\n    dropdownOptions: {\n        type: framer__WEBPACK_IMPORTED_MODULE_2__.ControlType.Array,\n        title: \"Dropdown Options\",\n        control: {\n            type: framer__WEBPACK_IMPORTED_MODULE_2__.ControlType.Object,\n            controls: {\n                label: {\n                    type: framer__WEBPACK_IMPORTED_MODULE_2__.ControlType.String,\n                    defaultValue: \"Option\"\n                },\n                value: {\n                    type: framer__WEBPACK_IMPORTED_MODULE_2__.ControlType.String,\n                    defaultValue: \"option\"\n                }\n            }\n        },\n        defaultValue: [\n            {\n                label: \"Option 1\",\n                value: \"option1\"\n            },\n            {\n                label: \"Option 2\",\n                value: \"option2\"\n            },\n            {\n                label: \"Option 3\",\n                value: \"option3\"\n            }\n        ],\n        hidden: (param)=>{\n            let { fieldType } = param;\n            return fieldType !== \"dropdown\";\n        }\n    },\n    radioOptions: {\n        type: framer__WEBPACK_IMPORTED_MODULE_2__.ControlType.Array,\n        title: \"Radio Options\",\n        control: {\n            type: framer__WEBPACK_IMPORTED_MODULE_2__.ControlType.Object,\n            controls: {\n                label: {\n                    type: framer__WEBPACK_IMPORTED_MODULE_2__.ControlType.String,\n                    defaultValue: \"Choice\"\n                },\n                value: {\n                    type: framer__WEBPACK_IMPORTED_MODULE_2__.ControlType.String,\n                    defaultValue: \"choice\"\n                }\n            }\n        },\n        defaultValue: [\n            {\n                label: \"Choice A\",\n                value: \"a\"\n            },\n            {\n                label: \"Choice B\",\n                value: \"b\"\n            },\n            {\n                label: \"Choice C\",\n                value: \"c\"\n            }\n        ],\n        hidden: (param)=>{\n            let { fieldType } = param;\n            return fieldType !== \"radio\";\n        }\n    },\n    // === INPUT CONTENT ===\n    placeholder: {\n        type: framer__WEBPACK_IMPORTED_MODULE_2__.ControlType.String,\n        title: \"Placeholder\",\n        defaultValue: \"Enter text...\",\n        hidden: (param)=>{\n            let { fieldType } = param;\n            return fieldType === \"radio\";\n        }\n    },\n    placeholderColor: {\n        type: framer__WEBPACK_IMPORTED_MODULE_2__.ControlType.Color,\n        title: \"Placeholder Color\",\n        defaultValue: \"#999999\",\n        hidden: (param)=>{\n            let { fieldType } = param;\n            return fieldType === \"radio\";\n        }\n    },\n    // === CLEAR BUTTON ===\n    showClearButton: {\n        type: framer__WEBPACK_IMPORTED_MODULE_2__.ControlType.Boolean,\n        title: \"Clear Button\",\n        defaultValue: true,\n        enabledTitle: \"Show\",\n        disabledTitle: \"Hide\",\n        hidden: (param)=>{\n            let { fieldType } = param;\n            return fieldType !== \"text\" && fieldType !== \"textarea\" && fieldType !== \"chips\";\n        }\n    },\n    clearButtonColor: {\n        type: framer__WEBPACK_IMPORTED_MODULE_2__.ControlType.Color,\n        title: \"Clear Button Color\",\n        defaultValue: \"#CCCCCC\",\n        hidden: (param)=>{\n            let { fieldType, showClearButton } = param;\n            return !showClearButton || fieldType !== \"text\" && fieldType !== \"textarea\" && fieldType !== \"chips\";\n        }\n    },\n    // === FIELD ICONS ===\n    showBeforeIcon: {\n        type: framer__WEBPACK_IMPORTED_MODULE_2__.ControlType.Boolean,\n        title: \"Before Icon\",\n        defaultValue: false,\n        enabledTitle: \"Show\",\n        disabledTitle: \"Hide\",\n        hidden: (param)=>{\n            let { fieldType } = param;\n            return fieldType === \"radio\";\n        }\n    },\n    beforeIcon: {\n        type: framer__WEBPACK_IMPORTED_MODULE_2__.ControlType.ComponentInstance,\n        title: \"Before Icon\",\n        hidden: (param)=>{\n            let { showBeforeIcon, fieldType } = param;\n            return !showBeforeIcon || fieldType === \"radio\";\n        }\n    },\n    showAfterIcon: {\n        type: framer__WEBPACK_IMPORTED_MODULE_2__.ControlType.Boolean,\n        title: \"After Icon\",\n        defaultValue: false,\n        enabledTitle: \"Show\",\n        disabledTitle: \"Hide\",\n        hidden: (param)=>{\n            let { fieldType } = param;\n            return fieldType === \"radio\";\n        }\n    },\n    afterIcon: {\n        type: framer__WEBPACK_IMPORTED_MODULE_2__.ControlType.ComponentInstance,\n        title: \"After Icon\",\n        hidden: (param)=>{\n            let { showAfterIcon, fieldType } = param;\n            return !showAfterIcon || fieldType === \"radio\";\n        }\n    },\n    iconSize: {\n        type: framer__WEBPACK_IMPORTED_MODULE_2__.ControlType.Number,\n        title: \"Icon Size\",\n        defaultValue: 16,\n        min: 12,\n        max: 24,\n        step: 1,\n        unit: \"px\",\n        hidden: (param)=>{\n            let { showBeforeIcon, showAfterIcon, fieldType } = param;\n            return !showBeforeIcon && !showAfterIcon || fieldType === \"radio\";\n        }\n    },\n    // === CHIP SETTINGS ===\n    showChips: {\n        type: framer__WEBPACK_IMPORTED_MODULE_2__.ControlType.Boolean,\n        title: \"Show Chips\",\n        defaultValue: true,\n        enabledTitle: \"Show\",\n        disabledTitle: \"Hide\",\n        hidden: (param)=>{\n            let { fieldType } = param;\n            return fieldType !== \"text\" && fieldType !== \"textarea\" && fieldType !== \"chips\";\n        }\n    },\n    chipSuggestions: {\n        type: framer__WEBPACK_IMPORTED_MODULE_2__.ControlType.Array,\n        title: \"Chip Suggestions\",\n        control: {\n            type: framer__WEBPACK_IMPORTED_MODULE_2__.ControlType.String\n        },\n        defaultValue: [\n            \"Suggestion 1\",\n            \"Suggestion 2\",\n            \"Suggestion 3\",\n            \"Suggestion 4\"\n        ],\n        hidden: (param)=>{\n            let { fieldType, showChips } = param;\n            return !showChips || fieldType !== \"text\" && fieldType !== \"textarea\" && fieldType !== \"chips\";\n        }\n    },\n    // === CHIP STYLING ===\n    chipBackgroundColor: {\n        type: framer__WEBPACK_IMPORTED_MODULE_2__.ControlType.Color,\n        title: \"Chip Background\",\n        defaultValue: \"#F5F5F5\",\n        hidden: (param)=>{\n            let { fieldType, showChips } = param;\n            return !showChips || fieldType !== \"text\" && fieldType !== \"textarea\" && fieldType !== \"chips\";\n        }\n    },\n    chipTextColor: {\n        type: framer__WEBPACK_IMPORTED_MODULE_2__.ControlType.Color,\n        title: \"Chip Text\",\n        defaultValue: \"#000000\",\n        hidden: (param)=>{\n            let { fieldType, showChips } = param;\n            return !showChips || fieldType !== \"text\" && fieldType !== \"textarea\" && fieldType !== \"chips\";\n        }\n    },\n    chipSelectedBackgroundColor: {\n        type: framer__WEBPACK_IMPORTED_MODULE_2__.ControlType.Color,\n        title: \"Selected Background\",\n        defaultValue: \"#000000\",\n        hidden: (param)=>{\n            let { fieldType, showChips } = param;\n            return !showChips || fieldType !== \"text\" && fieldType !== \"textarea\" && fieldType !== \"chips\";\n        }\n    },\n    chipSelectedTextColor: {\n        type: framer__WEBPACK_IMPORTED_MODULE_2__.ControlType.Color,\n        title: \"Selected Text\",\n        defaultValue: \"#FFFFFF\",\n        hidden: (param)=>{\n            let { fieldType, showChips } = param;\n            return !showChips || fieldType !== \"text\" && fieldType !== \"textarea\" && fieldType !== \"chips\";\n        }\n    },\n    chipBorderColor: {\n        type: framer__WEBPACK_IMPORTED_MODULE_2__.ControlType.Color,\n        title: \"Chip Border\",\n        defaultValue: \"#EEEEEE\",\n        hidden: (param)=>{\n            let { fieldType, showChips } = param;\n            return !showChips || fieldType !== \"text\" && fieldType !== \"textarea\" && fieldType !== \"chips\";\n        }\n    },\n    chipBorderRadius: {\n        type: framer__WEBPACK_IMPORTED_MODULE_2__.ControlType.Number,\n        title: \"Chip Radius\",\n        defaultValue: 16,\n        min: 0,\n        max: 30,\n        step: 1,\n        unit: \"px\",\n        hidden: (param)=>{\n            let { fieldType, showChips } = param;\n            return !showChips || fieldType !== \"text\" && fieldType !== \"textarea\" && fieldType !== \"chips\";\n        }\n    },\n    chipPadding: {\n        type: framer__WEBPACK_IMPORTED_MODULE_2__.ControlType.Number,\n        title: \"Chip Padding\",\n        defaultValue: 8,\n        min: 2,\n        max: 16,\n        step: 1,\n        unit: \"px\",\n        hidden: (param)=>{\n            let { fieldType, showChips } = param;\n            return !showChips || fieldType !== \"text\" && fieldType !== \"textarea\" && fieldType !== \"chips\";\n        }\n    },\n    chipGap: {\n        type: framer__WEBPACK_IMPORTED_MODULE_2__.ControlType.Number,\n        title: \"Chip Gap\",\n        defaultValue: 6,\n        min: 0,\n        max: 20,\n        step: 1,\n        unit: \"px\",\n        hidden: (param)=>{\n            let { fieldType, showChips } = param;\n            return !showChips || fieldType !== \"text\" && fieldType !== \"textarea\" && fieldType !== \"chips\";\n        }\n    },\n    chipFont: {\n        type: framer__WEBPACK_IMPORTED_MODULE_2__.ControlType.Font,\n        title: \"Chip Font\",\n        defaultValue: {\n            fontSize: \"12px\",\n            variant: \"Medium\",\n            letterSpacing: \"-0.01em\",\n            lineHeight: \"1.2em\"\n        },\n        controls: \"extended\",\n        defaultFontType: \"sans-serif\",\n        hidden: (param)=>{\n            let { fieldType, showChips } = param;\n            return !showChips || fieldType !== \"text\" && fieldType !== \"textarea\" && fieldType !== \"chips\";\n        }\n    },\n    // === CHIP ICONS ===\n    showChipBeforeIcon: {\n        type: framer__WEBPACK_IMPORTED_MODULE_2__.ControlType.Boolean,\n        title: \"Chip Before Icon\",\n        defaultValue: false,\n        enabledTitle: \"Show\",\n        disabledTitle: \"Hide\",\n        hidden: (param)=>{\n            let { fieldType, showChips } = param;\n            return !showChips || fieldType !== \"text\" && fieldType !== \"textarea\" && fieldType !== \"chips\";\n        }\n    },\n    chipBeforeIcon: {\n        type: framer__WEBPACK_IMPORTED_MODULE_2__.ControlType.ComponentInstance,\n        title: \"Before Icon\",\n        hidden: (param)=>{\n            let { fieldType, showChips, showChipBeforeIcon } = param;\n            return !showChips || !showChipBeforeIcon || fieldType !== \"text\" && fieldType !== \"textarea\" && fieldType !== \"chips\";\n        }\n    },\n    showChipAfterIcon: {\n        type: framer__WEBPACK_IMPORTED_MODULE_2__.ControlType.Boolean,\n        title: \"Chip After Icon\",\n        defaultValue: false,\n        enabledTitle: \"Show\",\n        disabledTitle: \"Hide\",\n        hidden: (param)=>{\n            let { fieldType, showChips } = param;\n            return !showChips || fieldType !== \"text\" && fieldType !== \"textarea\" && fieldType !== \"chips\";\n        }\n    },\n    chipAfterIcon: {\n        type: framer__WEBPACK_IMPORTED_MODULE_2__.ControlType.ComponentInstance,\n        title: \"After Icon\",\n        hidden: (param)=>{\n            let { fieldType, showChips, showChipAfterIcon } = param;\n            return !showChips || !showChipAfterIcon || fieldType !== \"text\" && fieldType !== \"textarea\" && fieldType !== \"chips\";\n        }\n    },\n    chipIconSize: {\n        type: framer__WEBPACK_IMPORTED_MODULE_2__.ControlType.Number,\n        title: \"Chip Icon Size\",\n        defaultValue: 12,\n        min: 8,\n        max: 20,\n        step: 1,\n        unit: \"px\",\n        hidden: (param)=>{\n            let { fieldType, showChips, showChipBeforeIcon, showChipAfterIcon } = param;\n            return !showChips || !showChipBeforeIcon && !showChipAfterIcon || fieldType !== \"text\" && fieldType !== \"textarea\" && fieldType !== \"chips\";\n        }\n    },\n    // === FIELD STYLING ===\n    backgroundColor: {\n        type: framer__WEBPACK_IMPORTED_MODULE_2__.ControlType.Color,\n        title: \"Background\",\n        defaultValue: \"#FFFFFF\",\n        hidden: (param)=>{\n            let { fieldType } = param;\n            return fieldType === \"radio\";\n        }\n    },\n    borderColor: {\n        type: framer__WEBPACK_IMPORTED_MODULE_2__.ControlType.Color,\n        title: \"Border Color\",\n        defaultValue: \"#EEEEEE\",\n        hidden: (param)=>{\n            let { fieldType } = param;\n            return fieldType === \"radio\";\n        }\n    },\n    focusColor: {\n        type: framer__WEBPACK_IMPORTED_MODULE_2__.ControlType.Color,\n        title: \"Focus Color\",\n        defaultValue: \"#000000\",\n        hidden: (param)=>{\n            let { fieldType } = param;\n            return fieldType === \"radio\";\n        }\n    },\n    textColor: {\n        type: framer__WEBPACK_IMPORTED_MODULE_2__.ControlType.Color,\n        title: \"Text Color\",\n        defaultValue: \"#000000\",\n        hidden: (param)=>{\n            let { fieldType } = param;\n            return fieldType === \"radio\";\n        }\n    },\n    borderRadius: {\n        type: framer__WEBPACK_IMPORTED_MODULE_2__.ControlType.BorderRadius,\n        title: \"Border Radius\",\n        defaultValue: \"8px\",\n        hidden: (param)=>{\n            let { fieldType } = param;\n            return fieldType === \"radio\";\n        }\n    },\n    heightMode: {\n        type: framer__WEBPACK_IMPORTED_MODULE_2__.ControlType.Enum,\n        title: \"Height Mode\",\n        options: [\n            \"fixed\",\n            \"fit\"\n        ],\n        optionTitles: [\n            \"Fixed\",\n            \"Fit\"\n        ],\n        defaultValue: \"fixed\",\n        hidden: (param)=>{\n            let { fieldType } = param;\n            return fieldType === \"radio\";\n        }\n    },\n    height: {\n        type: framer__WEBPACK_IMPORTED_MODULE_2__.ControlType.Number,\n        title: \"Field Height\",\n        defaultValue: 40,\n        min: 20,\n        max: 100,\n        step: 1,\n        unit: \"px\",\n        hidden: (param)=>{\n            let { fieldType, heightMode } = param;\n            return fieldType === \"radio\" || heightMode === \"fit\";\n        }\n    },\n    padding: {\n        type: framer__WEBPACK_IMPORTED_MODULE_2__.ControlType.Padding,\n        title: \"Padding\",\n        defaultValue: \"12px\",\n        hidden: (param)=>{\n            let { fieldType } = param;\n            return fieldType === \"radio\";\n        }\n    },\n    // === TYPOGRAPHY ===\n    inputFont: {\n        type: framer__WEBPACK_IMPORTED_MODULE_2__.ControlType.Font,\n        title: \"Input Font\",\n        defaultValue: {\n            fontSize: \"14px\",\n            variant: \"Regular\",\n            letterSpacing: \"-0.01em\",\n            lineHeight: \"1.3em\"\n        },\n        controls: \"extended\",\n        defaultFontType: \"sans-serif\",\n        hidden: (param)=>{\n            let { fieldType } = param;\n            return fieldType === \"radio\";\n        }\n    },\n    // === BUTTON SETTINGS ===\n    showButton: {\n        type: framer__WEBPACK_IMPORTED_MODULE_2__.ControlType.Boolean,\n        title: \"Show Button\",\n        defaultValue: false,\n        enabledTitle: \"Show\",\n        disabledTitle: \"Hide\"\n    },\n    buttonText: {\n        type: framer__WEBPACK_IMPORTED_MODULE_2__.ControlType.String,\n        title: \"Button Text\",\n        defaultValue: \"Submit\",\n        hidden: (param)=>{\n            let { showButton } = param;\n            return !showButton;\n        }\n    },\n    buttonState: {\n        type: framer__WEBPACK_IMPORTED_MODULE_2__.ControlType.Enum,\n        title: \"Button State\",\n        options: [\n            \"enabled\",\n            \"disabled\"\n        ],\n        optionTitles: [\n            \"Enabled\",\n            \"Disabled\"\n        ],\n        defaultValue: \"enabled\",\n        hidden: (param)=>{\n            let { showButton } = param;\n            return !showButton;\n        }\n    },\n    linkedButton: {\n        type: framer__WEBPACK_IMPORTED_MODULE_2__.ControlType.ComponentInstance,\n        title: \"Linked Button\",\n        description: \"Link to an external Button component anywhere in your project\"\n    },\n    componentId: {\n        type: framer__WEBPACK_IMPORTED_MODULE_2__.ControlType.String,\n        title: \"Component ID\",\n        defaultValue: \"form-123\",\n        description: \"Unique identifier for this form (auto-generated if empty)\"\n    },\n    linkedButtonId: {\n        type: framer__WEBPACK_IMPORTED_MODULE_2__.ControlType.String,\n        title: \"Linked Button ID\",\n        defaultValue: \"\",\n        description: \"Enter the Button's Component ID to link them (works anywhere in Framer)\"\n    },\n    // === BUTTON STYLING ===\n    buttonEnabledBackground: {\n        type: framer__WEBPACK_IMPORTED_MODULE_2__.ControlType.Color,\n        title: \"Button Background\",\n        defaultValue: \"#000000\",\n        hidden: (param)=>{\n            let { showButton } = param;\n            return !showButton;\n        }\n    },\n    buttonEnabledText: {\n        type: framer__WEBPACK_IMPORTED_MODULE_2__.ControlType.Color,\n        title: \"Button Text Color\",\n        defaultValue: \"#FFFFFF\",\n        hidden: (param)=>{\n            let { showButton } = param;\n            return !showButton;\n        }\n    },\n    buttonDisabledBackground: {\n        type: framer__WEBPACK_IMPORTED_MODULE_2__.ControlType.Color,\n        title: \"Disabled Background\",\n        defaultValue: \"#CCCCCC\",\n        hidden: (param)=>{\n            let { showButton } = param;\n            return !showButton;\n        }\n    },\n    buttonDisabledText: {\n        type: framer__WEBPACK_IMPORTED_MODULE_2__.ControlType.Color,\n        title: \"Disabled Text Color\",\n        defaultValue: \"#666666\",\n        hidden: (param)=>{\n            let { showButton } = param;\n            return !showButton;\n        }\n    },\n    buttonBorderRadius: {\n        type: framer__WEBPACK_IMPORTED_MODULE_2__.ControlType.BorderRadius,\n        title: \"Button Border Radius\",\n        defaultValue: \"8px\",\n        hidden: (param)=>{\n            let { showButton } = param;\n            return !showButton;\n        }\n    },\n    buttonPadding: {\n        type: framer__WEBPACK_IMPORTED_MODULE_2__.ControlType.Padding,\n        title: \"Button Padding\",\n        defaultValue: \"12px\",\n        hidden: (param)=>{\n            let { showButton } = param;\n            return !showButton;\n        }\n    },\n    buttonFont: {\n        type: framer__WEBPACK_IMPORTED_MODULE_2__.ControlType.Font,\n        title: \"Button Font\",\n        defaultValue: {\n            fontSize: \"14px\",\n            variant: \"Medium\",\n            letterSpacing: \"0\",\n            lineHeight: \"1.2em\"\n        },\n        controls: \"extended\",\n        defaultFontType: \"sans-serif\",\n        hidden: (param)=>{\n            let { showButton } = param;\n            return !showButton;\n        }\n    }\n});\nvar _c;\n$RefreshReg$(_c, \"FormBuilder\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/FormBuilderOrg.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/components/LinkingTest.tsx":
/*!****************************************!*\
  !*** ./src/components/LinkingTest.tsx ***!
  \****************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ LinkingTest)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var framer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! framer */ \"(app-pages-browser)/./node_modules/framer/build/esm/framer.debug.js\");\n/* harmony import */ var _FormBuilderOrg__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./FormBuilderOrg */ \"(app-pages-browser)/./src/components/FormBuilderOrg.tsx\");\n/* harmony import */ var _Button__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Button */ \"(app-pages-browser)/./src/components/Button.tsx\");\n\n\n\n\n\n/**\n * @framerSupportedLayoutWidth any-prefer-fixed\n * @framerSupportedLayoutHeight auto\n */ function LinkingTest(props) {\n    const { testMode = \"simple\", formId = \"test-form\", buttonId = \"test-button\" } = props;\n    const getTestConfig = ()=>{\n        switch(testMode){\n            case \"simple\":\n                return {\n                    formId: \"simple-form\",\n                    buttonId: \"simple-button\",\n                    formLabel: \"Simple Test\",\n                    buttonText: \"Test Link\"\n                };\n            case \"advanced\":\n                return {\n                    formId: \"advanced-form\",\n                    buttonId: \"advanced-button\",\n                    formLabel: \"Advanced Test\",\n                    buttonText: \"Advanced Link\"\n                };\n            case \"custom\":\n                return {\n                    formId,\n                    buttonId,\n                    formLabel: \"Custom Test\",\n                    buttonText: \"Custom Link\"\n                };\n            default:\n                return {\n                    formId: \"default-form\",\n                    buttonId: \"default-button\",\n                    formLabel: \"Default Test\",\n                    buttonText: \"Default Link\"\n                };\n        }\n    };\n    const config = getTestConfig();\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        style: {\n            display: \"flex\",\n            flexDirection: \"column\",\n            gap: \"16px\",\n            padding: \"20px\",\n            border: \"2px solid #E5E7EB\",\n            borderRadius: \"12px\",\n            backgroundColor: \"#F9FAFB\"\n        },\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                style: {\n                    padding: \"12px\",\n                    backgroundColor: \"#3B82F6\",\n                    color: \"white\",\n                    borderRadius: \"8px\",\n                    textAlign: \"center\",\n                    fontWeight: \"600\"\n                },\n                children: \"\\uD83D\\uDD17 ID-Based Linking Test\"\n            }, void 0, false, {\n                fileName: \"/Users/zibon/Documents/Vibe/Cursor/Framer Workshop/framer-workshop/src/components/LinkingTest.tsx\",\n                lineNumber: 68,\n                columnNumber: 13\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                style: {\n                    display: \"flex\",\n                    gap: \"16px\",\n                    alignItems: \"flex-start\"\n                },\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        style: {\n                            flex: 1\n                        },\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_FormBuilderOrg__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                            fieldType: \"text\",\n                            label: config.formLabel,\n                            showLabel: true,\n                            placeholder: \"Type to test linking...\",\n                            placeholderColor: \"#9CA3AF\",\n                            required: true,\n                            showChips: true,\n                            chipSuggestions: [\n                                \"test1\",\n                                \"test2\",\n                                \"test3\"\n                            ],\n                            backgroundColor: \"#FFFFFF\",\n                            borderColor: \"#E5E7EB\",\n                            focusColor: \"#3B82F6\",\n                            textColor: \"#111827\",\n                            labelColor: \"#374151\",\n                            borderRadius: \"8px\",\n                            heightMode: \"fixed\",\n                            height: 40,\n                            padding: \"12px 16px\",\n                            showClearButton: true,\n                            clearButtonColor: \"#9CA3AF\",\n                            showButton: false,\n                            componentId: config.formId,\n                            linkedButtonId: config.buttonId\n                        }, void 0, false, {\n                            fileName: \"/Users/zibon/Documents/Vibe/Cursor/Framer Workshop/framer-workshop/src/components/LinkingTest.tsx\",\n                            lineNumber: 85,\n                            columnNumber: 21\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"/Users/zibon/Documents/Vibe/Cursor/Framer Workshop/framer-workshop/src/components/LinkingTest.tsx\",\n                        lineNumber: 84,\n                        columnNumber: 17\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        style: {\n                            flex: \"0 0 auto\"\n                        },\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_Button__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                            text: config.buttonText,\n                            variant: \"primary\",\n                            size: \"medium\",\n                            disabled: false,\n                            loading: false,\n                            fullWidth: false,\n                            externalDisabled: false,\n                            borderRadius: \"8px\",\n                            padding: \"12px 24px\",\n                            componentId: config.buttonId,\n                            linkedFormId: config.formId\n                        }, void 0, false, {\n                            fileName: \"/Users/zibon/Documents/Vibe/Cursor/Framer Workshop/framer-workshop/src/components/LinkingTest.tsx\",\n                            lineNumber: 112,\n                            columnNumber: 21\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"/Users/zibon/Documents/Vibe/Cursor/Framer Workshop/framer-workshop/src/components/LinkingTest.tsx\",\n                        lineNumber: 111,\n                        columnNumber: 17\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/zibon/Documents/Vibe/Cursor/Framer Workshop/framer-workshop/src/components/LinkingTest.tsx\",\n                lineNumber: 79,\n                columnNumber: 13\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                style: {\n                    padding: \"8px 12px\",\n                    backgroundColor: \"#F3F4F6\",\n                    borderRadius: \"6px\",\n                    fontSize: \"12px\",\n                    color: \"#6B7280\",\n                    fontFamily: \"monospace\"\n                },\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"strong\", {\n                        children: \"Form ID:\"\n                    }, void 0, false, {\n                        fileName: \"/Users/zibon/Documents/Vibe/Cursor/Framer Workshop/framer-workshop/src/components/LinkingTest.tsx\",\n                        lineNumber: 136,\n                        columnNumber: 17\n                    }, this),\n                    \" \",\n                    config.formId,\n                    \" | \",\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"strong\", {\n                        children: \"Button ID:\"\n                    }, void 0, false, {\n                        fileName: \"/Users/zibon/Documents/Vibe/Cursor/Framer Workshop/framer-workshop/src/components/LinkingTest.tsx\",\n                        lineNumber: 136,\n                        columnNumber: 61\n                    }, this),\n                    \" \",\n                    config.buttonId\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/zibon/Documents/Vibe/Cursor/Framer Workshop/framer-workshop/src/components/LinkingTest.tsx\",\n                lineNumber: 128,\n                columnNumber: 13\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/zibon/Documents/Vibe/Cursor/Framer Workshop/framer-workshop/src/components/LinkingTest.tsx\",\n        lineNumber: 59,\n        columnNumber: 9\n    }, this);\n}\n_c = LinkingTest;\n(0,framer__WEBPACK_IMPORTED_MODULE_2__.addPropertyControls)(LinkingTest, {\n    testMode: {\n        type: framer__WEBPACK_IMPORTED_MODULE_2__.ControlType.Enum,\n        title: \"Test Mode\",\n        options: [\n            \"simple\",\n            \"advanced\",\n            \"custom\"\n        ],\n        optionTitles: [\n            \"Simple\",\n            \"Advanced\",\n            \"Custom\"\n        ],\n        defaultValue: \"simple\"\n    },\n    formId: {\n        type: framer__WEBPACK_IMPORTED_MODULE_2__.ControlType.String,\n        title: \"Custom Form ID\",\n        defaultValue: \"test-form\",\n        description: \"Custom form ID (only used in custom mode)\",\n        hidden: (param)=>{\n            let { testMode } = param;\n            return testMode !== \"custom\";\n        }\n    },\n    buttonId: {\n        type: framer__WEBPACK_IMPORTED_MODULE_2__.ControlType.String,\n        title: \"Custom Button ID\",\n        defaultValue: \"test-button\",\n        description: \"Custom button ID (only used in custom mode)\",\n        hidden: (param)=>{\n            let { testMode } = param;\n            return testMode !== \"custom\";\n        }\n    }\n});\nvar _c;\n$RefreshReg$(_c, \"LinkingTest\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/LinkingTest.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/components/SimpleGlobalState.tsx":
/*!**********************************************!*\
  !*** ./src/components/SimpleGlobalState.tsx ***!
  \**********************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ SimpleGlobalState),\n/* harmony export */   getComponentData: () => (/* binding */ getComponentData),\n/* harmony export */   setComponentData: () => (/* binding */ setComponentData),\n/* harmony export */   subscribeToComponent: () => (/* binding */ subscribeToComponent),\n/* harmony export */   unsubscribeFromComponent: () => (/* binding */ unsubscribeFromComponent)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var framer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! framer */ \"(app-pages-browser)/./node_modules/framer/build/esm/framer.debug.js\");\n\n\n/**\n * @framerSupportedLayoutWidth any-prefer-fixed\n * @framerSupportedLayoutHeight auto\n */ function SimpleGlobalState(props) {\n    // This component is invisible but provides global state functionality\n    return null;\n}\n_c = SimpleGlobalState;\n// Very simple global state - just use a plain object\nlet globalState = {};\n// Helper functions for global state management\nconst setComponentData = (id, type, data)=>{\n    globalState[id] = {\n        id,\n        type,\n        data\n    };\n    console.log(\"GlobalState: Set data for \".concat(id, \":\"), data);\n};\nconst getComponentData = (id)=>{\n    return globalState[id];\n};\nconst subscribeToComponent = (id, callback)=>{\n    console.log(\"GlobalState: Subscribed to \".concat(id));\n// Simple implementation - just log for now\n};\nconst unsubscribeFromComponent = (id, callback)=>{\n    console.log(\"GlobalState: Unsubscribed from \".concat(id));\n// Simple implementation - just log for now\n};\n(0,framer__WEBPACK_IMPORTED_MODULE_1__.addPropertyControls)(SimpleGlobalState, {\n});\nvar _c;\n$RefreshReg$(_c, \"SimpleGlobalState\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9jb21wb25lbnRzL1NpbXBsZUdsb2JhbFN0YXRlLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUF5QjtBQUNnQztBQU16RDs7O0NBR0MsR0FDYyxTQUFTRSxrQkFBa0JDLEtBQTZCO0lBQ3JFLHNFQUFzRTtJQUN0RSxPQUFPO0FBQ1Q7S0FId0JEO0FBS3hCLHFEQUFxRDtBQUNyRCxJQUFJRSxjQUFtQixDQUFDO0FBRXhCLCtDQUErQztBQUN4QyxNQUFNQyxtQkFBbUIsQ0FBQ0MsSUFBWUMsTUFBeUJDO0lBQ3BFSixXQUFXLENBQUNFLEdBQUcsR0FBRztRQUFFQTtRQUFJQztRQUFNQztJQUFLO0lBQ25DQyxRQUFRQyxHQUFHLENBQUMsNkJBQWdDLE9BQUhKLElBQUcsTUFBSUU7QUFDbEQsRUFBQztBQUVNLE1BQU1HLG1CQUFtQixDQUFDTDtJQUMvQixPQUFPRixXQUFXLENBQUNFLEdBQUc7QUFDeEIsRUFBQztBQUVNLE1BQU1NLHVCQUF1QixDQUFDTixJQUFZTztJQUMvQ0osUUFBUUMsR0FBRyxDQUFDLDhCQUFpQyxPQUFISjtBQUMxQywyQ0FBMkM7QUFDN0MsRUFBQztBQUVNLE1BQU1RLDJCQUEyQixDQUFDUixJQUFZTztJQUNuREosUUFBUUMsR0FBRyxDQUFDLGtDQUFxQyxPQUFISjtBQUM5QywyQ0FBMkM7QUFDN0MsRUFBQztBQUVETCwyREFBbUJBLENBQUNDLG1CQUFtQjtBQUV2QyIsInNvdXJjZXMiOlsiL1VzZXJzL3ppYm9uL0RvY3VtZW50cy9WaWJlL0N1cnNvci9GcmFtZXIgV29ya3Nob3AvZnJhbWVyLXdvcmtzaG9wL3NyYy9jb21wb25lbnRzL1NpbXBsZUdsb2JhbFN0YXRlLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCJcbmltcG9ydCB7IGFkZFByb3BlcnR5Q29udHJvbHMsIENvbnRyb2xUeXBlIH0gZnJvbSBcImZyYW1lclwiXG5cbmludGVyZmFjZSBTaW1wbGVHbG9iYWxTdGF0ZVByb3BzIHtcbiAgLy8gVGhpcyBjb21wb25lbnQgZG9lc24ndCBuZWVkIGFueSBwcm9wcywgaXQganVzdCBwcm92aWRlcyBnbG9iYWwgc3RhdGUgZnVuY3Rpb25hbGl0eVxufVxuXG4vKipcbiAqIEBmcmFtZXJTdXBwb3J0ZWRMYXlvdXRXaWR0aCBhbnktcHJlZmVyLWZpeGVkXG4gKiBAZnJhbWVyU3VwcG9ydGVkTGF5b3V0SGVpZ2h0IGF1dG9cbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gU2ltcGxlR2xvYmFsU3RhdGUocHJvcHM6IFNpbXBsZUdsb2JhbFN0YXRlUHJvcHMpIHtcbiAgLy8gVGhpcyBjb21wb25lbnQgaXMgaW52aXNpYmxlIGJ1dCBwcm92aWRlcyBnbG9iYWwgc3RhdGUgZnVuY3Rpb25hbGl0eVxuICByZXR1cm4gbnVsbFxufVxuXG4vLyBWZXJ5IHNpbXBsZSBnbG9iYWwgc3RhdGUgLSBqdXN0IHVzZSBhIHBsYWluIG9iamVjdFxubGV0IGdsb2JhbFN0YXRlOiBhbnkgPSB7fVxuXG4vLyBIZWxwZXIgZnVuY3Rpb25zIGZvciBnbG9iYWwgc3RhdGUgbWFuYWdlbWVudFxuZXhwb3J0IGNvbnN0IHNldENvbXBvbmVudERhdGEgPSAoaWQ6IHN0cmluZywgdHlwZTogJ2Zvcm0nIHwgJ2J1dHRvbicsIGRhdGE6IGFueSkgPT4ge1xuICBnbG9iYWxTdGF0ZVtpZF0gPSB7IGlkLCB0eXBlLCBkYXRhIH1cbiAgY29uc29sZS5sb2coYEdsb2JhbFN0YXRlOiBTZXQgZGF0YSBmb3IgJHtpZH06YCwgZGF0YSlcbn1cblxuZXhwb3J0IGNvbnN0IGdldENvbXBvbmVudERhdGEgPSAoaWQ6IHN0cmluZykgPT4ge1xuICByZXR1cm4gZ2xvYmFsU3RhdGVbaWRdXG59XG5cbmV4cG9ydCBjb25zdCBzdWJzY3JpYmVUb0NvbXBvbmVudCA9IChpZDogc3RyaW5nLCBjYWxsYmFjazogKGRhdGE6IGFueSkgPT4gdm9pZCkgPT4ge1xuICBjb25zb2xlLmxvZyhgR2xvYmFsU3RhdGU6IFN1YnNjcmliZWQgdG8gJHtpZH1gKVxuICAvLyBTaW1wbGUgaW1wbGVtZW50YXRpb24gLSBqdXN0IGxvZyBmb3Igbm93XG59XG5cbmV4cG9ydCBjb25zdCB1bnN1YnNjcmliZUZyb21Db21wb25lbnQgPSAoaWQ6IHN0cmluZywgY2FsbGJhY2s6IChkYXRhOiBhbnkpID0+IHZvaWQpID0+IHtcbiAgY29uc29sZS5sb2coYEdsb2JhbFN0YXRlOiBVbnN1YnNjcmliZWQgZnJvbSAke2lkfWApXG4gIC8vIFNpbXBsZSBpbXBsZW1lbnRhdGlvbiAtIGp1c3QgbG9nIGZvciBub3dcbn1cblxuYWRkUHJvcGVydHlDb250cm9scyhTaW1wbGVHbG9iYWxTdGF0ZSwge1xuICAvLyBObyB2aXNpYmxlIGNvbnRyb2xzIG5lZWRlZCBmb3IgdGhpcyBjb21wb25lbnRcbn0pXG4iXSwibmFtZXMiOlsiUmVhY3QiLCJhZGRQcm9wZXJ0eUNvbnRyb2xzIiwiU2ltcGxlR2xvYmFsU3RhdGUiLCJwcm9wcyIsImdsb2JhbFN0YXRlIiwic2V0Q29tcG9uZW50RGF0YSIsImlkIiwidHlwZSIsImRhdGEiLCJjb25zb2xlIiwibG9nIiwiZ2V0Q29tcG9uZW50RGF0YSIsInN1YnNjcmliZVRvQ29tcG9uZW50IiwiY2FsbGJhY2siLCJ1bnN1YnNjcmliZUZyb21Db21wb25lbnQiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/SimpleGlobalState.tsx\n"));

/***/ })

}]);